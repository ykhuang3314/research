
            Assura (R) Physical Verification Version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.1
            Release 4.1_USR6_HF3

Copyright (c) Cadence Design Systems. All rights reserved.
@(#)$CDS: assura_64 version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.1 08/29/2019 23:38 (sj-ramneek) $
sub-version 4.1_USR6_HF3, integ signature 2019-08-29-0302

run on s2424 from /pkg/cadence/installs/ASSURA41/tools.lnx86/assura/bin/64bit/assura on Fri Apr 23 16:42:30 2021


Starting /pkg/cadence/installs/ASSURA41//tools.lnx86/assura/bin/aveng /home/ykhuang/research/AssuraDRC/CurrentMirror_x10_LV_DRC.rsf -restart -cdslib /home/ykhuang/research/cds.lib
@(#)$CDS: aveng_64 version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.1 08/29/2019 23:39 (sj-ramneek) $
sub-version 4.1_USR6_HF3, integ signature 2019-08-29-0302

run on s2424 from /pkg/cadence/installs/ASSURA41/tools.lnx86/assura/bin/64bit/aveng on Fri Apr 23 16:42:30 2021


Loading tech rule set file : /home/ykhuang/research/.assuraSetup/Assura/techRuleSets

Loading tech rule set file : /home/ykhuang/research/.assuraSetup/Assura/techRuleSets

Loading tech rule set file : /home/ykhuang/research/.assuraSetup/Assura/techRuleSets

Loading tech rule set file : /home/ykhuang/research/.assuraSetup/Assura/techRuleSets

Loading tech rule set file : /home/ykhuang/research/.assuraSetup/Assura/techRuleSets
 Summary Report: CurrentMirror_x10_LV_DRC.sum
 RSF           : /home/ykhuang/research/AssuraDRC/CurrentMirror_x10_LV_DRC.rsf
 Library Name  : Stimulator_IMP
 CDSLIB Path   : "/home/ykhuang/research/cds.lib"
 Cell Name     : CurrentMirror_x10_LV
 View Name     : layout
 Rules File    : /home/ykhuang/research/.assuraSetup/Assura/../../.xkit/setup/xh018/cadence/assura/Assura/XH018_1143/drc.rul
 Options       : -restart -cdslib /home/ykhuang/research/cds.lib 
 Work Directory: /home/ykhuang/research/AssuraDRC
 Operating Mode: Legacy Mode is Off

Checking out license for Assura_DRC
*WARNING* Failed to obtain license for Assura_DRC
No Assura license available.
Checking out license for Phys_Ver_Sys_DRC_XL
Restarting with VDB Build 2 

Building the VDB part 2 in background mode.

Building the VDB part 3 in background mode.


Running in restart mode.


Finished building the VDB. VDB build times for main process:
cpu: 0.33  elap: 1  pf: 0  in: 0  out: 40  virt: 177M  phys: 897M

Running the Task Processor, 5 cells, 17316 steps...

Top Cell is 'CurrentMirror_x10_LV layout Stimulator_IMP'

Executing: offGridWithinCell(cellPlacements "CELL-OFFGRID" 0.005)

Executing: offGridWithinCell(allLayers 0.005 polygonVertices "POLYGON-OFFGRID" pathVerti...

Executing: lockbn = geomOr(lockbnCDBA lockbnOA)

Executing: lock1bn = geomOr(lock1bnCDBA lock1bnOA)

Executing: lock2bn = geomOr(lock2bnCDBA lock2bnOA)

Executing: lock3bn = geomOr(lock3bnCDBA lock3bnOA)

Executing: lock4bn = geomOr(lock4bnCDBA lock4bnOA)

Executing: met1_bnd = geomOr(met1_bndCDBA met1_bndOA)

Executing: met2_bnd = geomOr(met2_bndCDBA met2_bndOA)

Executing: met3_bnd = geomOr(met3_bndCDBA met3_bndOA)

Executing: gxa = geomOr(mv gxh)

Executing: dnwellmvin = geomInside(dnwellmvdg dnwelldg)

Executing: dnwellmv = geomAndNot(dnwellmvdg dnwellmvin)

Executing: dnwell = geomOr(dnwelldg dnwellmvin) keepLayer(dnwell)

Executing: dnwellg = geomOr(dnwelldg dnwellmvdg)

Executing: hv_nw1 = geomOr(hnw nbd ndf)

Executing: nwellg = geomOr(dnwellg nwell hv_nw1)

Executing: isopwell = geomCat(isopw pdd pbd depl sci pdf)

Executing: alwell = geomOr(nwellg isopwell)

Executing: nwellniso = geomAndNot(nwellg isopwell)

Executing: pwblk_pur = geomAndNot(pwblk geomOr(nwellg nbd pbd depl hnw ndf))

Executing: implant = geomOr(nimp pimp)

Executing: lock = geomOr(lockdg lockbn)

Executing: lock1 = geomOr(lock1dg lock1bn)

Executing: lock2 = geomOr(lock2dg lock2bn)

Executing: lock3 = geomOr(lock3bn)

Executing: lock4 = geomOr(lock4bn)

Executing: anwell3 = geomOr(nwell dnc nbd ndf)

Executing: apwell = geomOr(isopwell dpc)

Executing: bkgnd1 = geomBkgnd()

Executing: lock_f = geomOr(lock)

Executing: lock_all_f = geomOr(lock lock1 lock2 lock3 lock4)

Executing: locked_ext = geomGetBBox(lock_all_f)

Executing: locked_chk = geomAndNot(locked_ext lock_all_f)

Executing: locked_m1n = geomAnd(geomSize(geomButtOrOver(geomAnd(locked_chk met1_bnd) loc...

Executing: locked_m2n = geomAnd(geomSize(geomButtOrOver(geomAnd(locked_chk met2_bnd) loc...

Executing: locked_m3n = geomAnd(geomSize(geomButtOrOver(geomAnd(locked_chk met3_bnd) loc...

Executing: diff_dyf = geomEmpty()

Executing: poly_dyf = geomEmpty()

Executing: met1_dyf = geomEmpty()

Executing: met2_dyf = geomEmpty()

Executing: met3_dyf = geomEmpty()

Executing: met4_dyf = geomEmpty()

Executing: mtp_dyf = geomEmpty()

Executing: mtpl_dyf = geomEmpty()

Executing: diff_dy = geomOr(diff_dyf diff_dyi)

Executing: poly_dy = geomOr(poly_dyf poly_dyi)

Executing: met1_dy = geomOr(met1_dyf met1_dyi)

Executing: met2_dy = geomOr(met2_dyf met2_dyi)

Executing: met3_dy = geomOr(met3_dyf met3_dyi)

Executing: met4_dy = geomOr(met4_dyf met4_dyi)

Executing: mtp_dy = geomOr(mtp_dyf mtp_dyi)

Executing: mtpl_dy = geomOr(mtpl_dyf mtpl_dyi)

Executing: diff = geomOr(diff_dg diff_dy)

Executing: poly = geomOr(polydg poly_dy)

Executing: met1 = geomAndNot(geomOr(met1dg met1_dy) met1s)

Executing: met2 = geomAndNot(geomOr(met2dg met2_dy) met2s)

Executing: met3 = geomAndNot(geomOr(met3dg met3_dy) met3s)

Executing: met4 = geomAndNot(geomOr(met4dg met4_dy) met4s)

Executing: mtp = geomAndNot(geomOr(mtpdg mtp_dy) mtps)

Executing: mtpl = geomOr(mtpldg mtpl_dy)

Executing: ndiffa = geomAnd(diff nimp)

Executing: pdiffa = geomAnd(diff pimp)

Executing: bndiff = geomAnd(diff bnimp)

Executing: gate = geomAnd(diff poly)

Executing: diff1 = geomAndNot(diff poly)

Executing: allngate0 = geomAnd(ndiffa gate)

Executing: allpgate0 = geomAnd(pdiffa gate)

Executing: nsdg = geomAndNot(ndiffa allngate0)

Executing: psdg = geomAndNot(pdiffa allpgate0)

Executing: scr_nwell = geomGetTexted(nwell dio_label "scr")

Executing: resnwell1 = geomAnd(geomOutside(nwell geomOr(dnwellg hnw ndf)) nwres)

Executing: resnwell_scr = geomAnd(scr_nwell nwres)

Executing: resnwell10 = geomAndNot(resnwell1 resnwell_scr)

Executing: resnwell = geomAndNot(resnwell10 mv)

Executing: resdnwellmv = geomAnd(dnwellmv dnwmvres)

Executing: dnwellmvtrm = geomAndNot(dnwellmv resdnwellmv) keepLayer(dnwellmvtrm)

Executing: dnwmviph = geomEmpty()

Executing: dnwtrm = geomOr(dnwell dnwellmvtrm) keepLayer(dnwtrm)

Executing: dnwtrm2 = geomOr(dnwtrm hnw)

Executing: nw_indnw = geomInside(nwell dnwtrm)

Executing: nwellrm = geomAndNot(nwell resnwell1)

Executing: nwtrm0 = geomAndNot(nwell geomOr(nw_indnw hnw ndf))

Executing: nwtrm0_scr = geomInside(scr_nwell nwtrm0)

Executing: nwtrm0_nscr = geomAndNot(nwtrm0 nwtrm0_scr)

Executing: nwtrm_scr = geomAndNot(nwtrm0_scr resnwell_scr)

Executing: nwelltrm = geomAndNot(nwtrm0_nscr resnwell1)

Executing: nwgtrm = geomOr(nwelltrm nwtrm_scr)

Executing: nwellgtrm = geomAndNot(geomOr(dnwell dnwellmvtrm nwgtrm) isopwell) keepLayer(nwellgtrm)

Executing: s_res = geomAndNot(geomSize(subcut 0.005) subcut)

Executing: bkgnd11 = geomSize(bkgnd1 1.0)

Executing: bkgnd = geomAndNot(bkgnd11 s_res)

Executing: n_psub1 = geomOr(nwellg pbd pdf)

Executing: n_psub = geomOr(n_psub1 pwblk)

Executing: psub = geomAndNot(bkgnd11 n_psub)

Executing: diff_pur = geomAndNot(diff_dg implant)

Executing: d_ds1 = geomGetRectangle(diff_pur ((2.4 <= length) <= 50) (width == 0.94))

Executing: d_ds21 = geomSize(d_ds1 0.15)

Executing: d_ds22 = geomOr(geomOverlap(psdg d_ds21) d_ds1)

Executing: d_ds23 = geomAnd(geomInside(d_ds21 d_ds22) geomInside(d_ds22 d_ds21))

Executing: d_ds31 = geomSize(d_ds23 0.3)

Executing: d_ds32 = geomSize(d_ds31 0.1)

Executing: d_ds33 = geomOverlap(gate d_ds31)

Executing: d_ds34 = geomOr(geomAnd(d_ds33 pimp) d_ds23)

Executing: d_ds35 = geomAnd(geomInside(d_ds31 d_ds34) geomInside(d_ds34 d_ds31))

Executing: d_ds36 = geomOr(geomAndNot(d_ds33 implant) d_ds35)

Executing: d_ds37 = geomAnd(geomInside(d_ds36 d_ds32) geomInside(d_ds32 d_ds36))

Executing: d_ds41 = geomSize(geomGetLength(geomGetEdge(d_ds37 coincident gate) (keep == ...

Executing: d_ds42 = geomSize(geomOr(d_ds41 d_ds37) 0.22)

Executing: d_ds43 = geomOr(geomOverlap(poly d_ds42) d_ds22)

Executing: d_ds44 = geomGetRectangle(geomAnd(geomInside(d_ds43 d_ds42) geomInside(d_ds42...

Executing: d_dsc1 = geomAnd(geomInside(d_ds1 d_ds44) cont)

Executing: d_dsc2 = geomSize(d_ds1 -0.39)

Executing: d_dsc3 = geomAnd(geomSize(geomSize(d_dsc1 0.22) -0.22) d_dsc2)

Executing: d_dsc4 = geomAnd(geomInside(d_dsc3 d_dsc2) geomInside(d_dsc2 d_dsc3))

Executing: d_dsc5 = geomAnd(geomAnd(d_ds44 poly) cont)

Executing: d_dsm1 = geomAnd(d_ds44 met1)

Executing: d_dsm2 = geomEnclose(d_dsm1 d_dsc4)

Executing: d_dsm3 = geomEnclose(d_dsm1 d_dsc5)

Executing: d_dsm4 = geomAnd(geomInside(d_dsm3 d_dsm2) geomInside(d_dsm2 d_dsm3))

Executing: d_dsm5 = geomEnclose(d_ds44 d_dsm4)

Executing: d_dsd2 = geomInside(d_ds1 d_dsm5)

Executing: d_ds45 = geomEnclose(d_ds44 d_dsd2)

Executing: d_dsb1 = geomInside(d_ds45 hnw)

Executing: d_dsb21 = geomSize(d_dsb1 0.53)

Executing: d_dsb31 = geomSize(d_dsb21 0.42)

Executing: d_dsb41 = geomAnd(geomAndNot(d_dsb21 d_ds45) diff)

Executing: d_dsb42 = geomAndNot(geomAndNot(d_dsb31 d_dsb21) ndiffa)

Executing: d_dsb43 = geomOutside(geomOutside(d_dsb31 d_dsb41) d_dsb42)

Executing: d_dsb22 = geomSize(d_dsb1 0.21)

Executing: d_dsb32 = geomSize(d_dsb22 1.06)

Executing: d_dsb44 = geomAnd(geomAndNot(d_dsb22 d_ds45) dnc)

Executing: d_dsb45 = geomAndNot(geomAndNot(d_dsb32 d_dsb22) dnc)

Executing: d_dsb46 = geomOutside(geomOutside(d_dsb32 d_dsb44) d_dsb45)

Executing: d_dsb4 = geomEnclose(d_dsb46 geomEnclose(d_dsb43 geomEnclose(d_dsb21 d_ds45 (...

Executing: d_dsb5 = geomInside(geomSize(d_dsb4 0.32) hnw)

Executing: d_dsb6 = geomInside(geomInside(d_dsb32 d_dsb5) mv)

Executing: d_dsb7 = geomEnclose(d_dsb5 d_dsb6)

Executing: d_dsb = geomInside(d_dsd2 d_dsb7)

Executing: d_ds21a = geomSize(d_ds1 0.3)

Executing: d_ds22a = geomOr(geomOverlap(psdg d_ds21a) d_ds1)

Executing: d_ds23a = geomAnd(geomInside(d_ds21a d_ds22a) geomInside(d_ds22a d_ds21a))

Executing: d_ds31a = geomSize(d_ds23a 0.15)

Executing: d_ds32a = geomSize(d_ds31a 0.1)

Executing: d_ds33a = geomOverlap(gate d_ds31a)

Executing: d_ds34a = geomOr(geomAnd(d_ds33a pimp) d_ds23a)

Executing: d_ds35a = geomAnd(geomInside(d_ds31a d_ds34a) geomInside(d_ds34a d_ds31a))

Executing: d_ds36a = geomOr(geomAndNot(d_ds33a implant) d_ds35a)

Executing: d_ds37a = geomAnd(geomInside(d_ds36a d_ds32a) geomInside(d_ds32a d_ds36a))

Executing: d_ds41a = geomSize(geomGetLength(geomGetEdge(d_ds37a coincident gate) (keep =...

Executing: d_ds42a = geomSize(geomOr(d_ds41a d_ds37a) 0.22)

Executing: d_ds43a = geomOr(geomOverlap(poly d_ds42a) d_ds22a)

Executing: d_ds44a = geomGetRectangle(geomAnd(geomInside(d_ds43a d_ds42a) geomInside(d_d...

Executing: d_dsc1a = geomAnd(geomInside(d_ds1 d_ds44a) cont)

Executing: d_dsc3a = geomAnd(geomSize(geomSize(d_dsc1a 0.22) -0.22) d_dsc2)

Executing: d_dsc4a = geomAnd(geomInside(d_dsc3a d_dsc2) geomInside(d_dsc2 d_dsc3a))

Executing: d_dsc5a = geomAnd(geomAnd(d_ds44a poly) cont)

Executing: d_dsm1a = geomAnd(d_ds44a met1)

Executing: d_dsm2a = geomEnclose(d_dsm1a d_dsc4a)

Executing: d_dsm3a = geomEnclose(d_dsm1a d_dsc5a)

Executing: d_dsm4a = geomAnd(geomInside(d_dsm3a d_dsm2a) geomInside(d_dsm2a d_dsm3a))

Executing: d_dsm5a = geomEnclose(d_ds44a d_dsm4a)

Executing: d_dsd2a = geomInside(d_ds1 d_dsm5a)

Executing: d_ds45a = geomEnclose(d_ds44a d_dsd2a)

Executing: d_dsb1a = geomInside(d_ds45a hnw)

Executing: d_dsb21a = geomSize(d_dsb1a 0.53)

Executing: d_dsb31a = geomSize(d_dsb21a 0.42)

Executing: d_dsb41a = geomAnd(geomAndNot(d_dsb21a d_ds45a) diff)

Executing: d_dsb42a = geomAndNot(geomAndNot(d_dsb31a d_dsb21a) ndiffa)

Executing: d_dsb43a = geomOutside(geomOutside(d_dsb31a d_dsb41a) d_dsb42a)

Executing: d_dsb22a = geomSize(d_dsb1a 0.21)

Executing: d_dsb32a = geomSize(d_dsb22a 1.06)

Executing: d_dsb44a = geomAnd(geomAndNot(d_dsb22a d_ds45a) dnc)

Executing: d_dsb45a = geomAndNot(geomAndNot(d_dsb32a d_dsb22a) dnc)

Executing: d_dsb46a = geomOutside(geomOutside(d_dsb32a d_dsb44a) d_dsb45a)

Executing: d_dsb4a = geomEnclose(d_dsb46a geomEnclose(d_dsb43a geomEnclose(d_dsb21a d_ds...

Executing: d_dsb5a = geomInside(geomSize(d_dsb4a 0.32) hnw)

Executing: d_dsb6a = geomInside(geomInside(d_dsb32a d_dsb5a) mv)

Executing: d_dsb7a = geomEnclose(d_dsb5a d_dsb6a)

Executing: d_dsba = geomInside(d_dsd2a d_dsb7a)

Executing: d_dsdf = geomOr(d_dsb d_dsba)

Executing: d_dsc = geomAnd(d_dsdf cont)

Executing: d_ds45_a = geomOr(d_ds45 d_ds45a)

Executing: d_ds_diff = geomEnclose(d_ds45_a d_dsdf)

Executing: gate_ds = geomAnd(gate d_ds_diff)

Executing: catdiff = geomAnd(catdop diff)

Executing: catdfct = geomAnd(catdiff ndiffa)

Executing: dphoc_11 = geomOutside(geomEnclose(catdop diff) alwell)

Executing: dphoc_1 = geomOutside(dphoc_11 aml)

Executing: davl_a11 = geomEnclose(dphoc_11 aml (keep == 1))

Executing: davl_a12 = geomAnd(davl_a11 catdiff)

Executing: davl_a13 = geomAnd(davl_a12 sab)

Executing: davl_a1 = geomAndNot(davl_a13 gate)

Executing: dspada = geomGetTexted(davl_a1 dio_label "dspada")

Executing: dspada0 = geomGetTexted(davl_a1 dio_label "dspada0")

Executing: dspad_a1 = geomOr(dspada dspada0)

Executing: davl_b1 = geomOutside(davl_a1 dspad_a1)

Executing: dspb_1 = geomGetTexted(davl_b1 dio_label "dspb")

Executing: dspb0_1 = geomGetTexted(davl_b1 dio_label "dspb0")

Executing: dspb_2 = geomGetBBox(dspb_1)

Executing: dspb0_2 = geomGetBBox(dspb0_1)

Executing: dspb = geomSize(dspb_2 3.115)

Executing: dspb0 = geomSize(dspb0_2 3.115)

Executing: dspad_b1 = geomOr(dspb dspb0)

Executing: davl_a2 = geomOutside(davl_b1 dspad_b1)

Executing: dapda = geomGetTexted(davl_a2 dio_label "dapda")

Executing: dapda0 = geomGetTexted(davl_a2 dio_label "dapda0")

Executing: dapd_a1 = geomOr(dapda dapda0)

Executing: davl_b2 = geomOutside(davl_a2 dapd_a1)

Executing: dapb_1 = geomGetTexted(davl_b2 dio_label "dapb")

Executing: dapb0_1 = geomGetTexted(davl_b2 dio_label "dapb0")

Executing: dapb_2 = geomGetBBox(dapb_1)

Executing: dapb0_2 = geomGetBBox(dapb0_1)

Executing: dapb = geomSize(dapb_2 3.115)

Executing: dapb0 = geomSize(dapb0_2 3.115)

Executing: dapd_b1 = geomOr(dapb dapb0)

Executing: davla_a = geomOr(dspada dapda)

Executing: davlb_a = geomOr(dspb dapb)

Executing: davla_al = geomOr(dspad_a1 dapd_a1)

Executing: davlb_al = geomOr(dspad_b1 dapd_b1)

Executing: davl_c2 = geomAnd(davlb_al nsdg)

Executing: catm1ct1 = geomAndNot(catdiff nsdg)

Executing: catm1ct2 = geomAnd(catm1ct1 davlb_al)

Executing: catm1ct = geomAnd(catm1ct2 cont)

Executing: davl_all = geomOr(davla_al davlb_al)

Executing: davla_ext = geomGetBBox(davla_al)

Executing: davla_ex1 = geomSize(davla_ext 0.705)

Executing: davla_ex2 = geomSize(davla_ex1 0.185)

Executing: davla_e31 = geomSize(davla_ext 6.075)

Executing: davla_e32 = geomEnclose(davla_ext dapd_a1)

Executing: davla_ex3 = geomOr(davla_e31 geomSize(davla_e32 7.03))

Executing: davla_mv1 = geomSize(davla_e31 -0.98)

Executing: davla_mv2 = drc(davla_mv1 (width < 5.66) only_perp)

Executing: davla_mv = geomAndNot(davla_mv1 davla_mv2)

Executing: davlb_ex1 = geomSize(davlb_al -1.675)

Executing: davlb_ex2 = geomSize(davlb_ex1 0.195)

Executing: davlb_e31 = geomSize(davlb_al 0.655)

Executing: davlb_ex3 = geomOr(davlb_e31 geomSize(dapd_b1 1.615))

Executing: davlb_ex4 = drc(davlb_al (width < 4.58) only_perp)

Executing: davlb_ex5 = geomSize(davlb_ex4 0.32)

Executing: davlb_uv1 = geomSize(davlb_al -3.115)

Executing: davlb_uv2 = drc(davlb_uv1 (width < 2.42) only_perp)

Executing: davlb_uv = geomAndNot(davlb_uv1 davlb_uv2)

Executing: davlb_mv1 = geomSize(davlb_e31 -0.98)

Executing: davlb_mv2 = drc(davlb_mv1 (width < 4.07) only_perp)

Executing: davlb_mv = geomAndNot(davlb_mv1 davlb_mv2)

Executing: davl_cdf = geomAnd(davl_all catdiff)

Executing: davla_cdf = geomAnd(davla_al catdiff)

Executing: davlb_cdf = geomAnd(davlb_al catdiff)

Executing: davl_ex1 = geomOr(davla_ex1 geomAndNot(davlb_ex1 davlb_ex4))

Executing: davl_ex2 = geomOr(davla_ex2 davlb_ex2)

Executing: davl_e31 = geomOr(davla_e31 davlb_e31)

Executing: davl_ex3 = geomOr(davla_ex3 davlb_ex3)

Executing: davl_mv = geomOr(davla_mv davlb_mv)

Executing: cnt_napd = geomAndNot(cont davl_ex1)

Executing: anodiff = geomAnd(anodop diff)

Executing: dphod_1 = geomOutside(geomEnclose(nwell anodop) dnwellg)

Executing: dpho_uv1 = geomOr(dphoc_1 dphod_1)

Executing: dpho_exg = geomOr(dpho_uv1 davl_ex1)

Executing: gate01 = geomAndNot(gate dpho_exg)

Executing: gate0 = geomAndNot(gate01 gate_ds)

Executing: allpgate = geomAnd(allpgate0 gate0)

Executing: ng_cpod = geomInside(allngate0 bnimp)

Executing: nha3m1 = geomEmpty()

Executing: allngate = geomAndNot(geomAnd(allngate0 gate0) geomOr(ng_cpod nha3m1))

Executing: vt_all = geomOr(lvt svt)

Executing: lnvt1 = geomOr(vt_all uln)

Executing: lnvt = geomOr(lnvt1 lndev)

Executing: allngate2 = geomAndNot(geomAndNot(allngate lnvt) gxh)

Executing: mosvcng = geomInside(allngate2 nwell)

Executing: mosvc1 = geomOutside(mosvcng geomOr(dnwellg dnc hv_nw1))

Executing: allpgate2 = geomAndNot(geomAndNot(allpgate lnvt) gxh)

Executing: mosvci2 = geomOutside(geomAnd(geomInside(allpgate2 isopw) dnwellg) geomOr(hv_...

Executing: cpod_a = geomOutside(ng_cpod gxh)

Executing: cpod = geomAndNot(cpod_a mv)

Executing: cpodhv = geomInside(ng_cpod gxh)

Executing: cpod_all = geomOr(cpod cpodhv)

Executing: ngate_all1 = geomOutside(geomAndNot(allngate gxa) pbd)

Executing: ngate_all = geomOutside(ngate_all1 nwellniso)

Executing: pgate_all1 = geomOutside(geomAndNot(allpgate gxa) nbd)

Executing: pgate_all = geomAnd(pgate_all1 nwell)

Executing: ngate_mv_all = geomOutside(geomAnd(allngate mv) nwellniso)

Executing: pgate_mv_all0 = geomAnd(geomAnd(geomAndNot(allpgate gate_ds) mv) nwell)

Executing: pedam_all = geomEmpty()

Executing: al_edam = geomEmpty()

Executing: pwi_b = geomStraddle(isopw al_edam)

Executing: pgate_mv_all = geomOutside(pgate_mv_all0 pedam_all)

Executing: hvgate_act = geomInside(gate gxh)

Executing: hvngate_all = geomEnclose(hvgate_act allngate)

Executing: hvpgate_all = geomEnclose(hvgate_act allpgate)

Executing: hvngate10a = geomButting(hvngate_all geomInside(nsdg pbd) (keep == 2))

Executing: hvpgate10a = geomButting(hvpgate_all geomInside(psdg nbd) (keep == 2))

Executing: hvngate10 = geomInside(hvngate10a pbd)

Executing: hvpgate10 = geomInside(hvpgate10a nbd)

Executing: hvngate = geomAndNot(hvngate_all hvngate10)

Executing: hvpgate = geomAndNot(hvpgate_all hvpgate10)

Executing: ngate_all21 = geomOutside(ngate_all lnvt1)

Executing: ngate_mv_all2 = geomOutside(ngate_mv_all lnvt1)

Executing: nnm = geomAnd(ngate_mv_all2 pwblk_pur)

Executing: nn = geomAnd(ngate_all21 pwblk_pur)

Executing: ngate_all2 = geomAndNot(ngate_all21 nn)

Executing: pgate_all2 = geomOutside(pgate_all lnvt1)

Executing: pgate_mv_all2 = geomOutside(pgate_mv_all geomOr(lnvt))

Executing: dplngate_all = geomAnd(ngate_mv_all2 depl)

Executing: deplngate_i = geomInside(dplngate_all dnwtrm)

Executing: ndmi_6a = geomGetTexted(deplngate_i polylabel "6T")

Executing: ndmi = geomAndNot(deplngate_i ndmi_6a)

Executing: ndm = geomAndNot(dplngate_all deplngate_i)

Executing: ngate_i = geomAnd(ngate_all2 isopw)

Executing: nei_6a = geomGetTexted(ngate_i polylabel "6T")

Executing: nei = geomAndNot(ngate_i nei_6a)

Executing: ngate_mv_all_ndsi = geomAnd(ngate_mv_all2 sci)

Executing: isopw_ex1 = geomOr(isopwell pwblk)

Executing: ne = geomAndNot(ngate_all2 isopw_ex1)

Executing: ngate_mv_i = geomAnd(ngate_mv_all2 isopw)

Executing: nemi_6a = geomGetTexted(ngate_mv_i polylabel "6T")

Executing: nemi = geomAndNot(ngate_mv_i nemi_6a)

Executing: nem = geomAndNot(ngate_mv_all2 isopw_ex1)

Executing: pgate_w = geomAnd(pgate_all2 dnwtrm)

Executing: pgate = geomAndNot(pgate_all2 pgate_w)

Executing: pei_5a = geomGetTexted(pgate_w polylabel "5T")

Executing: pei = geomAndNot(pgate_w pei_5a)

Executing: pe_5 = geomGetTexted(pgate polylabel "5T")

Executing: pe = geomAndNot(pgate pe_5)

Executing: pgate_mv_w = geomAnd(pgate_mv_all2 dnwtrm)

Executing: pgate_mv = geomAndNot(pgate_mv_all2 pgate_mv_w)

Executing: pemi_5a = geomGetTexted(pgate_mv_w polylabel "5T")

Executing: pemi = geomAndNot(pgate_mv_w pemi_5a)

Executing: pem_5 = geomGetTexted(pgate_mv polylabel "5T")

Executing: pem = geomAndNot(pgate_mv pem_5)

Executing: ngate_all3 = geomInside(ngate_all lvt)

Executing: neli_1 = geomAnd(ngate_all3 isopw)

Executing: neli_6a = geomGetTexted(neli_1 polylabel "6T")

Executing: neli = geomAndNot(neli_1 neli_6a)

Executing: nel = geomAndNot(ngate_all3 isopw_ex1)

Executing: ngate_all5 = geomInside(ngate_all svt)

Executing: nesvti_1 = geomAnd(ngate_all5 isopw)

Executing: nesvti_6a = geomGetTexted(nesvti_1 polylabel "6T")

Executing: nesvti = geomAndNot(nesvti_1 nesvti_6a)

Executing: nesvt = geomAndNot(ngate_all5 isopw_ex1)

Executing: ngate_all6 = geomInside(ngate_all uln)

Executing: nelnai_1 = geomAnd(ngate_all6 isopw)

Executing: nelnai_6a = geomGetTexted(nelnai_1 polylabel "6T")

Executing: nelnai = geomAndNot(nelnai_1 nelnai_6a)

Executing: nelna = geomAndNot(ngate_all6 isopw_ex1)

Executing: ngate_all7 = geomInside(ngate_mv_all uln)

Executing: nemlnai_1 = geomAnd(ngate_all7 isopw)

Executing: nemlnai_6a = geomGetTexted(nemlnai_1 polylabel "6T")

Executing: nemlnai = geomAndNot(nemlnai_1 nemlnai_6a)

Executing: nemlna = geomAndNot(ngate_all7 isopw_ex1)

Executing: ngi_6t = geomOr(geomOr(ndmi_6a nemi_6a nei_6a neli_6a nesvti_6a nelnai_6a nem...

Executing: pgate_all3 = geomInside(pgate_all lvt)

Executing: peli_a = geomAnd(pgate_all3 dnwtrm)

Executing: peli_5a = geomGetTexted(peli_a polylabel "5T")

Executing: peli = geomAndNot(peli_a peli_5a)

Executing: pel_a = geomAndNot(pgate_all3 peli_a)

Executing: pel_5a = geomGetTexted(pel_a polylabel "5T")

Executing: pel = geomAndNot(pel_a pel_5a)

Executing: pgate_all4 = geomInside(pgate_mv_all lndev)

Executing: pemlni_a = geomAnd(pgate_all4 dnwtrm)

Executing: pemlni_5a = geomGetTexted(pemlni_a polylabel "5T")

Executing: pemlni = geomAndNot(pemlni_a pemlni_5a)

Executing: pemln_a = geomAndNot(pgate_all4 pemlni_a)

Executing: pemln_5a = geomGetTexted(pemln_a polylabel "5T")

Executing: pemln = geomAndNot(pemln_a pemln_5a)

Executing: pgate_all5 = geomInside(pgate_all svt)

Executing: pesvti_a = geomAnd(pgate_all5 dnwtrm)

Executing: pesvti_5a = geomGetTexted(pesvti_a polylabel "5T")

Executing: pesvti = geomAndNot(pesvti_a pesvti_5a)

Executing: pesvt_a = geomAndNot(pgate_all5 pesvti_a)

Executing: pesvt_5a = geomGetTexted(pesvt_a polylabel "5T")

Executing: pesvt = geomAndNot(pesvt_a pesvt_5a)

Executing: pgate_all7 = geomInside(pgate_mv_all uln)

Executing: pemlnai_a = geomAnd(pgate_all7 dnwtrm)

Executing: pemlnai_5a = geomGetTexted(pemlnai_a polylabel "5T")

Executing: pemlnai = geomAndNot(pemlnai_a pemlnai_5a)

Executing: pemlna_a = geomAndNot(pgate_all7 pemlnai_a)

Executing: pemlna_5a = geomGetTexted(pemlna_a polylabel "5T")

Executing: pemlna = geomAndNot(pemlna_a pemlna_5a)

Executing: pgi_5t = geomOr(pe_5 pem_5 pei_5a pemi_5a peli_5a pel_5a pemlni_5a pemln_5a p...

Executing: hvpgate1 = geomInside(hvpgate geomOutside(dnwell nwell))

Executing: pdmosgate = geomStraddle(geomStraddle(hvpgate1 nbd (keep == 1)) pdd (keep == 1))

Executing: ndmosgate = geomInside(geomStraddle(geomStraddle(hvngate pbd (keep == 1)) pdd...

Executing: pmmagate = geomStraddle(hvpgate1 pbd (keep == 2))

Executing: nmmagate = geomInside(geomStraddle(hvngate nbd (keep == 2)) pwblk)

Executing: pmma_b = geomGetTexted(pmmagate polylabel "bjt")

Executing: hvngate3 = geomAndNot(hvngate dnwellg)

Executing: hvngate62 = geomAndNot(geomStraddle(hvngate3 ndf (keep == 2)) ndf)

Executing: hvngate61 = geomAndNot(geomStraddle(hvngate3 ndf (keep == 1)) ndf)

Executing: nmc = geomEnclose(hvngate3 geomInside(hvngate61 pbd) (keep == 1))

Executing: nhv1 = geomEnclose(hvngate3 geomAndNot(hvngate61 nmc) (keep == 1))

Executing: nhvd = geomAnd(nhv1 hvdepl)

Executing: nmmc = geomEnclose(hvngate3 geomInside(hvngate62 pbd) (keep == 1))

Executing: hvngate72 = geomEnclose(hvngate3 geomAndNot(hvngate62 nmmc) (keep == 1))

Executing: nmmd = geomGetTexted(hvngate72 polylabel "nmmd")

Executing: nhhv1 = geomAndNot(hvngate72 nmmd)

Executing: nhhvd = geomAnd(nhhv1 hvdepl)

Executing: hvpgate2 = geomInside(hvpgate hnw)

Executing: hvpgate5 = geomStraddle(geomStraddle(hvpgate2 ndf (keep == 1)) nbd (keep == 1))

Executing: hvpgate51 = geomStraddle(hvpgate5 pdf (keep == 1))

Executing: phv = geomGetTexted(hvpgate51 polylabel "phv")

Executing: pmc = geomAndNot(hvpgate51 phv)

Executing: hvpgate52 = geomStraddle(hvpgate5 pdf (keep == 2))

Executing: phhv = geomGetTexted(hvpgate52 polylabel "phhv")

Executing: pmmc = geomAndNot(hvpgate52 phhv)

Executing: nmmc_ndf = geomStraddle(ndf nmmc)

Executing: nmc_ndf = geomStraddle(ndf nmc)

Executing: nhhv_ndf = geomStraddle(ndf nhhv1)

Executing: nhv_ndf = geomStraddle(ndf nhv1)

Executing: nmmd_ndf = geomStraddle(ndf nmmd)

Executing: pmc_pdf = geomStraddle(pdf pmc)

Executing: pmmc_pdf = geomStraddle(pdf pmmc)

Executing: phhv_pdf = geomStraddle(pdf phhv)

Executing: phv_pdf = geomStraddle(pdf phv)

Executing: pma = geomInside(geomInside(hvpgate10 ndf) hnw)

Executing: nma = geomOutside(hvngate10 nwellg)

Executing: pmb = geomInside(hvpgate10 dnwtrm)

Executing: pbddnw = geomInside(pbd dnwtrm2)

Executing: nbddnw = geomInside(nbd dnwtrm)

Executing: scidnw = geomAnd(sci dnwtrm)

Executing: dpldnw = geomInside(depl dnwtrm)

Executing: pwitrm0 = geomOr(isopw dpldnw scidnw)

Executing: pwitrm00 = geomOr(pwitrm0 pbddnw pdd)

Executing: nbd_nma = geomStraddle(nbd nmmagate) keepLayer(nbd_nma)

Executing: pbd_pma = geomStraddle(pbd pmmagate) keepLayer(pbd_pma)

Executing: nbdsub0 = geomAndNot(nbd geomOr(nbddnw hnw))

Executing: nbdsub = geomAndNot(nbdsub0 nbd_nma)

Executing: anwellniso = geomOr(nwellniso nbdsub)

Executing: nsdpw = geomAndNot(nsdg anwellniso)

Executing: psdnw = geomAnd(psdg nwellniso)

Executing: ntie = geomAnd(nsdg nwellniso) keepLayer(ntie)

Executing: ptie = geomAndNot(geomAndNot(psdg geomSize(davl_c2 0.004)) geomOr(nwellg nbds... keepLayer(ptie)

Executing: ptie_hole = geomHoles(ptie innermost)

Executing: ptie_h4 = geomGetVertex(ptie_hole (keep == 4))

Executing: isoptie = geomAnd(psdg pwitrm00) keepLayer(isoptie)

Executing: dnwntie = geomAnd(ntie dnwtrm) keepLayer(dnwntie)

Executing: dnwntie_h = geomHoles(dnwntie innermost)

Executing: ndftrm = geomAndNot(ndf hnw) keepLayer(ndftrm)

Executing: nedi3a = geomSize(geomGetEdge(nsdg butting ndmosgate) 1.3)

Executing: nedi3b = geomSize(geomGetEdge(nsdg butting ndmosgate) 1.4)

Executing: nedi3c = geomSize(geomGetEdge(pdd butting nedi3b) 0.1)

Executing: nedi3f = geomOutside(geomSize(geomGetEdge(pdd butting nedi3c) -1.2) diff)

Executing: nedi3g = geomSize(geomGetEdge(pdd coincident nedi3f) 0.1)

Executing: nedi3h = geomSize(geomGetEdge(nsdg butting nedi3g) 1.3)

Executing: nedi3i = geomSize(geomGetEdge(pdd coincident nedi3h) 0.1)

Executing: nedi3d = geomSize(geomGetEdge(geomAnd(nedi3c nedi3i) butting ndmosgate) 1.3)

Executing: nedi3e = geomAnd(geomEnclose(nedi3d nedi3a) geomEnclose(nedi3a nedi3d))

Executing: nedi0 = geomAnd(nedi3e pbd)

Executing: nedi5a = geomSize(geomGetEdge(nsdg butting ndmosgate) 1.9)

Executing: nedi5b = geomSize(geomGetEdge(nsdg butting ndmosgate) 2.0)

Executing: nedi5c = geomSize(geomGetEdge(pdd butting nedi5b) 0.1)

Executing: nedi5f = geomOutside(geomSize(geomGetEdge(pdd butting nedi5c) -2.3) diff)

Executing: nedi5g = geomSize(geomGetEdge(pdd coincident nedi5f) 0.1)

Executing: nedi5g1 = geomOutside(geomSize(geomGetEdge(nedi5g butting diff1) 0.46) implant)

Executing: ned_nw = geomInside(geomInside(geomSize(geomGetEdge(nedi5g1 butting nwell) 0....

Executing: nedi5h1 = geomSize(geomGetEdge(ned_nw coincident nwell) 0.56)

Executing: nedi5h = geomSize(geomGetEdge(nedi5h1 butting pdd) 2.3)

Executing: nedi5i = geomSize(geomGetEdge(pdd coincident nedi5h) 0.1)

Executing: nedi5d = geomSize(geomGetEdge(geomAnd(nedi5c nedi5i) butting ndmosgate) 1.9)

Executing: nedi5e = geomAnd(geomEnclose(nedi5d nedi5a) geomEnclose(nedi5a nedi5d))

Executing: nedia0 = geomAnd(nedi5e pbd)

Executing: nedi_al = geomOr(nedi0 nedia0)

Executing: nedxh = geomHoles(geomEnclose(poly nedi_al (keep == 2)) innermost)

Executing: nedi4aa = geomGetRectangle(geomInside(nsdg nedxh) (5 <= length) (width == 0.54))

Executing: nedi4a = geomSize(geomGetEdge(nedi_al butting nedi4aa) 0.54)

Executing: nedi4b = geomSize(geomGetEdge(nedi4a butting psdg) 0.24)

Executing: nedi4c = geomGetRectangle(geomAnd(nedi4b psdg) (5 <= length) (width == 0.48))

Executing: nedi4d = geomGetRectangle(geomOr(nedi4a nedi4c) (5 <= length) (width == 1.56))

Executing: nedi111 = geomSize(geomGetEdge(nedi4d butting ndmosgate) 2.7)

Executing: nedi112 = geomOr(nedi111 nedi4d)

Executing: nedi113 = geomEnclose(geomHoles(dnwntie innermost) nedi112 (keep == 1))

Executing: nedi114 = geomAndNot(nedi113 nedi112)

Executing: nedi115 = geomInside(nedi114 geomEnclose(nedi113 nedi114 (keep == 2)))

Executing: nedi121 = drc(nedi115 (area == 31.5359))

Executing: nedi1221 = geomAnd(nedi121 diff)

Executing: nedi1222 = drc(nedi1221 (area == 9.2801))

Executing: nedi122 = geomEnclose(geomEnclose(nedi121 nedi1221 (keep == 1)) nedi1222 (kee...

Executing: nedi1231 = geomAnd(nedi122 psdg)

Executing: nedi1232 = drc(nedi1231 (area == 3.0221))

Executing: nedi123 = geomEnclose(geomEnclose(nedi122 nedi1231 (keep == 1)) nedi1232 (kee...

Executing: nedi1241 = geomAnd(nedi123 pbd)

Executing: nedi1242 = drc(nedi1241 (area == 5.043))

Executing: nedi124 = geomEnclose(geomEnclose(nedi123 nedi1241 (keep == 1)) nedi1242 (kee...

Executing: nedi1251 = geomAnd(nedi124 pdd)

Executing: nedi1252 = drc(nedi1251 (area == 18.1683))

Executing: nedi125 = geomEnclose(geomEnclose(nedi124 nedi1251 (keep == 1)) nedi1252 (kee...

Executing: nedi1261 = geomAnd(nedi125 poly)

Executing: nedi1262 = drc(nedi1261 (area == 8.5976))

Executing: nedi126 = geomEnclose(geomEnclose(nedi125 nedi1261 (keep == 1)) nedi1262 (kee...

Executing: nedi131 = geomEnclose(nedi113 nedi126 (keep == 2))

Executing: nedi1321 = geomSize(nedi131 -0.1)

Executing: nedi1322 = geomAnd(geomAndNot(nedi131 nedi1321) pdd)

Executing: nedi1323 = geomWidth(nedi1322 (keep >= 0.005))

Executing: nedi132 = geomOutside(nedi131 nedi1323)

Executing: nedi1331 = geomButting(dnwntie nedi132)

Executing: nedi133 = geomOr(nedi1331 nedi132)

Executing: nedi134 = geomSize(nedi133 0.24)

Executing: nedi135 = geomSize(nedi134 1.0)

Executing: nedi1351 = geomAnd(geomAndNot(nedi134 nedi133) pdd)

Executing: nedi1352 = geomAndNot(geomAndNot(nedi135 nedi134) pdd)

Executing: nedi1353 = geomWidth(nedi1352 (keep >= 0.005))

Executing: nedi1354 = geomOutside(geomOutside(nedi135 nedi1351) nedi1353)

Executing: nedi1411 = geomOr(nedi1354 geomStraddle(pdd nedi1354))

Executing: nedi1412 = geomSize(nedi1411 2.9)

Executing: nedi1413 = geomAndNot(nedi1412 dnwelldg)

Executing: nedi141 = geomOutside(nedi1412 nedi1413)

Executing: nedi142 = geomOutside(geomOutside(nedi141 nwell) isopw)

Executing: nedi1431 = geomInside(ndmosgate nedi142)

Executing: nedi143 = geomOr(geomHoles(nedi1431 innermost) nedi1431)

Executing: nedi144 = geomOutside(nedi142 geomAndNot(geomAnd(nedi142 pbd) nedi143))

Executing: nedi127 = geomSize(geomGetEdge(nedi4d butting ndmosgate) 1.52)

Executing: nedi128 = geomAnd(nedi131 geomOr(nedi1262 nedi127))

Executing: nedi145 = geomOutside(nedi144 geomAndNot(geomAnd(nedi144 poly) nedi128))

Executing: nedi146 = geomOutside(nedi145 geomAndNot(geomAndNot(geomAnd(nedi145 diff) ned...

Executing: nedi147 = geomOutside(geomOutside(nedi146 sab) geomOr(depl sci))

Executing: nedi148 = geomOutside(nedi147 nbd)

Executing: nedi2 = geomEnclose(geomInside(nedi131 nedi148) ndmosgate (keep == 1))

Executing: nedi = geomEnclose(geomAnd(nedi2 ndmosgate) nedi0 (keep == 2))

Executing: nedia11 = geomSize(geomGetEdge(nedi4d butting ndmosgate) 4.4)

Executing: nedia12 = geomOr(nedia11 nedi4d)

Executing: nedia131 = geomEnclose(geomHoles(dnwntie innermost) nedia12 (keep == 1))

Executing: nedia132 = geomAnd(nedia131 diff_pur)

Executing: nedia13 = geomEnclose(geomHoles(nedia132 innermost) nedia12 (keep == 1))

Executing: nedia14 = geomAndNot(nedia13 nedia12)

Executing: nedia15 = geomInside(nedia14 geomEnclose(nedia13 nedia14 (keep == 2)))

Executing: nedia21 = drc(nedia15 (area == 77.1424))

Executing: nedia221 = geomAnd(nedia21 diff)

Executing: nedia222 = drc(nedia221 (area == 18.6321))

Executing: nedia22 = geomEnclose(geomEnclose(nedia21 nedia221 (keep == 1)) nedia222 (kee...

Executing: nedia231 = geomAnd(nedia22 psdg)

Executing: nedia232 = drc(nedia231 (area == 5.6741))

Executing: nedia23 = geomEnclose(geomEnclose(nedia22 nedia231 (keep == 1)) nedia232 (kee...

Executing: nedia241 = geomAnd(nedia23 pbd)

Executing: nedia242 = drc(nedia241 (area == 11.945))

Executing: nedia24 = geomEnclose(geomEnclose(nedia23 nedia241 (keep == 1)) nedia242 (kee...

Executing: nedia251 = geomAnd(nedia24 pdd)

Executing: nedia252 = drc(nedia251 (area == 53.1732))

Executing: nedia25 = geomEnclose(geomEnclose(nedia24 nedia251 (keep == 1)) nedia252 (kee...

Executing: nedia261 = geomAnd(nedia25 poly)

Executing: nedia262 = drc(nedia261 (area == 16.1711))

Executing: nedia26 = geomEnclose(geomEnclose(nedia25 nedia261 (keep == 1)) nedia262 (kee...

Executing: nedia31 = geomEnclose(nedia13 nedia26 (keep == 2))

Executing: nedia321 = geomSize(nedia31 -0.1)

Executing: nedia322 = geomAnd(geomAndNot(nedia31 nedia321) pdd)

Executing: nedia323 = geomWidth(nedia322 (keep >= 0.005))

Executing: nedia32 = geomOutside(nedia31 nedia323)

Executing: nedia331 = geomButting(dnwntie geomButting(geomOr(diff_pur) nedia32))

Executing: nedia332 = geomSize(nedia331 0.46)

Executing: nedia333 = geomAndNot(nedia332 diff_pur)

Executing: nedia334 = geomAndNot(nedia333 nedia331)

Executing: nedia335 = geomWidth(nedia334 (keep >= 0.005))

Executing: nedia336 = geomOutside(nedia332 nedia335)

Executing: nedia33 = geomOr(nedia336 nedia32)

Executing: nedia34 = geomSize(nedia33 0.24)

Executing: nedia35 = geomSize(nedia34 1.0)

Executing: nedia351 = geomAnd(geomAndNot(nedia34 nedia33) pdd)

Executing: nedia352 = geomAndNot(geomAndNot(nedia35 nedia34) pdd)

Executing: nedia353 = geomWidth(nedia352 (keep >= 0.01))

Executing: nedia354 = drc(nedia352 (width == 0.005))

Executing: nedia355 = geomOutside(geomOutside(nedia35 nedia351) geomOr(nedia353 nedia354))

Executing: nedia411 = geomOr(nedia355 geomStraddle(pdd nedia355))

Executing: nedia412 = geomSize(nedia411 2.9)

Executing: nedia413 = geomAndNot(nedia412 dnwelldg)

Executing: nedia41 = geomOutside(nedia412 nedia413)

Executing: nedia421 = geomAndNot(nedi4d geomSize(geomGetEdge(nedi4d butting ndmosgate) -...

Executing: nedia422 = geomAndNot(nedia421 isopw)

Executing: nedia42a = geomOr(geomAndNot(isopw nedia421) nedia422)

Executing: nedia42 = geomOutside(geomOutside(nedia41 geomAndNot(nwell ned_nw)) nedia42a)

Executing: nedia431 = geomInside(ndmosgate nedia42)

Executing: nedia43 = geomOr(geomHoles(nedia431 innermost) nedia431)

Executing: nedia44 = geomOutside(nedia42 geomAndNot(geomAnd(nedia42 pbd) nedia43))

Executing: nedia27 = geomSize(geomGetEdge(nedi4d butting nedia0) 2.12)

Executing: nedia28 = geomAnd(nedia31 geomOr(nedia262 nedia27))

Executing: nedia45 = geomOutside(nedia44 geomAndNot(geomAnd(nedia44 poly) nedia28))

Executing: nedia46 = geomOutside(nedia45 geomAndNot(geomAndNot(geomAnd(nedia45 diff) ned...

Executing: nedia471 = geomSize(nedia336 0.22)

Executing: nedia472 = geomAndNot(nedia471 geomSize(nedia331 0.02))

Executing: nedia473 = geomAndNot(geomAnd(nedia46 sab) nedia472)

Executing: nedia474 = geomWidth(nedia473 (keep >= 0.01))

Executing: nedia475 = drc(nedia473 (width == 0.005))

Executing: nedia476 = geomAndNot(nedia472 sab)

Executing: nedia477 = geomWidth(nedia476 (keep >= 0.01))

Executing: nedia478 = drc(nedia476 (width == 0.005))

Executing: nedia47 = geomOutside(nedia46 geomOr(geomOr(nedia474 nedia475) geomOr(nedia47...

Executing: nedia48 = geomOutside(geomOutside(nedia47 nbd) geomOr(depl sci))

Executing: nedia2 = geomEnclose(geomInside(nedia31 nedia48) ndmosgate (keep == 1))

Executing: nedia = geomEnclose(geomAnd(nedia2 ndmosgate) nedia0 (keep == 2))

Executing: nedgate = geomOr(nedi nedia)

Executing: pdd_ntrm = geomAnd(pdd geomEnclose(geomOr(geomSize(nedia35 0.02) geomSize(ned...

Executing: pwitrm = geomAndNot(pwitrm00 pdd_ntrm) keepLayer(pwitrm)

Executing: pedx3a1 = geomGetEdge(psdg butting pdmosgate)

Executing: pedx3a = geomSize(pedx3a1 1.35 chainEdges)

Executing: pedx3b = geomSize(pedx3a1 0.65 chainEdges)

Executing: pedx3c1 = geomGetLength(geomGetEdge(nbd coincident pedx3b) (keep > 1))

Executing: pedx3c = geomSize(pedx3c1 0.7 chainEdges)

Executing: pedx3f1 = geomGetEdge(pedx3c coincident pdmosgate)

Executing: pedx3f2 = geomSize(pedx3f1 1.8 chainEdges)

Executing: pedx3f = geomOutside(pedx3f2 diff)

Executing: pedx3g1 = geomGetEdge(psdg butting pedx3f)

Executing: pedx3g2 = geomSize(pedx3g1 1.8 chainEdges)

Executing: pedx3g = geomInside(pedx3g2 pdd)

Executing: pedx3d = geomSize(geomGetEdge(pedx3g butting pdmosgate) 1.35 chainEdges)

Executing: pedx3e = geomAnd(geomEnclose(pedx3d pedx3a) geomEnclose(pedx3a pedx3d))

Executing: pedx1 = geomAndNot(pedx3e pdd)

Executing: pedx4a1 = geomGetRectangle(geomButtOnly(psdg pedx1) (5.0 <= length) (width ==...

Executing: pedx4a = geomSize(geomGetEdge(pdmosgate butting pedx4a1) 0.68 chainEdges)

Executing: pedx4b = geomSize(geomGetEdge(pedx4a butting nsdg) 0.24)

Executing: pedx4c = geomGetRectangle(geomAnd(pedx4b nsdg) (5.0 <= length) (width == 0.48))

Executing: pedx4d = geomGetRectangle(geomOr(pedx4a pedx4c) (5.0 <= length) (width == 1.84))

Executing: ped_poly = geomEnclose(geomGetHoled(poly) pedx1 (keep == 2))

Executing: pedxh = geomGetVertex(geomHoles(ped_poly innermost) (keep == 8))

Executing: ped111 = geomGetRectangle(geomEnclose(diff pedx4d) (5 <= length) (width == 4....

Executing: ped1121 = geomStraddle(geomStraddle(pedxh ped111 (keep == 1)) diff (keep == 1))

Executing: ped112 = drc(geomAndNot(ped1121 ped111) (area == 1.5484))

Executing: ped1122 = geomEnclose(ped1121 ped112 (keep == 2))

Executing: ped113 = geomAnd(geomInside(ped1121 ped1122) geomInside(ped1122 ped1121))

Executing: ped1131 = geomGetRectangle(geomAnd(ped113 nbd) (5.86 <= length) (width == 1.84))

Executing: ped1132 = drc(geomAndNot(ped113 ped1131) (area == 0.7572))

Executing: ped1133 = geomEnclose(ped113 ped1132 (keep == 2))

Executing: ped1134 = geomAnd(ped1133 geomOr(ped1132 ped1131))

Executing: ped1135 = geomAnd(geomInside(ped1134 ped113) geomInside(ped113 ped1134))

Executing: ped11351 = geomAnd(geomOr(ped1135 ped111) nbd)

Executing: ped11352 = geomSize(geomGetEdge(ped1135 coincident ped11351) 0.55)

Executing: ped11353 = geomSize(geomGetEdge(ped111 coincident ped11351) 0.43)

Executing: ped1136 = geomAnd(ped11352 ped11353)

Executing: ped1137 = geomGetVertex(geomAndNot(ped1136 nbd) (keep == 3))

Executing: ped11381 = geomOr(ped11351 ped1136)

Executing: ped11371 = drc(ped1137 (area == 0.09245))

Executing: ped11382 = geomOr(ped11351 geomEnclose(ped1136 ped11371 (keep == 1)))

Executing: ped1138 = geomAnd(geomInside(ped11381 ped11382) geomInside(ped11382 ped11381))

Executing: ped1141 = geomSize(ped1135 1.57)

Executing: ped1142 = geomAndNot(ped1141 ped1135)

Executing: ped1143 = geomAndNot(ped1142 poly)

Executing: ped114 = geomEnclose(geomOutside(ped1141 ped1143) pedx1 (keep == 2))

Executing: ped1151 = geomSize(ped114 3.31)

Executing: ped1152 = geomSize(ped114 -0.33)

Executing: ped1153 = geomAndNot(ped1151 ped1152)

Executing: ped1154 = geomWidth(geomAndNot(ped1153 pdd) (keep >= 0.005))

Executing: ped1155 = geomAnd(geomAndNot(ped1152 ped111) pdd)

Executing: ped115 = geomInside(ped114 geomOutside(ped1151 geomOr(ped1154 ped1155)))

Executing: ped1161 = geomSize(ped115 2.21)

Executing: ped1162 = geomEnclose(geomSize(ped115 1.58) ped115 (keep == 1))

Executing: ped1163 = geomAndNot(geomAndNot(ped1161 ped1162) psdg)

Executing: ped11641 = geomWidth(ped1163 (keep >= 0.015))

Executing: ped11642a = drc(ped1163 (width == 0.01))

Executing: ped11642 = drc(ped11642a (area > 1.1e-05))

Executing: ped11643 = drc(ped1163 (width == 0.005))

Executing: ped1165 = geomAnd(geomAndNot(ped1162 ped111) diff)

Executing: ped1166 = geomOutside(ped1161 geomOr(ped11641 ped11642 ped11643 ped1165))

Executing: ped116 = geomInside(ped115 ped1166)

Executing: ped131 = geomStraddle(psdg geomAndNot(ped1166 ped1162))

Executing: ped1321 = geomSize(ped131 1.1)

Executing: ped1322 = geomAndNot(ped1321 pdd)

Executing: ped132 = geomOutside(ped1321 ped1322)

Executing: ped133 = geomStraddle(pdd ped132)

Executing: ped1341 = geomSize(ped133 3.9)

Executing: ped1342 = geomAndNot(ped1341 dnwelldg)

Executing: ped134 = geomOutside(ped1341 ped1342)

Executing: ped135 = geomInside(ped131 ped134)

Executing: ped1351 = geomSize(ped135 0.3)

Executing: ped1352 = geomSize(geomGetLength(geomGetEdge(ped111 inside ped134) (keep > 4....

Executing: ped1353 = geomAndNot(ped1351 ped1352)

Executing: ped1354 = geomAndNot(ped1353 pbd)

Executing: ped1355 = geomAnd(ped134 pbd)

Executing: ped1356 = geomWidth(geomAndNot(ped1355 ped1353) (keep >= 0.005))

Executing: ped1361 = geomOutside(ped134 geomOr(ped1354 ped1356))

Executing: ped1362 = geomOutside(geomOutside(ped1361 nwell) isopw)

Executing: ped1363 = geomOutside(ped1362 geomAndNot(geomAnd(ped1362 nbd) ped1138))

Executing: ped13641a = geomSize(geomGetLength(geomGetEdge(ped111 inside ped134) (keep ==...

Executing: ped13641 = geomSize(geomOr(ped13641a ped111) 0.22)

Executing: ped13642 = geomAnd(ped13641 geomSize(ped1162 -0.47))

Executing: ped1364 = geomOutside(ped1363 geomAndNot(geomAnd(ped1363 poly) ped13642))

Executing: ped1365 = geomOutside(ped1364 geomAndNot(geomAndNot(geomAnd(ped1364 diff) ped...

Executing: ped136 = geomOutside(geomOutside(ped1365 sab) geomOr(depl sci))

Executing: ped12 = geomInside(geomInside(ped111 ped116) ped136)

Executing: ped1_ch = geomAnd(ped12 pedx1)

Executing: ped = geomEnclose(ped_poly ped1_ch (keep == 2))

Executing: ped2111a = drc(geomAndNot(nsdg pedx4c) (area == 1.5484))

Executing: ped2111 = geomButtOnly(pedx4d ped2111a (keep == 2))

Executing: ped2112a = geomEnclose(geomEnclose(diff ped2111 (keep == 1)) pedx3e (keep == 2))

Executing: ped2112 = geomGetVertex(ped2112a (keep == 8))

Executing: ped2113 = geomGetRectangle(geomOr(ped2111 pedx3e) (5.0 <= length) (width == 4...

Executing: ped211 = geomInside(ped2113 ped2112)

Executing: ped2121 = geomStraddle(pedxh ped211 (keep == 1))

Executing: ped2122 = geomSize(ped2121 1.35)

Executing: ped2123 = geomOr(geomStraddle(pdmosgate ped2122) ped2121)

Executing: ped2124 = geomAndNot(ped2123 ped2122)

Executing: ped21241 = geomWidth(ped2124 (keep >= 0.015))

Executing: ped21242a = drc(ped2124 (width == 0.01))

Executing: ped21242 = drc(ped21242a (area > 1.1e-05))

Executing: ped21243 = drc(ped2124 (width == 0.005))

Executing: ped21244 = geomOutside(ped2123 geomOr(ped21241 ped21242 ped21243))

Executing: ped2125 = geomAndNot(ped2122 ped2123)

Executing: ped212 = geomOutside(ped21244 ped2125)

Executing: ped213 = geomAndNot(ped2121 ped211)

Executing: ped2131 = geomSize(ped213 0.55)

Executing: ped2132 = geomGetRectangle(geomAnd(ped211 nbd) (5.0 <= length) (width == 3.14))

Executing: ped2133 = geomAndNot(ped2131 ped2132)

Executing: ped2134 = geomAndNot(ped2133 nbd)

Executing: ped2135a = geomAndNot(geomAnd(ped212 nbd) geomOr(ped2131 ped2132))

Executing: ped2135 = geomWidth(ped2135a (keep >= 0.005))

Executing: ped2136 = geomAndNot(geomSize(ped213 0.02) ped2113)

Executing: ped2137 = geomAndNot(geomAndNot(ped2136 pdmosgate) nimp)

Executing: ped2138a = geomOutside(ped212 geomOr(ped2134 ped2135 ped2137))

Executing: ped2138 = geomEnclose(ped2138a ped213 (keep == 2))

Executing: ped2141 = geomSize(ped2138 0.22)

Executing: ped2142 = geomAndNot(ped2141 ped2138)

Executing: ped2143 = geomAndNot(ped2142 poly)

Executing: ped214 = geomEnclose(geomOutside(ped2141 ped2143) pedx1 (keep == 2))

Executing: ped2151 = geomSize(ped214 3.31)

Executing: ped2152 = geomSize(ped214 -0.33)

Executing: ped2153 = geomAndNot(ped2152 ped2152)

Executing: ped2154 = geomAndNot(ped2153 pdd)

Executing: ped21541 = geomWidth(ped2154 (keep >= 0.02))

Executing: ped21542 = drc(ped2154 (width == 0.015))

Executing: ped21543a = drc(ped2154 (width == 0.01))

Executing: ped21543 = drc(ped21543a (area > 1.1e-05))

Executing: ped21544 = drc(ped2154 (width == 0.005))

Executing: ped2155 = geomAnd(geomAndNot(ped2152 ped211) pdd)

Executing: ped2156 = geomOutside(ped2151 geomOr(ped21541 ped21542 ped21543 ped21544 ped2...

Executing: ped215 = geomInside(ped214 ped2156)

Executing: ped2161 = geomSize(ped215 2.21)

Executing: ped2162 = geomEnclose(geomSize(ped215 1.58) ped215 (keep == 1))

Executing: ped2163 = geomAndNot(geomAndNot(ped2161 ped2162) psdg)

Executing: ped21641 = geomWidth(ped2163 (keep >= 0.025))

Executing: ped21642a = drc(ped2163 (width == 0.02))

Executing: ped21642 = drc(ped21642a (area > 2.1e-05))

Executing: ped21643 = drc(ped2163 (width == 0.015))

Executing: ped21644a = drc(ped2163 (width == 0.01))

Executing: ped21644 = drc(ped21644a (area > 1.1e-05))

Executing: ped21645 = drc(ped2163 (width == 0.005))

Executing: ped2165 = geomAnd(geomAndNot(ped2162 ped215) diff)

Executing: ped2166 = geomOutside(ped2161 geomOr(ped21641 ped21642 ped21643 ped21644 ped2...

Executing: ped216 = geomInside(ped214 ped2166)

Executing: ped231 = geomStraddle(psdg geomAndNot(ped2166 ped2162))

Executing: ped2321 = geomSize(ped231 1.1)

Executing: ped2322 = geomAndNot(ped2321 pdd)

Executing: ped232 = geomOutside(ped2321 ped2322)

Executing: ped233 = geomStraddle(pdd ped232)

Executing: ped2341 = geomSize(ped233 3.9)

Executing: ped2342 = geomAndNot(ped2341 dnwelldg)

Executing: ped234 = geomOutside(ped2341 ped2342)

Executing: ped235 = geomInside(ped231 ped234)

Executing: ped2351 = geomSize(ped235 0.3)

Executing: ped2354 = geomAndNot(ped2351 pbd)

Executing: ped2355 = geomAnd(ped234 pbd)

Executing: ped2356 = geomWidth(geomAndNot(ped2355 ped2351) (keep >= 0.005))

Executing: ped2361 = geomOutside(ped234 geomOr(ped2354 ped2356))

Executing: ped2362 = geomOutside(geomOutside(ped2361 nwell) isopw)

Executing: ped2363 = geomOutside(ped2362 geomAndNot(geomAnd(ped2362 nbd) ped2138))

Executing: ped23641a = geomSize(geomGetLength(geomGetEdge(ped211 inside ped234) (keep ==...

Executing: ped23641 = geomSize(geomOr(ped23641a ped211) 0.22)

Executing: ped23642 = geomAnd(ped23641 geomSize(ped2162 -0.47))

Executing: ped2364 = geomOutside(ped2363 geomAndNot(geomAnd(ped2363 poly) ped23642))

Executing: ped2365 = geomOutside(ped2364 geomAndNot(geomAndNot(geomAnd(ped2364 diff) ped...

Executing: ped236 = geomOutside(geomOutside(ped2365 sab) geomOr(depl sci))

Executing: ped221 = geomInside(geomInside(ped211 ped216) ped236)

Executing: ped22 = geomAnd(geomEnclose(ped216 ped221) ped2138)

Executing: ped2_ch = geomAnd(ped22 pedx1)

Executing: ped2 = geomEnclose(ped_poly ped2_ch (keep == 2))

Executing: pedx2_al = geomOr(ped12 ped22)

Executing: ped_ch = geomOr(ped1_ch ped2_ch)

Executing: qpva_dnw = geomOutside(geomOutside(dnwell nwell) geomOr(mv poly gxh))

Executing: qpva_ip01 = geomInside(pbd geomOutside(qpva_dnw dio_mark))

Executing: qpva_ip01a = geomSize(qpva_ip01 -2.0)

Executing: qpva_ip01b = geomSize(qpva_ip01a 2.0)

Executing: qpva_ip10 = geomGetRectangle(qpva_ip01b)

Executing: qpva_ip1 = drc(qpva_ip10 (width == 10.59))

Executing: qpva_ip2 = geomEnclose(qpva_ip1 diff (keep == 3))

Executing: qpva_ip3 = geomEnclose(qpva_ip2 nsdg (keep == 2))

Executing: qpva_ip4 = geomEnclose(qpva_ip3 psdg (keep == 1))

Executing: qpva_ip5 = geomEnclose(qpva_ip4 pbd (keep == 1))

Executing: qpva_21 = geomGetRectangle(geomInside(nsdg qpva_ip5) (width == 1.89))

Executing: qpva_22 = geomGetRectangle(geomInside(psdg qpva_ip5) (width == 2.69))

Executing: qpva_23 = geomGetVertex(geomSize(geomSize(geomOr(qpva_21 qpva_22) 0.28) -0.28...

Executing: qpva_24 = geomSize(geomGetLength(qpva_22 (keep == 2.69)) -0.15)

Executing: qpva_250 = geomGetRectangle(geomAndNot(qpva_23 qpva_24))

Executing: qpva_25 = drc(qpva_250 (width == 7.59))

Executing: qpva_26 = geomGetRectangle(geomInside(nsdg qpva_25) (width == 1.89))

Executing: qpva_27 = geomSize(geomGetLength(qpva_26 (keep == 1.89)) 0.15)

Executing: qpva_27a0 = geomSize(geomSize(geomOr(qpva_26 qpva_27 qpva_22) 0.28) -0.28)

Executing: qpva_27a1 = geomGetRectangle(geomAnd(geomInside(qpva_22 qpva_27a0) sab) (widt...

Executing: qpva_27a2 = geomEnclose(geomAnd(qpva_ip5 sab) qpva_27a1 (keep == 2))

Executing: qpva_27a3 = geomAndNot(qpva_22 geomAnd(qpva_27a2 qpva_27a1))

Executing: qpva_27a4 = geomSize(geomGetEdge(qpva_27a3 outside qpva_27a2) 1.67)

Executing: qpva_27aa = geomOr(qpva_27a4 qpva_27a3)

Executing: qpva_27ab = geomAndNot(qpva_27aa sab)

Executing: qpva_27ac = geomSize(qpva_27a0 0.22)

Executing: qpva_27ad = geomOr(qpva_27ab qpva_27a2)

Executing: qpva_27ae = geomAnd(geomInside(qpva_27ac qpva_27ad) geomInside(qpva_27ad qpva...

Executing: qpva_27a = geomInside(qpva_27a0 qpva_27ae)

Executing: qpva_27b = geomSize(geomGetLength(qpva_27a (keep == 7.59)) 0.35)

Executing: qpva_28 = geomSize(geomOr(qpva_27a qpva_27b) 1.5)

Executing: qpva_29 = geomAnd(geomInside(qpva_28 qpva_ip5) geomInside(qpva_ip5 qpva_28))

Executing: qpva_31 = geomSize(geomGetLength(qpva_29 (keep == 10.59)) 4.6)

Executing: qpva_32 = geomSize(geomOr(qpva_29 qpva_31) 1.0)

Executing: geomHoles(geomInside(nbd geomEnclose(dnwell qpva_ip5)))

Executing: qpva_41 = geomAnd(geomInside(qpva_32 qpva_32a) geomInside(qpva_32a qpva_32))

Executing: qpva_33 = geomInside(qpva_ip01 qpva_41)

Executing: qpva_42 = geomSize(geomOr(geomSize(geomGetLength(qpva_29 (keep == 10.59)) 0.9...

Executing: qpva_43 = geomAndNot(qpva_42 qpva_41)

Executing: qpva_44 = geomEnclose(qpva_dnw qpva_43)

Executing: qpva_45 = geomAnd(geomAndNot(qpva_44 qpva_43) nbd)

Executing: qpva_461 = geomAndNot(qpva_43 nbd)

Executing: qpva_462 = drc(geomAnd(qpva_461 qpva_44) (area == 0.21125))

Executing: qpva_463 = geomOutside(qpva_44 geomOr(qpva_45 geomAndNot(qpva_461 qpva_462)))

Executing: qpva_464 = geomSize(geomOr(geomAndNot(qpva_43 qpva_462) qpva_41) 2.79)

Executing: qpva_4651 = geomAndNot(qpva_463 qpva_464)

Executing: qpva_4652 = geomAndNot(qpva_464 qpva_463)

Executing: qpva_4653 = geomWidth(qpva_4651 (keep >= 0.005))

Executing: qpva_4654 = geomWidth(qpva_4652 (keep >= 0.005))

Executing: qpva_46 = geomOutside(geomOr(qpva_463 qpva_464) geomOr(qpva_4653 qpva_4654))

Executing: qpva_51 = geomAnd(qpva_46 geomAnd(nbd qpva_42))

Executing: qpva_52a = geomGetEdge(qpva_51 outside qpva_41)

Executing: qpva_521 = geomSize(qpva_52a -0.21)

Executing: qpva_520 = geomAndNot(geomSize(qpva_52a -0.63) qpva_521)

Executing: qpva_541 = geomWidth(geomAndNot(qpva_520 nsdg) (keep >= 0.005))

Executing: qpva_542 = geomWidth(geomAnd(qpva_521 nsdg) (keep >= 0.005))

Executing: qpva_54 = geomAndNot(geomAndNot(geomSize(qpva_46 -2.795) qpva_41) nbd)

Executing: qpva_54a = geomAnd(geomAndNot(qpva_46 geomSize(qpva_46 -2.79)) nbd)

Executing: qpva_55 = geomOutside(qpva_46 geomOr(qpva_54 qpva_542 qpva_541 qpva_54a))

Executing: qpva_61 = geomSize(geomSize(geomGetEdge(qpva_27a coincident nsdg) 3.35) 0.15)

Executing: qpva_62 = geomSize(geomSize(geomGetEdge(qpva_27a coincident nsdg) 5.24) 0.15)

Executing: qpva_631 = geomAndNot(qpva_62 qpva_61)

Executing: qpva_632 = geomAnd(qpva_43 psdg)

Executing: qpva_63 = geomAnd(geomInside(qpva_631 qpva_632) geomInside(qpva_632 qpva_631))

Executing: qpva_641 = geomGetLength(geomGetEdge(qpva_63 coincident qpva_62) (keep >= 6.3))

Executing: qpva_642 = geomSize(qpva_641 0.56)

Executing: qpva_643 = geomSize(qpva_641 1.91)

Executing: qpva_644 = geomAndNot(qpva_643 qpva_642)

Executing: qpva_64 = geomAndNot(qpva_644 geomStraddle(qpva_644 geomAndNot(qpva_644 nsdg)))

Executing: qpva_511 = geomOr(geomAndNot(qpva_51 geomOr(qpva_520 qpva_521)) qpva_41)

Executing: qpva_65_1x = geomEnclose(geomEnclose(qpva_511 qpva_64 (keep == 2)) qpva_63 (k...

Executing: qpva_65_2x = geomEnclose(geomEnclose(qpva_511 qpva_64 (keep == 3)) qpva_63 (k...

Executing: qpva_65 = geomOr(qpva_65_1x qpva_65_2x)

Executing: qpva_66 = geomAnd(geomAndNot(qpva_65 geomOr(qpva_27a qpva_63 qpva_64)) diff)

Executing: qpva_711 = geomGetEdge(geomSize(qpva_41 -2.28) coincident qpva_27ae)

Executing: qpva_71 = geomSize(qpva_711 3.06)

Executing: qpva_73 = geomSize(qpva_711 7.28)

Executing: qpva_721 = geomGetEdge(geomSize(qpva_41 -3.28) coincident qpva_27aa)

Executing: qpva_72 = geomSize(qpva_721 5.06)

Executing: qpva_74 = geomSize(qpva_721 7.84)

Executing: qpva_75 = geomAndNot(qpva_74 qpva_72)

Executing: qpva_76 = geomAndNot(geomAndNot(qpva_73 qpva_71) qpva_75)

Executing: qpva_77 = geomAndNot(qpva_76 sab)

Executing: qpva_78 = geomAnd(geomAndNot(qpva_55 geomOr(qpva_76 qpva_27ae)) sab)

Executing: qpvascr0 = geomInside(qpva_33 geomOutside(geomEnclose(qpva_55 qpva_65) geomOr...

Executing: qpvh_hnw = geomOutside(hnw geomOr(mv poly gxh))

Executing: qpvh_ip1 = geomGetRectangle(geomInside(pdf qpvh_hnw) ((16 <= length) <= 150) ...

Executing: qpvh_ip2 = geomEnclose(qpvh_ip1 diff (keep == 3))

Executing: qpvh_ip3 = geomEnclose(qpvh_ip2 nsdg (keep == 2))

Executing: qpvh_ip4 = geomEnclose(qpvh_ip3 psdg (keep == 1))

Executing: qpvh_ip5 = geomEnclose(qpvh_ip4 isopw (keep == 1))

Executing: qpvh_11 = geomGetRectangle(geomInside(isopw qpvh_ip5) (width == 2.68))

Executing: qpvh_21 = geomGetRectangle(geomInside(diff qpvh_11) (width == 0.42))

Executing: qpvh_22 = geomGetRectangle(geomInside(psdg qpvh_11) (width == 0.42))

Executing: qpvh_23 = geomGetVertex(geomSize(geomSize(qpvh_21 0.14) -0.14) (keep == 12))

Executing: qpvh_24 = geomSize(geomGetLength(qpvh_22 (keep == 0.42)) -0.04)

Executing: qpvh_25 = geomGetRectangle(geomAndNot(qpvh_23 qpvh_24) (width == 1.82))

Executing: qpvh_26 = geomGetRectangle(geomInside(nsdg qpvh_25) (width == 0.42))

Executing: qpvh_27 = geomSize(geomGetLength(qpvh_26 (keep == 0.42)) 0.04)

Executing: qpvh_27a = geomSize(geomSize(geomOr(qpvh_26 qpvh_27 qpvh_22) 0.14) -0.14)

Executing: qpvh_28 = geomSize(qpvh_27a 0.43)

Executing: qpvh_29 = geomAnd(geomInside(qpvh_28 qpvh_11) geomInside(qpvh_11 qpvh_28))

Executing: qpvh_31 = geomSize(geomGetLength(qpvh_29 (keep == 2.68)) 1.2)

Executing: qpvh_32 = geomSize(geomOr(qpvh_29 qpvh_31) 1.37)

Executing: qpvh_33 = geomAnd(geomInside(qpvh_32 qpvh_ip5) geomInside(qpvh_ip5 qpvh_32))

Executing: qpvh_41 = geomSize(geomOr(geomSize(geomGetLength(qpvh_33 (keep == 5.42)) 1.0)...

Executing: qpvh_42 = geomSize(geomOr(geomSize(geomGetLength(qpvh_41 (keep == 7.42)) 0.34...

Executing: qpvh_43 = geomAndNot(qpvh_42 qpvh_41)

Executing: qpvh_44 = geomEnclose(qpvh_hnw qpvh_43)

Executing: qpvh_45 = geomAnd(geomAndNot(qpvh_44 qpvh_43) nwell)

Executing: qpvh_46 = geomOutside(qpvh_44 geomOr(qpvh_45 geomAndNot(qpvh_43 nwell)))

Executing: qpvh_51 = geomAnd(qpvh_46 qpvh_42)

Executing: qpvh_52 = geomAndNot(geomSize(qpvh_51 -0.22) geomSize(qpvh_51 -0.64))

Executing: qpvh_53 = geomAndNot(qpvh_46 qpvh_33)

Executing: qpvh_541 = geomAnd(geomAndNot(qpvh_53 qpvh_52) nsdg)

Executing: qpvh_54 = geomAndNot(qpvh_541 nwell)

Executing: qpvh_55 = geomOutside(qpvh_46 geomEnclose(geomOr(qpvh_54 geomAndNot(qpvh_52 n...

Executing: qpvh_61 = geomAndNot(qpvh_33 geomSize(geomGetLength(qpvh_33 (keep == 5.42)) -...

Executing: qpvh_62 = geomSize(geomGetLength(qpvh_61 (5.42 < keep)) 1.46)

Executing: qpvh_63 = geomSize(geomGetLength(qpvh_61 (5.42 < keep)) 2.22)

Executing: qpvh_64 = geomAndNot(qpvh_63 qpvh_62)

Executing: qpvh_65 = geomAndNot(qpvh_55 qpvh_33)

Executing: qpvh_66 = geomAnd(geomAndNot(qpvh_65 qpvh_64) psdg)

Executing: qpvh_67 = geomAndNot(qpvh_64 psdg)

Executing: qpvh_68 = geomOutside(qpvh_55 geomOr(qpvh_66 qpvh_67))

Executing: qpvh_71 = geomAnd(qpvh_64 geomSize(geomGetLength(qpvh_61 (5.42 < keep)) 1.68))

Executing: qpvh_72 = geomAndNot(qpvh_71 sab)

Executing: qpvh_73a = geomOr(qpvh_72 geomAndNot(geomAnd(geomAnd(qpvh_68 sab) diff) qpvh_...

Executing: qpvh_73 = geomOutside(qpvh_68 geomOr(qpvh_72 qpvh_73a))

Executing: qpvh_81a = geomOr(qpvh_33 geomSize(geomGetLength(qpvh_33 (keep == 5.42)) 1.84))

Executing: qpvh_81 = geomSize(qpvh_81a 5.08)

Executing: qpvh_82 = geomAnd(geomInside(qpvh_81 qpvh_73) geomInside(qpvh_73 qpvh_81))

Executing: qpvhscr1 = geomAnd(qpvh_33 qpvh_82)

Executing: qpvhscr_bas = geomEnclose(qpvh_73 qpvhscr1)

Executing: qnvam_isopw = geomEmpty()

Executing: qnv_depl = geomGetVertex(dpldnw (keep == 8))

Executing: qnv_dl2 = geomEnclose(qnv_depl diff (keep == 1))

Executing: qnv_dl3 = geomEnclose(qnv_dl2 nsdg (keep == 1))

Executing: qnv_dl4 = geomEnclose(qnv_dl3 psdg (keep == 1))

Executing: qnv_dl5 = geomEnclose(qnv_dl4 diff_pur (keep == 1))

Executing: qnva_nd1 = geomGetVertex(geomInside(nsdg qnv_dl5) (keep == 8))

Executing: qnva_nd3 = geomEnclose(qnva_nd1 geomSize(geomGetLength(qnva_nd1 ((0.311 < kee...

Executing: qnva_nd4 = geomEnclose(qnva_nd3 geomSize(geomGetLength(qnva_nd3 (keep == 0.58...

Executing: qnva_nd = geomEnclose(qnva_nd4 geomSize(geomGetLength(qnva_nd4 ((1.56 <= keep...

Executing: qnva_xs0 = geomAndNot(qnva_nd sab)

Executing: qnva_xs1 = geomXor(geomSize(qnva_nd -0.18) qnva_xs0)

Executing: qnva_xs2 = geomXor(qnva_nd geomSize(qnva_xs0 0.18))

Executing: qnva_xsn1a = geomOr(qnva_xs1 qnva_xs2)

Executing: qnva_xsn1 = geomOr(drc(qnva_xsn1a (width < 0.005)))

Executing: qnva_xsn = geomEnclose(qnva_nd qnva_xsn1 (keep == 8))

Executing: qnva_df1 = geomButtOnly(geomGetHoled(diff_pur) qnva_xsn)

Executing: qnva_df2 = geomSize(qnva_xsn 0.45)

Executing: qnva_df3 = geomSize(geomOr(qnva_df1 qnva_xsn) -0.45)

Executing: qnva_xd1 = geomXor(qnva_df1 geomAndNot(qnva_df2 qnva_xsn))

Executing: qnva_xd2 = geomXor(qnva_df3 qnva_xsn)

Executing: qnva_xdf1a = geomOr(qnva_xd1 qnva_xd2)

Executing: qnva_xdf1b = geomOr(drc(qnva_xdf1a (width < 0.005)))

Executing: qnva_xdf1 = geomEnclose(qnva_df2 qnva_xdf1b (keep == 8))

Executing: qnva_xdf = geomInside(qnva_xsn geomAnd(geomEnclose(qnva_df2 qnva_xdf1a (keep ...

Executing: qnva_pd1 = geomAnd(geomEnclose(qnv_dl5 qnva_xdf) psdg)

Executing: qnva_xs3 = geomOr(geomAnd(qnva_pd1 sab) qnva_df2)

Executing: qnva_xs4 = geomXor(geomSize(qnva_xs3 -0.63) qnva_xdf)

Executing: qnva_xs5 = geomXor(geomSize(qnva_xdf 0.63) qnva_xs3)

Executing: qnva_xs6 = geomSize(qnva_xdf 0.635)

Executing: qnva_xsp1a = geomOr(qnva_xs4 qnva_xs5)

Executing: qnva_xsp1 = geomOr(drc(qnva_xsp1a (width < 0.005)))

Executing: qnva_xsp = geomInside(qnva_xdf geomEnclose(qnva_xs6 qnva_xsp1 (keep == 8)))

Executing: qnva_pd2 = geomAnd(geomEnclose(qnv_dl5 qnva_xsp) diff)

Executing: qnva_pd3 = geomSize(geomSize(geomGetLength(qnva_xsp (keep == 0.58)) 0.97) 0.2)

Executing: qnva_pd4 = geomSize(qnva_xsp 0.97)

Executing: qnva_pd5 = geomSize(qnva_pd2 0.005)

Executing: qnva_xp1 = geomXor(qnva_pd2 geomOr(qnva_xsp qnva_pd3 qnva_pd4))

Executing: qnva_xp2 = geomSize(qnva_xp1 -0.002 downUp noClipAcute)

Executing: qnva_xpd1 = geomEnclose(qnva_pd5 geomGetVertex(qnva_xp2 (keep == 3)) (keep ==...

Executing: qnva_xpd = geomInside(qnva_xsp geomAnd(geomEnclose(qnva_pd5 qnva_xp1 (keep ==...

Executing: qnva_wd1 = geomEnclose(qnv_dl5 qnva_xpd (keep == 1))

Executing: qnva_wd2 = geomInside(qnva_pd2 qnva_wd1)

Executing: qnva_wd3 = geomSize(qnva_wd1 -0.18)

Executing: qnva_wd4 = geomSize(qnva_wd2 0.18)

Executing: qnva_wd5 = geomOr(geomXor(qnva_wd1 qnva_wd4) geomXor(qnva_wd2 qnva_wd3))

Executing: qnva_xwd1 = geomOr(drc(qnva_wd5 (width < 0.005)))

Executing: qnva_xwd = geomInside(qnva_xpd geomEnclose(qnva_wd1 qnva_xwd1 (keep == 8)))

Executing: qnva_co1 = geomEnclose(qnv_dl5 qnva_xwd (keep == 1))

Executing: qnva_co2 = geomSize(qnva_co1 0.33)

Executing: qnva_co3 = geomSize(qnva_co1 0.335)

Executing: qnva_co4 = geomSize(qnva_co1 0.34)

Executing: qnva_ce1 = geomAnd(geomAndNot(qnva_co2 qnva_co1) diff)

Executing: qnva_ce2 = geomAndNot(geomAndNot(qnva_co4 qnva_co3) nsdg)

Executing: qnva_hn1 = geomEnclose(geomInside(nbd dnwellmv) qnva_xwd)

Executing: qnva_co5 = geomStraddle(geomAnd(qnva_hn1 nsdg) geomAndNot(qnva_co4 qnva_co3))

Executing: qnva_co6 = geomSize(qnva_co5 0.33)

Executing: qnva_co7 = geomSize(qnva_co5 0.335)

Executing: qnva_co8 = geomSize(qnva_co5 0.34)

Executing: qnva_ce3 = geomAndNot(qnva_co6 nbd)

Executing: qnva_ce4 = geomAnd(geomAndNot(geomAndNot(qnva_co8 qnva_co7) qnva_co1) nbd)

Executing: qnva_ce5 = geomOutside(qnva_hn1 geomOr(qnva_ce1 qnva_ce2 qnva_ce3 qnva_ce4))

Executing: qnva_ce6 = geomOutside(qnva_ce5 geomAndNot(geomAndNot(qnva_ce5 qnv_dl5) nwell))

Executing: qnva = geomInside(qnva_xwd geomInside(geomSize(qnva_ce6 1.35) dnwellmv))

Executing: qnva_dpl = geomEnclose(qnv_dl5 qnva (keep == 1))

Executing: qnvz_nw1 = geomEnclose(nwell qnva_xwd)

Executing: qnvz_co5 = geomStraddle(geomAnd(qnvz_nw1 nsdg) geomAndNot(qnva_co4 qnva_co3))

Executing: qnvz_co6 = geomSize(qnvz_co5 0.33)

Executing: qnvz_ce5 = geomOutside(qnvz_nw1 geomOr(qnva_ce1 qnva_ce2 qnva_ce3 qnva_ce4))

Executing: qnvz_ce61 = drc(qnv_dl5 (area == 16.5478))

Executing: qnvz_ce6 = geomAndNot(qnvz_ce5 geomOr(geomInside(qnvz_ce61 nwell) qnvz_co6))

Executing: qnvz_ce7 = geomWidth(qnvz_ce6 (keep >= 0.01))

Executing: qnvz_ce8 = drc(qnvz_ce6 (width == 0.005))

Executing: qnvz_ce9 = geomOutside(qnvz_ce5 geomOr(qnvz_ce7 qnvz_ce8))

Executing: qnvz = geomInside(qnva_xwd geomInside(geomSize(qnvz_ce9 1.35) dnwellmv))

Executing: qnvz_dpl = geomEnclose(qnv_dl5 qnvz (keep == 1))

Executing: qnv_dnw1 = geomOutside(dnwellmv poly)

Executing: qnvb_dl1 = geomInside(geomInside(depl nwell) geomOutside(qnv_dnw1 gxh))

Executing: qnvb_dl2 = geomEnclose(qnvb_dl1 diff (keep == 1))

Executing: qnvb_dl3 = geomEnclose(qnvb_dl2 nsdg (keep == 1))

Executing: qnvb_dl4 = geomEnclose(qnvb_dl3 psdg (keep == 2))

Executing: qnvb_dl5 = geomEnclose(qnvb_dl4 diff_pur (keep == 2))

Executing: qnvb_nd1 = geomInside(nsdg qnvb_dl5)

Executing: qnvb_nd2 = geomGetRectangle(qnvb_nd1 ((3 <= length) <= 50) (width == 1.36))

Executing: qnvb_n31 = geomAnd(qnvb_nd2 sab)

Executing: qnvb_n32 = geomGetRectangle(qnvb_n31 ((3 <= length) <= 50) (width == 0.18))

Executing: qnvban32 = geomGetRectangle(qnvb_n31 ((3 <= length) <= 50) (width == 0.26))

Executing: qnvb_n33 = geomAnd(geomEnclose(qnvb_n31 qnvb_n32) geomEnclose(qnvb_n32 qnvb_n...

Executing: qnvban33 = geomAnd(geomEnclose(qnvb_n31 qnvban32) geomEnclose(qnvban32 qnvb_n...

Executing: qnvb_n34 = geomAndNot(qnvb_nd2 sab)

Executing: qnvb_n35 = geomGetRectangle(qnvb_n34 ((3 <= length) <= 50) (width == 1.0))

Executing: qnvban35 = geomGetRectangle(qnvb_n34 ((3 <= length) <= 50) (width == 0.84))

Executing: qnvb_n37 = geomEnclose(geomEnclose(qnvb_nd2 qnvb_n31 (keep == 2)) qnvb_n33 (k...

Executing: qnvb_nd3 = geomEnclose(geomEnclose(qnvb_n37 qnvb_n34 (keep == 1)) qnvb_n35 (k...

Executing: qnvban37 = geomEnclose(geomEnclose(qnvb_nd2 qnvb_n31 (keep == 2)) qnvban33 (k...

Executing: qnvband3 = geomEnclose(geomEnclose(qnvban37 qnvb_n34 (keep == 1)) qnvban35 (k...

Executing: qnvbxnd3 = geomOr(qnvb_nd3 qnvband3)

Executing: qnvb_pd1 = geomInside(psdg qnvb_dl5)

Executing: qnvb_pd2 = geomGetRectangle(qnvb_pd1 ((3 <= length) <= 50) (width == 0.72))

Executing: qnvb_p31 = geomAnd(qnvb_pd2 sab)

Executing: qnvb_p32 = geomGetRectangle(qnvb_p31 ((3 <= length) <= 50) (width == 0.18))

Executing: qnvb_p33 = geomAnd(geomEnclose(qnvb_p31 qnvb_p32) geomEnclose(qnvb_p32 qnvb_p...

Executing: qnvb_p34 = geomAndNot(qnvb_pd2 sab)

Executing: qnvb_p35 = geomGetRectangle(qnvb_p34 ((3 <= length) <= 50) (width == 0.54))

Executing: qnvb_p37 = geomEnclose(geomEnclose(qnvb_pd2 qnvb_p31 (keep == 1)) qnvb_p33 (k...

Executing: qnvb_pd3 = geomEnclose(geomEnclose(qnvb_p37 qnvb_p34 (keep == 1)) qnvb_p35 (k...

Executing: qnvb_bd1 = geomInside(diff_pur qnvb_dl5)

Executing: qnvb_bd2 = geomGetRectangle(qnvb_bd1 ((3 <= length) <= 50) (width == 0.34))

Executing: qnvb_b31 = geomAnd(qnvb_bd2 sab)

Executing: qnvb_b32 = geomButtOnly(qnvb_b31 qnvbxnd3 (keep == 1))

Executing: qnvb_b33 = geomButtOnly(qnvb_b32 qnvb_pd3 (keep == 1))

Executing: qnvb_bd3 = geomAnd(geomInside(qnvb_b31 qnvb_b33) geomInside(qnvb_b33 qnvb_b31))

Executing: qnvb_df1 = geomAnd(qnvb_dl5 diff)

Executing: qnvb_df21 = geomGetRectangle(qnvb_df1 ((3 <= length) <= 50))

Executing: qnvb_df2 = drc(qnvb_df21 (width == 3.48))

Executing: qnvb_d31 = geomEnclose(qnvb_df2 qnvbxnd3 (keep == 1))

Executing: qnvb_d32 = geomEnclose(qnvb_d31 qnvb_pd3 (keep == 2))

Executing: qnvb_d33 = geomEnclose(qnvb_d32 qnvb_bd3 (keep == 2))

Executing: qnvb_df3 = geomAnd(geomInside(qnvb_df1 qnvb_d33) geomInside(qnvb_d33 qnvb_df1))

Executing: qnvb_dl6 = geomSize(qnvb_df3 0.5)

Executing: qnvb_dl7 = geomAnd(geomInside(qnvb_dl6 qnvb_dl5) geomInside(qnvb_dl5 qnvb_dl6))

Executing: qnvb_r1 = geomInside(geomEnclose(dnwntie_h qnvb_dl7 (keep == 1)) nwell)

Executing: qnvb_r2 = geomSize(qnvb_dl7 0.6)

Executing: qnvb_r3 = geomAnd(geomInside(qnvb_r1 qnvb_r2) geomInside(qnvb_r2 qnvb_r1))

Executing: qnvb_r4 = geomSize(qnvb_r3 0.9)

Executing: qnvb_r5 = geomWidth(geomAnd(qnvb_r4 dnwntie) (keep >= 0.9))

Executing: qnvb_r6 = geomHoles(qnvb_r5 innermost)

Executing: qnvb_r7 = geomEnclose(qnvb_r6 qnvb_r3 (keep == 1))

Executing: qnvb_r81 = geomInside(qnvb_dl7 qnvb_r7)

Executing: qnvb_r82 = geomEnclose(qnv_dnw1 qnvb_r81)

Executing: qnvb_r83 = geomAndNot(qnvb_r82 geomSize(qnvb_r82 -0.38))

Executing: qnvb_r8 = geomOutside(qnvb_r82 geomAnd(qnvb_r83 nwell))

Executing: qnvbx = geomInside(qnvb_r81 qnvb_r8)

Executing: qnvb = geomEnclose(qnvbx qnvb_nd3 (keep == 1))

Executing: qnvba = geomEnclose(qnvbx qnvband3 (keep == 1))

Executing: qnvb_all = geomOr(qnvb qnvba)

Executing: qnvc_ip1 = geomInside(isopw geomInside(qnv_dnw1 mv))

Executing: qnvc_ip2 = geomEnclose(qnvc_ip1 diff (keep == 1))

Executing: qnvc_ip3 = geomEnclose(qnvc_ip2 nsdg (keep == 1))

Executing: qnvc_ip4 = geomEnclose(qnvc_ip3 psdg (keep == 2))

Executing: qnvc_ip5 = geomEnclose(qnvc_ip4 diff_pur (keep == 2))

Executing: qnvc_nd1 = geomInside(nsdg qnvc_ip5)

Executing: qnvc_nd2 = geomGetRectangle(qnvc_nd1 ((3 <= length) <= 50) (width == 1.36))

Executing: qnvc_n31 = geomAnd(qnvc_nd2 sab)

Executing: qnvc_n32 = geomGetRectangle(qnvc_n31 ((3 <= length) <= 50) (width == 0.18))

Executing: qnvcan32 = geomGetRectangle(qnvc_n31 ((3 <= length) <= 50) (width == 0.26))

Executing: qnvc_n33 = geomAnd(geomEnclose(qnvc_n31 qnvc_n32) geomEnclose(qnvc_n32 qnvc_n...

Executing: qnvcan33 = geomAnd(geomEnclose(qnvc_n31 qnvcan32) geomEnclose(qnvcan32 qnvc_n...

Executing: qnvc_n34 = geomAndNot(qnvc_nd2 sab)

Executing: qnvc_n35 = geomGetRectangle(qnvc_n34 ((3 <= length) <= 50) (width == 1.0))

Executing: qnvcan35 = geomGetRectangle(qnvc_n34 ((3 <= length) <= 50) (width == 0.84))

Executing: qnvc_n37 = geomEnclose(geomEnclose(qnvc_nd2 qnvc_n31 (keep == 2)) qnvc_n33 (k...

Executing: qnvc_nd3 = geomEnclose(geomEnclose(qnvc_n37 qnvc_n34 (keep == 1)) qnvc_n35 (k...

Executing: qnvcan37 = geomEnclose(geomEnclose(qnvc_nd2 qnvc_n31 (keep == 2)) qnvcan33 (k...

Executing: qnvcand3 = geomEnclose(geomEnclose(qnvcan37 qnvc_n34 (keep == 1)) qnvcan35 (k...

Executing: qnvcxnd3 = geomOr(qnvc_nd3 qnvcand3)

Executing: qnvc_pd1 = geomInside(psdg qnvc_ip5)

Executing: qnvc_pd2 = geomGetRectangle(qnvc_pd1 ((3 <= length) <= 50) (width == 0.72))

Executing: qnvc_p31 = geomAnd(qnvc_pd2 sab)

Executing: qnvc_p32 = geomGetRectangle(qnvc_p31 ((3 <= length) <= 50) (width == 0.18))

Executing: qnvc_p33 = geomAnd(geomEnclose(qnvc_p31 qnvc_p32) geomEnclose(qnvc_p32 qnvc_p...

Executing: qnvc_p34 = geomAndNot(qnvc_pd2 sab)

Executing: qnvc_p35 = geomGetRectangle(qnvc_p34 ((3 <= length) <= 50) (width == 0.54))

Executing: qnvc_p37 = geomEnclose(geomEnclose(qnvc_pd2 qnvc_p31 (keep == 1)) qnvc_p33 (k...

Executing: qnvc_pd3 = geomEnclose(geomEnclose(qnvc_p37 qnvc_p34 (keep == 1)) qnvc_p35 (k...

Executing: qnvc_bd1 = geomInside(diff_pur qnvc_ip5)

Executing: qnvc_bd2 = geomGetRectangle(qnvc_bd1 ((3 <= length) <= 50) (width == 0.34))

Executing: qnvc_b31 = geomAnd(qnvc_bd2 sab)

Executing: qnvc_b32 = geomButtOnly(qnvc_b31 qnvcxnd3 (keep == 1))

Executing: qnvc_b33 = geomButtOnly(qnvc_b32 qnvc_pd3 (keep == 1))

Executing: qnvc_bd3 = geomAnd(geomInside(qnvc_b31 qnvc_b33) geomInside(qnvc_b33 qnvc_b31))

Executing: qnvc_df1 = geomAnd(qnvc_ip5 diff)

Executing: qnvc_df21 = geomGetRectangle(qnvc_df1 ((3 <= length) <= 50))

Executing: qnvc_df2 = drc(qnvc_df21 (width == 3.48))

Executing: qnvc_d31 = geomEnclose(qnvc_df2 qnvcxnd3 (keep == 1))

Executing: qnvc_d32 = geomEnclose(qnvc_d31 qnvc_pd3 (keep == 2))

Executing: qnvc_d33 = geomEnclose(qnvc_d32 qnvc_bd3 (keep == 2))

Executing: qnvc_df3 = geomAnd(geomInside(qnvc_df1 qnvc_d33) geomInside(qnvc_d33 qnvc_df1))

Executing: qnvc_ip6 = geomSize(qnvc_df3 0.5)

Executing: qnvc_ip7 = geomAnd(geomInside(qnvc_ip6 qnvc_ip5) geomInside(qnvc_ip5 qnvc_ip6))

Executing: qnvc_r1 = geomEnclose(dnwntie_h qnvc_ip7 (keep == 1))

Executing: qnvc_r2 = geomSize(qnvc_ip7 0.6)

Executing: qnvc_r3 = geomAnd(geomInside(qnvc_r1 qnvc_r2) geomInside(qnvc_r2 qnvc_r1))

Executing: qnvc_r4 = geomSize(qnvc_r3 0.9)

Executing: qnvc_r5 = geomWidth(geomAnd(qnvc_r4 dnwntie) (keep >= 0.9))

Executing: qnvc_r6 = geomHoles(qnvc_r5 innermost)

Executing: qnvc_r7 = geomEnclose(qnvc_r6 qnvc_r3 (keep == 1))

Executing: qnvc_r81 = geomInside(qnvc_ip7 qnvc_r7)

Executing: qnvc_r82 = geomEnclose(qnv_dnw1 qnvc_r81)

Executing: qnvc_r83 = geomAndNot(qnvc_r82 geomSize(qnvc_r82 -0.38))

Executing: qnvc_r8 = geomOutside(qnvc_r82 geomAnd(qnvc_r83 nwell))

Executing: qnvcx = geomInside(qnvc_r81 qnvc_r8)

Executing: qnvc = geomEnclose(qnvcx qnvc_nd3 (keep == 1))

Executing: qnvca = geomEnclose(qnvcx qnvcand3 (keep == 1))

Executing: qnvc_all = geomOr(qnvc qnvca)

Executing: qnv_all = geomOr(qnva_dpl qnvb_all qnvc_all qnvz_dpl)

Executing: qnvb_sb = geomAnd(qnvbx geomOr(qnvb_n31 qnvb_p31))

Executing: qnvc_sb = geomAnd(qnvcx geomOr(qnvc_n31 qnvc_p31))

Executing: qnv_sblk = geomOr(qnvb_sb qnvc_sb)

Executing: qpvhbhw0 = geomOutside(geomOutside(hnw poly) dio_mark)

Executing: qpvhbhp1 = geomInside(pbd qpvhbhw0)

Executing: qpvhbsh1 = geomEnclose(qpvhbhw0 qpvhbhp1 (keep <= 2))

Executing: qpvhbsn1 = geomAnd(qpvhbsh1 nbd)

Executing: qpvhbsp1 = geomAnd(qpvhbsh1 pbd)

Executing: qpvhbsc1 = geomEnclose(qpvhbsp1 ndiffa (keep == 1))

Executing: qpvhbscr_i1 = geomAnd(qpvhbsc1 qpvhbsh1)

Executing: ngate1 = geomOr(ngate_all ngate_mv_all nma)

Executing: pgate1 = geomOr(pgate_all pgate_mv_all hvpgate10 pma)

Executing: sab_ngate = geomAnd(ngate1 sab)

Executing: sab_ng1 = geomAndNot(geomAnd(geomSize(sab_ngate 0.22) poly) ngate1)

Executing: sab_polyngate = geomButtOnly(geomAnd(sab_ng1 sab) sab_ngate)

Executing: sab_ngate_s = geomSize(sab_ngate 0.005)

Executing: sab_pgate = geomAnd(pgate1 sab)

Executing: sab_pg1 = geomAndNot(geomAnd(geomSize(sab_pgate 0.22) poly) pgate1)

Executing: sab_polypgate = geomButtOnly(geomAnd(sab_pg1 sab) sab_pgate)

Executing: sab_pgate_s = geomSize(sab_pgate 0.005)

Executing: sab1 = geomAndNot(sab geomOr(sab_ngate_s sab_polyngate sab_pgate_s sab_polypg...

Executing: phodio = geomAnd(phodef dio_mark)

Executing: ndifres0 = geomAndNot(geomAnd(geomAndNot(nsdg n_psub) sab) phodio)

Executing: ndifres0_iso = geomAnd(geomAnd(nsdg isopw) geomAndNot(sab qnvc_sb))

Executing: ndifres1 = geomAnd(ndifres0 sab1)

Executing: ndifres_ng_1 = geomButtOnly(ndifres1 sab_ngate_s)

Executing: ndifres_ng_2 = geomButtOnly(geomAnd(ndifres0_iso sab1) sab_ngate_s)

Executing: ndifres_ng = geomOr(ndifres_ng_1 ndifres_ng_2)

Executing: ndifres = geomAndNot(ndifres1 ndifres_ng)

Executing: pdifres00 = geomAnd(geomAnd(psdg nwellrm) sab)

Executing: pdifres0 = geomAndNot(geomAndNot(pdifres00 geomOr(geomSize(qpvhscr1 1.68) qnv...

Executing: pdifres1 = geomAnd(pdifres0 sab1)

Executing: pdifres_pg = geomButtOnly(pdifres1 sab_pgate_s)

Executing: pdifres = geomAndNot(pdifres1 pdifres_pg)

Executing: rdp1_io = geomAnd(geomAnd(psdg sab) geomAndNot(dnwellg geomOr(nwell isopwell)))

Executing: rdp_io_g1 = geomSize(geomGetEdge(gate butting rdp1_io) 0.005)

Executing: rdp_io = geomOutside(rdp1_io rdp_io_g1)

Executing: rdp2_io = geomOutside(rdp1_io rdp_io)

Executing: rdp_io_g = geomAndNot(rdp2_io rdp_io_g1)

Executing: rdn1_esd = geomAndNot(geomAnd(geomAnd(nsdg sab) pbd) qpvhbscr_i1)

Executing: rdn_esd_g1 = geomSize(geomGetEdge(gate butting rdn1_esd) 0.005)

Executing: rdn_esd = geomOutside(rdn1_esd rdn_esd_g1)

Executing: rdn2_esd = geomOutside(rdn1_esd rdn_esd)

Executing: rdn_esd_g = geomAndNot(rdn2_esd rdn_esd_g1)

Executing: rdp1_esd = geomAnd(geomAnd(psdg sab) geomAnd(hnw nbd))

Executing: rdp_esd_g1 = geomSize(geomGetEdge(gate butting rdp1_esd) 0.005)

Executing: rdp_esd = geomOutside(rdp1_esd rdp_esd_g1)

Executing: rdp2_esd = geomOutside(rdp1_esd rdp_esd)

Executing: rdp_esd_g = geomAndNot(rdp2_esd rdp_esd_g1)

Executing: resnwell3 = geomButtOnly(resnwell_scr ndiffa (keep == 1))

Executing: resnwell4 = geomButtOnly(resnwell3 geomInside(pdiffa nwell) (keep == 1))

Executing: rnw_scr = geomAndNot(resnwell4 mv)

Executing: rdn_a = geomOr(ndifres ndifres_ng rdn_esd_g)

Executing: rdp_a = geomOr(pdifres pdifres_pg rdp_io_g rdp_esd_g)

Executing: nsd = geomAndNot(nsdg rdn_a) keepLayer(nsd)

Executing: psd = geomAndNot(geomAndNot(psdg rdp_a) geomSize(davl_c2 0.001)) keepLayer(psd)

Executing: sd = geomOr(nsd psd) keepLayer(sd)

Executing: ndifres_3 = geomInside(ndifres mv)

Executing: pdifres_3 = geomInside(pdifres mv)

Executing: ndifres_1 = geomAndNot(ndifres ndifres_3)

Executing: pdifres_1 = geomAndNot(pdifres pdifres_3)

Executing: rp_11 = geomAndNot(poly geomOr(diff hres mres))

Executing: dpol_1 = geomAndNot(geomAnd(rp_11 sab) implant)

Executing: dpol_2 = geomButtOnly(dpol_1 nimp (keep == 1))

Executing: dpol_3 = geomButtOnly(dpol_2 pimp (keep == 1))

Executing: dpol = geomInside(dpol_3 dio_mark)

Executing: rp_1 = geomOutside(rp_11 dpol)

Executing: rp_21 = geomAnd(rp_1 sab1)

Executing: rp_2 = geomAndNot(rp_21 geomAnd(geomSize(mres 0.22) geomAnd(sab pimp)))

Executing: polyres_n = geomAnd(rp_2 nimp)

Executing: polyres_p1 = geomAnd(rp_2 pimp)

Executing: polyres_p = geomOr(polyres_p1)

Executing: rnp1_3 = geomGetTexted(polyres_n polylabel "rnp1_3")

Executing: rpp1_3 = geomGetTexted(polyres_p polylabel "rpp1_3")

Executing: polyres_ps1 = geomAnd(geomAnd(geomAndNot(rp_1 sab1) pimp) respoly)

Executing: polyres_p_s = geomAnd(geomSize(polyres_p 0.22) poly)

Executing: polyres_ps = geomAndNot(polyres_ps1 polyres_p_s)

Executing: rpp1s_3 = geomGetTexted(polyres_ps polylabel "rpp1s_3")

Executing: pfuse0 = geomGetTexted(geomAnd(poly respoly) polylabel "PFUSE")

Executing: pfuse1 = geomGetRectangle(pfuse0 (length == 0.8) (width == 0.18))

Executing: pfuse2a = geomSize(geomGetLength(pfuse1 (keep == 0.18)) 0.54)

Executing: pfuse2 = geomOr(geomSize(geomGetEdge(pfuse2a outside pfuse1) 0.84 chainEdges)...

Executing: pfuse3 = geomOr(geomAndNot(pfuse2 geomSize(geomGetLength(pfuse1 (keep == 0.8)...

Executing: pfuse41 = geomEnclose(poly pfuse1 (keep == 1))

Executing: pfuse4 = geomAnd(geomInside(pfuse41 pfuse3) geomInside(pfuse3 pfuse41))

Executing: pfuse5 = geomSize(geomSize(geomInside(cont pfuse4) 0.13) -0.13)

Executing: pfuse10 = geomSize(geomGetEdge(pfuse1 inside poly) 0.06)

Executing: pfuse11 = geomAndNot(geomAnd(geomSize(pfuse10 0.62) pfuse4) pfuse1)

Executing: pfuse12 = geomSize(pfuse11 -0.1)

Executing: pfuse14 = geomOr(pfuse5 pfuse12)

Executing: pfuse16 = geomGetRectangle(pfuse14 (length == 1.66) (width == 1.18))

Executing: pfuse17 = geomEnclose(pfuse4 pfuse16 (keep == 2))

Executing: pfuse = geomInside(pfuse1 pfuse17)

Executing: pfuse_nw2 = geomSize(pfuse 1.7)

Executing: pfuse_nw = geomAnd(nwell geomSize(pfuse 1.7))

Executing: polyres_ho = geomAnd(geomAnd(poly sab1) hres)

Executing: rnp1h_3 = geomGetTexted(polyres_ho polylabel "rnp1h_3")

Executing: rpp1k1 = geomAnd(geomAnd(poly sab1) mres)

Executing: rpp1k1_3 = geomGetTexted(rpp1k1 polylabel "rpp1k1_3")

Executing: polytrm = geomAndNot(poly geomCat(polyres_n polyres_p polyres_ps polyres_ho r...

Executing: met1res = geomAnd(met1 resmet1)

Executing: met2res = geomAnd(met2 resmet2)

Executing: met1trm = geomAndNot(met1 met1res)

Executing: met2trm = geomAndNot(met2 met2res)

Executing: met3res = geomAnd(met3 resmet3)

Executing: met3trm = geomAndNot(met3 met3res)

Executing: met4res = geomAnd(met4 resmet4)

Executing: met4trm = geomAndNot(met4 met4res)

Executing: mtplres = geomAnd(mtpl resmtpl)

Executing: mtpltrm = geomAndNot(mtpl mtplres)

Executing: mtpres = geomAnd(mtp resmtp)

Executing: mtptrm = geomAndNot(mtp mtpres)

Executing: dnp20_0 = geomGetRectangle(ndf)

Executing: dnp20_1 = geomOutside(dnp20_0 pwblk)

Executing: dnp20_2 = geomInside(geomEnclose(dnp20_1 ndiffa) dio_mark)

Executing: dnp20_21 = geomWidth(dnp20_2 (keep >= 6.0))

Executing: dnp20_22 = geomWidth(dnp20_2 (keep > 6.0))

Executing: dnp22 = geomAndNot(dnp20_21 dnp20_22)

Executing: dnp23 = geomGetRectangle(dnp22 ((20.0 <= length) <= 100))

Executing: dnp24 = geomSize(dnp23 -0.45)

Executing: dnp24_1 = geomSize(geomGetEdge(dnp24 outside ndiffa) 0.001)

Executing: dnp24_2 = geomSize(geomGetEdge(dnp24 inside ndiffa) 0.001)

Executing: dnp25 = geomAndNot(dnp23 geomOverlap(dnp23 geomOr(dnp24_1 dnp24_2)))

Executing: dnp26 = geomEnclose(geomHoles(pdiffa innermost) diff (keep == 1))

Executing: dnp27_1 = geomOr(isopwell geomAndNot(nwellg geomAnd(ndf dnp25)))

Executing: dnp27_2 = geomEnclose(dnp26 dnp25)

Executing: dnp27a = geomAndNot(dnp27_2 geomStraddle(dnp27_2 dnp27_1))

Executing: dnp27 = geomOutside(geomGetVertex(dnp27a (keep == 4)) poly)

Executing: dnp28 = geomSize(dnp27 -3.63)

Executing: dnp28_1 = geomSize(geomGetEdge(dnp28 outside dnp25) 0.001)

Executing: dnp28_2 = geomSize(geomGetEdge(dnp28 inside dnp25) 0.001)

Executing: dnp29 = geomAndNot(dnp27 geomOverlap(dnp27 geomOr(dnp28_1 dnp28_2)))

Executing: dnp20 = geomInside(dnp25 dnp29)

Executing: dpp20_0 = geomGetRectangle(geomInside(pbddnw dnwelldg))

Executing: dpp20_1 = geomInside(geomGetTexted(dpp20_0 dio_label "dpp20") dio_mark)

Executing: dpp20_11 = geomWidth(dpp20_1 (keep >= 5.0))

Executing: dpp20_12 = geomWidth(dpp20_1 (keep > 5.0))

Executing: dpp22 = geomAndNot(dpp20_11 dpp20_12)

Executing: dpp23 = geomGetRectangle(dpp22 ((20.0 <= length) <= 100))

Executing: dpp24 = geomSize(dpp23 -0.43)

Executing: dpp24_1 = geomSize(geomGetEdge(dpp24 outside pdiffa) 0.001)

Executing: dpp24_2 = geomSize(geomGetEdge(dpp24 inside pdiffa) 0.001)

Executing: dpp25 = geomAndNot(dpp23 geomOverlap(dpp23 geomOr(dpp24_1 dpp24_2)))

Executing: dpp26 = geomEnclose(geomHoles(ndiffa innermost) diff (keep == 1))

Executing: dpp27a = geomEnclose(dpp26 dpp23)

Executing: dpp27 = geomOutside(geomGetVertex(dpp27a (keep == 4)) poly)

Executing: dpp28 = geomSize(dpp27 -3.0)

Executing: dpp28_1 = geomSize(geomGetEdge(dpp28 outside dpp25) 0.001)

Executing: dpp28_2 = geomSize(geomGetEdge(dpp28 inside dpp25) 0.001)

Executing: dpp29 = geomAndNot(dpp27 geomOverlap(dpp27 geomOr(dpp28_1 dpp28_2)))

Executing: dpp20 = geomInside(dpp25 dpp29)

Executing: uvwin_1 = geomAndNot(uvwin met2)

Executing: dphoc_1e = geomSize(geomGetBBox(dphoc_1) 4.82)

Executing: dphoc_2 = geomAnd(dphoc_1 met2)

Executing: dphoc0 = geomEnclose(dphoc_1e geomAnd(geomInside(dphoc_1 dphoc_2) geomInside(...

Executing: dphoc_31 = geomOutside(dphoc_1 dphoc0)

Executing: dphoc_3 = geomAnd(dphoc_31 uvwin_1)

Executing: dphoc_4 = geomAnd(dphoc_3 poly)

Executing: dphocfp = geomEnclose(dphoc_1e geomAnd(geomInside(dphoc_3 dphoc_4) geomInside...

Executing: dphoc = geomEnclose(dphoc_1e geomEnclose(dphoc_1 geomAndNot(geomAndNot(uvwin ...

Executing: dphoc_a = geomOr(dphoc dphoc0 dphocfp)

Executing: dphod_1e = geomSize(geomGetBBox(dphod_1) 5.0)

Executing: dphod_2 = geomAnd(dphod_1 met2)

Executing: dphod0 = geomEnclose(dphod_1e geomAnd(geomInside(dphod_1 dphod_2) geomInside(...

Executing: dphod_31 = geomOutside(dphod_1 dphod0)

Executing: dphod_3 = geomAnd(dphod_31 uvwin_1)

Executing: dphod_4 = geomAnd(dphod_3 poly)

Executing: dphodfp = geomEnclose(dphod_1e geomAnd(geomInside(dphod_3 dphod_4) geomInside...

Executing: dphod = geomEnclose(dphod_1e geomEnclose(dphod_1 geomAndNot(geomAndNot(uvwin ...

Executing: dphocd_1e = geomOr(dphoc_1e dphod_1e)

Executing: dphod_a = geomOr(dphod dphod0 dphodfp)

Executing: dpho_1 = geomOutside(geomInside(dnwellmv phodef) poly)

Executing: dpho_2 = geomSize(dpho_1 0.61)

Executing: dpho_21 = geomSize(dpho_1 0.615)

Executing: dpho_3 = geomInside(dpho_1 geomInside(geomEnclose(ptie_hole dpho_2) dpho_21))

Executing: dphoa10 = geomOutside(geomOutside(dpho_3 isopwell) pdiffa)

Executing: dphoa10s = geomSize(dphoa10 -0.79)

Executing: dphoa10s1 = geomSize(dphoa10 -1.704)

Executing: dphoa11 = geomAndNot(dphoa10s diff)

Executing: dphoa12 = geomAndNot(dphoa10s1 sab)

Executing: dphoa13 = geomAnd(dphoa10s1 implant)

Executing: dphoa = geomOutside(dphoa10 geomOr(dphoa11 dphoa12 dphoa13))

Executing: dphob10 = geomEnclose(dpho_3 geomOutside(geomAnd(phodef isopw) ndiffa))

Executing: dphob_s11 = geomSize(dphob10 -2.56)

Executing: dphob_s12 = geomSize(dphob10 -2.61)

Executing: dphob_s2 = geomSize(dphob10 -3.404)

Executing: dphob_s3 = geomSize(dphob10 -2.004)

Executing: dphob11 = geomAndNot(dphob_s12 diff)

Executing: dphob111 = geomAnd(geomAndNot(geomAnd(dphob10 isopw) dphob_s11) diff)

Executing: dphob12 = geomAndNot(dphob_s2 sab)

Executing: dphob13 = geomAnd(dphob_s2 implant)

Executing: dphob14 = geomAndNot(dphob_s3 isopw)

Executing: dphob = geomOutside(dphob10 geomOr(dphob11 dphob111 dphob12 dphob13 dphob14))

Executing: dphocd_a = geomOr(dphoc_a dphod_a)

Executing: dphoab = geomOr(dphoa dphob)

Executing: dphopin3 = geomOr(geomOr(dphocd_a dphoab) davl_all)

Executing: ped_ring1 = geomAnd(ped ped116)

Executing: ped2_ring1 = geomAnd(ped2 ped216)

Executing: ped_ring11 = geomAndNot(ped ped116)

Executing: ped2_ring11 = geomAndNot(ped2 ped216)

Executing: ped_ring12 = geomWidth(ped_ring11 (keep >= 0.005))

Executing: ped2_ring12 = geomWidth(ped2_ring11 (keep >= 0.005))

Executing: ped_ring13 = geomAndNot(ped_ring11 ped_ring12)

Executing: ped2_ring13 = geomAndNot(ped2_ring11 ped2_ring12)

Executing: ped_ring = geomOr(ped_ring1 ped_ring13)

Executing: ped2_ring = geomOr(ped2_ring1 ped2_ring13)

Executing: ped_h11 = geomSize(ped_ring 2.52)

Executing: ped_h12 = drc(ped_h11 (notch < 4.29) with_perp)

Executing: ped2_h1 = geomSize(geomSize(ped2_ring 3.3) -0.79)

Executing: ped_h1 = geomOr(ped_h11 ped_h12)

Executing: pbd_pdmos = geomInside(pbddnw geomOr(ped_h1 ped2_h1))

Executing: geomHoles(nedgate)

Executing: pbd_ndmos = geomInside(pbddnw geomOr(nedgate ned_gateh))

Executing: diodhpw = geomAndNot(pbddnw geomOr(pbd_pdmos pbd_ndmos pbd_pma dpp20 qpvascr0...

Executing: isopw1 = geomAndNot(geomOr(isopw sci dpldnw) pbd)

Executing: ipdnwmv = geomOutside(geomAnd(geomAndNot(isopw1 geomOr(qnv_all dphob pwi_b)) ...

Executing: dp_psd = geomAvoiding(psd geomOr(allpgate0 qnv_all qpva_63 dphocd_1e))

Executing: dn_nsd = geomAvoiding(nsd geomOr(geomAndNot(allngate0 ng_cpod) qnv_all qpvasc...

Executing: dp_psdnw = geomAnd(dp_psd nwgtrm)

Executing: dp_psddnw1 = geomAnd(dp_psd geomAndNot(nwellniso geomOr(nwell nbd hnw ndf)))

Executing: dp_psddnw = geomAndNot(dp_psddnw1 dnwmviph)

Executing: dn_nsdpbd1 = geomInside(geomAnd(dn_nsd pbd) dnwtrm2)

Executing: dio_pp = geomInside(dp_psdnw dio_mark)

Executing: dp1_psdnw = geomAndNot(dp_psdnw dio_pp)

Executing: dnw_mv1 = geomAndNot(dnwellmvdg dnwelldg)

Executing: dpdnw_3 = geomAndNot(dp_psddnw dnw_mv1)

Executing: dio_dpdnw = geomInside(dpdnw_3 dio_mark)

Executing: dio_dnhpw1 = geomInside(dn_nsdpbd1 dio_mark)

Executing: nwelltrm1 = geomAndNot(geomAndNot(nwgtrm geomOr(dnwellg hv_nw1)) pfuse_nw)

Executing: d11_ipdnwmv = geomAndNot(ipdnwmv ngi_6t)

Executing: d1_ipdnwmv = geomAndNot(d11_ipdnwmv depl)

Executing: dio_ipdnwmv = geomInside(d1_ipdnwmv dio_mark)

Executing: dio_dhpw = geomInside(diodhpw dio_mark)

Executing: dnwell_dmos = geomEnclose(dnwell geomOr(nedgate ped ped2))

Executing: diodnw = geomAndNot(geomAndNot(dnwell geomOr(dnwell_dmos qpva_55)) geomOr(ngi...

Executing: dio_ddnw = geomInside(diodnw dio_mark)

Executing: dndf_1 = geomOutside(ndftrm dnp20)

Executing: ntie_hole = geomHoles(ntie innermost)

Executing: pnp_base1 = geomGetVertex(ntie_hole (keep == 4))

Executing: pnp_base2 = geomSize(pnp_base1 -1.1)

Executing: pnp1 = geomAnd(ptie_h4 pnp_base1)

Executing: pnpemi1 = geomAnd(geomGetRectangle(dp1_psdnw) pnp1)

Executing: pnp_base2_n = geomAndNot(pnp_base2 pnpemi1)

Executing: pnp_base2_n1 = geomEnclose(pnp_base2 pnp_base2_n)

Executing: pnp_base = geomAndNot(pnp_base2 pnp_base2_n1)

Executing: pnpemi = geomInside(pnpemi1 pnp_base) keepLayer(pnpemi)

Executing: pnp_nw = geomEnclose(nwelltrm pnpemi (keep == 1))

Executing: pnp_all2 = geomEnclose(ptie_h4 pnp_nw (keep == 1))

Executing: pnp_nw1 = geomSize(pnp_nw 0.38)

Executing: pnp_nw2 = geomInside(pnp_nw1 pnp_all2)

Executing: pnp_all21 = geomAndNot(pnp_all2 pnp_nw2)

Executing: pnp_all22 = geomEnclose(pnp_all2 pnp_all21)

Executing: pnp_all = geomAndNot(pnp_all2 pnp_all22)

Executing: pnpcoll = geomButtOnly(ptie geomEnclose(pnp_all pnpemi))

Executing: coll_pnp = geomAndNot(pnpcoll gxa)

Executing: emitter_pnp = geomAndNot(pnpemi gxa)

Executing: geomHoles(coll_pnp)

Executing: coll_pnph = geomAnd(pnpcoll mv)

Executing: emitter_pnph = geomAnd(pnpemi mv)

Executing: geomHoles(coll_pnph)

Executing: pnp10_e = drc(emitter_pnp (area == 100))

Executing: pnp5_e = drc(emitter_pnp (area == 25))

Executing: pnp2_e = drc(emitter_pnp (area == 4))

Executing: pnp10 = geomInside(pnp10_e pnp)

Executing: pnp5 = geomInside(pnp5_e pnp)

Executing: pnp2 = geomInside(pnp2_e pnp)

Executing: pnph10_e = drc(emitter_pnph (area == 100))

Executing: pnph5_e = drc(emitter_pnph (area == 25))

Executing: pnph2_e = drc(emitter_pnph (area == 4))

Executing: pnph10 = geomInside(pnph10_e pnph)

Executing: pnph5 = geomInside(pnph5_e pnph)

Executing: pnph2 = geomInside(pnph2_e pnph)

Executing: dio_dpdd = geomInside(geomAnd(pdd dio_mark) diodnw)

Executing: scr_dpdd0 = geomGetTexted(dio_dpdd dio_label "hvscr")

Executing: scr_dpdd1 = geomInside(scr_dpdd0 ntie_hole)

Executing: scr_dpdd11 = geomWidth(scr_dpdd1 (keep >= 10.59))

Executing: scr_dpdd12 = geomWidth(scr_dpdd1 (keep > 10.59))

Executing: scr_dpdd2 = geomAndNot(scr_dpdd11 scr_dpdd12)

Executing: scr_psdnw0 = geomInside(psdnw diodnw)

Executing: scr_psdnw1 = drc(scr_psdnw0 geomGetHoled(sab) (ovlp == 0.78))

Executing: scr_psdnw = geomStraddle(scr_psdnw0 scr_psdnw1)

Executing: scr_dpdd3 = drc(scr_dpdd2 scr_psdnw (sep < 3))

Executing: scr_dpdd4 = geomSize(scr_dpdd2 4.89)

Executing: scr_dpdd40 = geomInside(scr_psdnw scr_dpdd4)

Executing: scr_dpdd41 = geomSize(scr_dpdd2 3.0)

Executing: scr_dpdd5 = geomSize(geomGetEdge(psdnw butting scr_dpdd41) 0.005)

Executing: scr_dpdd51 = geomSize(geomGetEdge(psdnw inside scr_dpdd4) 0.005)

Executing: scr_dpdd52 = geomAndNot(scr_dpdd51 scr_dpdd5)

Executing: scr_dpdd6 = geomSize(geomEnclose(geomSize(scr_dpdd40 0.005) scr_dpdd52 (keep ...

Executing: scr_dpdd7 = geomAndNot(scr_dpdd4 scr_dpdd3)

Executing: scr_dpdd8 = geomEnclose(scr_dpdd7 scr_dpdd6 (keep == 2))

Executing: dpdda_scr = geomInside(scr_dpdd2 scr_dpdd8)

Executing: dpddb_scr = geomGetEdge(geomSize(dpdda_scr -1.5) coincident psd)

Executing: dpddc_scr = drc(dpddb_scr geomOutside(diff pdd) ((6.39 < sep) < 10) shielded ...

Executing: dpdd1_scr = geomAndNot(dpdda_scr geomOverlap(dpdda_scr dpddc_scr))

Executing: scr_dnpdd0 = geomInside(nsd dpdd1_scr)

Executing: geomHoles(geomAnd(scr_dnpdd0 sab))

Executing: scr_dnpdd11 = geomWidth(scr_dnpdd1 (keep >= 1.13))

Executing: scr_dnpdd12 = geomWidth(scr_dnpdd1 (keep > 1.13))

Executing: scr_dnpdd2 = geomAndNot(scr_dnpdd11 scr_dnpdd12)

Executing: scr_dnpdd3 = geomEnclose(scr_dnpdd0 scr_dnpdd2 (keep == 1))

Executing: scr_dppdd = geomInside(psd dpdd1_scr)

Executing: scr_dppdda = drc(scr_dppdd geomGetHoled(geomAnd(sab dpdd1_scr)) (ovlp == 0.78))

Executing: scr_dppdd0 = geomStraddle(scr_dppdd scr_dppdda)

Executing: scr_dppdd1 = drc(dpdd1_scr scr_dppdd0 (enc < 1.5))

Executing: scr_dppdd2 = geomAndNot(scr_dppdd0 geomSize(dpdd1_scr -1.85))

Executing: scr_dppdd21 = geomWidth(scr_dppdd2 (keep > 0.35))

Executing: scr_dppdd31 = geomOr(geomButting(scr_dppdd0 scr_dppdd1) geomStraddle(scr_dppd...

Executing: dppdd_scr = geomAndNot(scr_dppdd0 scr_dppdd31)

Executing: dpdd_scr = geomEnclose(dpdd1_scr dppdd_scr (keep == 2))

Executing: dnpdd_scr = geomInside(scr_dnpdd3 geomSize(dppdd_scr 1.905))

Executing: cm_s = geomAndNot(geomSize(cm 2.5) cm)

Executing: cmh_s = geomAndNot(geomSize(cmh 2.5) cmh)

Executing: cm23f_s = geomAndNot(geomSize(cm23f 2.5) cm23f)

Executing: cmh23f_s = geomAndNot(geomSize(cmh23f 2.5) cmh23f)

Executing: cm34f_s = geomAndNot(geomSize(cm34f 2.5) cm34f)

Executing: cmh34f_s = geomAndNot(geomSize(cmh34f 2.5) cmh34f)

Executing: bm = geomEnclose(met4trm cm) keepLayer(bm)

Executing: bm1 = geomButtOrOver(geomAnd(cm_s bm) cm)

Executing: bmh = geomEnclose(met4trm cmh)

Executing: bmh1 = geomButtOrOver(geomAnd(cmh_s bmh) cmh)

Executing: vian = geomAnd(geomOr(bm1 bmh1) via3)

Executing: bm23f = geomEnclose(met2trm cm23f)

Executing: bm23f1 = geomButtOrOver(geomAnd(cm23f_s bm23f) cm23f)

Executing: bmh23f = geomEnclose(met2trm cmh23f)

Executing: bmh23f1 = geomButtOrOver(geomAnd(cmh23f_s bmh23f) cmh23f)

Executing: bm34f = geomEnclose(met3trm cm34f)

Executing: bm34f1 = geomButtOrOver(geomAnd(cm34f_s bm34f) cm34f)

Executing: bmh34f = geomEnclose(met3trm cmh34f)

Executing: bmh34f1 = geomButtOrOver(geomAnd(cmh34f_s bmh34f) cmh34f)

Executing: vtpcm = geomAnd(vtp cm)

Executing: vtpcmh = geomAnd(vtp cmh)

Executing: vtpCON1 = geomAndNot(vtp geomOr(vtpcm vtpcmh))

Executing: v2cm = geomAnd(via2 cm23f)

Executing: v2cmh = geomAnd(via2 cmh23f)

Executing: via2CON1 = geomAndNot(via2 geomOr(v2cm v2cmh))

Executing: v3cm = geomAnd(via3 cm34f)

Executing: v3cmh = geomAnd(via3 cmh34f)

Executing: via3CON1 = geomAndNot(via3 geomOr(v3cm v3cmh))

Executing: m2_dmm = geomAnd(met2trm cm2)

Executing: m3_dmm = geomAnd(met3trm cm2)

Executing: v2cm2 = geomAnd(via2 m3_dmm)

Executing: m2_dmmh = geomAnd(met2trm cmh2)

Executing: m3_dmmh = geomAnd(met3trm cmh2)

Executing: v2cmh2 = geomAnd(via2 m3_dmmh)

Executing: via2CON = geomAndNot(via2CON1 geomOr(v2cm2 v2cmh2))

Executing: m4_dmm = geomAnd(met4trm cm2)

Executing: v3cm2 = geomAnd(via3 m4_dmm)

Executing: m4_dmmh = geomAnd(met4trm cmh2)

Executing: v3cmh2 = geomAnd(via3 m4_dmmh)

Executing: via3CON = geomAndNot(via3CON1 geomOr(v3cm2 v3cmh2))

Executing: m2_tmm = geomAnd(met2trm cm3)

Executing: m3_tmm = geomAnd(met3trm cm3)

Executing: v2cm3 = geomAnd(via2 m2_tmm)

Executing: m2_tmmh = geomAnd(met2trm cmh3)

Executing: m3_tmmh = geomAnd(met3trm cmh3)

Executing: v2cmh3 = geomAnd(via2 m2_tmmh)

Executing: via2CON = geomAndNot(via2CON geomOr(v2cm3 v2cmh3))

Executing: m4_tmm = geomAnd(met4trm cm3)

Executing: v3cm3 = geomAnd(via3 m4_tmm)

Executing: m4_tmmh = geomAnd(met4trm cmh3)

Executing: v3cmh3 = geomAnd(via3 m4_tmmh)

Executing: via3CON = geomAndNot(via3CON geomOr(v3cm3 v3cmh3))

Executing: mt_tmm = geomAnd(mtptrm cm3)

Executing: vtpcm3 = geomAnd(vtp mt_tmm)

Executing: mt_tmmh = geomAnd(mtptrm cmh3)

Executing: vtpcmh3 = geomAnd(vtp mt_tmmh)

Executing: vtpCON = geomAndNot(vtpCON1 geomOr(vtpcm3 vtpcmh3))

Executing: G_subs = geomOr(bkgnd) keepLayer(G_subs)

Executing: cont_nma = geomAnd(cont geomAnd(nsd nbd_nma))

Executing: cont_pma = geomAnd(cont geomAnd(psd pbd_pma))

Executing: contSD = geomAnd(cont sd)

Executing: contP = geomAndNot(geomAndNot(geomOutside(cont sd) d_dsc) catm1ct)

Executing: bndct = geomAnd(bndiff nsd)

Executing: dnw_esd1 = geomGetTexted(geomAnd(dnwtrm dio_mark) dio_label "ESD_DIODE")

Executing: dnw_esd2 = geomEnclose(dnw_esd1 dio_ipdnwmv)

Executing: dnw_esd = geomAndNot(dnw_esd2 geomStraddle(dnw_esd2 gate))

Executing: dnwtrm1 = geomAndNot(dnwtrm dnw_esd)

Executing: ntiec = geomAndNot(ntie geomSize(geomGetEdge(geomAnd(ntie sab) butting psd) -...

Executing: ptiec = geomAndNot(ptie geomSize(geomGetEdge(geomAnd(ptie sab) butting nsd) -...

Executing: isoptiec = geomAndNot(isoptie geomSize(geomGetEdge(geomAnd(isoptie sab) butti...

Executing: geomConnect((via cont_nma met1trm nbd_nma) (via cont_pma met1trm pbd_pma) (vi...

Executing: geomStamp(bm met4trm)

Executing: geomStamp(dnwntie ntiec)

Executing: geomStamp(dnwtrm dnwntie)

Executing: geomStamp(dnwellmvtrm dnwntie)

Executing: geomStamp(nwelltrm1 ntiec floating "NWELL should be contacted" multStamp "NWELL soft connect" multConnect "minority NWELL connectors")

Executing: geomStamp(dnwtrm1 dnwntie floating "DNWELL should be contacted" multStamp "DNWELL soft connect" multConnect "minority DNWELL connectors")

Executing: geomStamp(G_subs ptiec floating "BULK should be contacted" multStamp "BULK soft connect" multConnect "minority BULK connectors")

Executing: geomStamp(pwitrm isoptiec floating "isolated pwells (Q1IW) should be contacted" multStamp "isolated pwells soft connect" multConnect "minority isolated pwells connectors")

Executing: geomStamp(nbdsub ntiec floating "HVNWELL should be contacted" multStamp "HVNWELL soft connect" multConnect "minority HVNWELL connectors")

Executing: geomStamp(pdf psd floating "PDF should be contacted" multStamp "PDF soft connect" multConnect "minority PDF connectors")

Executing: geomStamp(ndftrm nsd floating "NDF should be contacted" multStamp "NDF soft connect" multConnect "minority NDF connectors")

Executing: geomStamp(hnw ntiec floating "HNW should be contacted" multStamp "HNW soft connect" multConnect "minority HNW connectors")

Executing: p1_dpol = geomButting(geomAnd(polytrm sab) dpol)

Executing: dpol_n = geomAnd(p1_dpol nimp)

Executing: dpol_p = geomAnd(p1_dpol pimp)

Executing: qpvh_83a = geomAnd(psd qpvh_64)

Executing: geomStamp(qpvh_83a psd)

Executing: qpvh_83 = geomOverlap(qpvh_83a hnw diffNet)

Executing: qpvh_84a = geomAnd(nsd qpvh_33)

Executing: geomStamp(qpvh_84a nsd)

Executing: qpvh_84 = geomOverlap(qpvh_84a pdf diffNet)

Executing: qpvhscr = geomAnd(qpvhscr1 geomOutside(qpvh_82 geomOr(qpvh_83 qpvh_84)))

Executing: qpvhscr_isopw = geomInside(isopw geomSize(qpvhscr -1.37))

Executing: qpva_82 = geomAnd(geomInside(qpva_dnw qpva_46) geomInside(qpva_46 qpva_dnw))

Executing: qpvascr1 = geomAnd(qpvascr0 qpva_82)

Executing: qpva_83a = geomAnd(psd qpva_63)

Executing: geomStamp(qpva_83a psd)

Executing: qpva_83 = geomOverlap(qpva_83a dnwtrm diffNet)

Executing: qpva_84a = geomAnd(nsd qpva_33)

Executing: geomStamp(qpva_84a nsd)

Executing: qpva_84 = geomOverlap(qpva_84a pwitrm diffNet)

Executing: qpvascr = geomAnd(qpvascr1 geomOutside(qpva_82 geomOr(qpva_83 qpva_84)))

Executing: qpvhbs51a = geomAnd(psd qpvhbsn1)

Executing: geomStamp(qpvhbs51a psd)

Executing: qpvhbs51 = geomOverlap(qpvhbs51a hnw diffNet)

Executing: qpvhbs52a = geomAnd(nsd qpvhbsn1)

Executing: geomStamp(qpvhbs52a nsd)

Executing: qpvhbs52 = geomOverlap(qpvhbs52a pwitrm diffNet)

Executing: qpvhbscr = geomAnd(qpvhbsc1 geomOutside(qpvhbsh1 geomOr(qpvhbs51 qpvhbs52)))

Executing: geomStamp(pbddnw pwitrm)

Executing: ptieg = geomOr(ptie isoptie)

Executing: buttntie = geomButtOnly(ntie psdnw)

Executing: buttptie = geomButtOnly(ptieg nsdpw)

Executing: ndiffapw = geomAndNot(ndiffa anwellniso)

Executing: pdiffanw = geomAnd(pdiffa anwellniso)

Executing: ngate_all_edge = geomGetEdge(allngate inside ndiffa)

Executing: pgate_all_edge = geomGetEdge(allpgate inside pdiffa)

Executing: ngate_all_twedge = geomGetEdge(gate01 coincident ndiffa)

Executing: pgate_all_twedge = geomGetEdge(gate01 coincident pdiffa)

Executing: EXTpw = geomSize(geomOr(psub pwitrm) 0.43)

Executing: EXTnw = geomSize(nwellniso 0.43)

Executing: nwell43u = geomSize(nwellniso -0.43)

Executing: EXTntiepw = geomAnd(ntie EXTpw)

Executing: EXTptienw = geomAnd(ptieg EXTnw)

Executing: pbdptie = geomAnd(psdg pbd)

Executing: pbdptie_h = geomGetHoled(pbdptie)

Executing: ioh_ddnw0 = geomAndNot(dio_ddnw geomEnclose(dio_ddnw pdiffa))

Executing: ioh_ddnw1 = geomAndNot(ioh_ddnw0 geomEnclose(ioh_ddnw0 geomOr(dnwellmvin nwel...

Executing: ioh_ddnw2 = geomGetTexted(ioh_ddnw1 dio_label "ESD_DIODE")

Executing: ioh_ddnw = geomEnclose(ioh_ddnw2 nsd (keep == 1))

Executing: niscr_ddnw0 = geomGetTexted(dio_ddnw dio_label "niscr")

Executing: niscr_ddnw1 = geomEnclose(niscr_ddnw0 nsd (keep == 1))

Executing: niscr_ddnw2 = geomEnclose(niscr_ddnw1 dio_dpdnw (keep == 2))

Executing: niscr_ddnw3a = geomWidth(niscr_ddnw2 (keep >= 9.28))

Executing: niscr_ddnw3b = geomWidth(niscr_ddnw2 (keep > 9.28))

Executing: niscr_ddnw3 = geomAndNot(niscr_ddnw3a niscr_ddnw3b)

Executing: niscr_pbd = geomButtOnly(geomStraddle(pbd sab) geomSize(niscr_ddnw3 1.7))

Executing: niscr_ddnw4 = drc(niscr_ddnw3 niscr_pbd (sep < 1.7))

Executing: niscr_ddnw5 = geomAndNot(niscr_ddnw3 geomButting(niscr_ddnw3 niscr_ddnw4))

Executing: niscr_ddnw = geomOr(niscr_ddnw5)

Executing: scr_dhpw0 = geomGetTexted(dio_dhpw dio_label "hvscr")

Executing: scr_dhpw01 = geomGetTexted(dio_dhpw dio_label "hvscr1")

Executing: scr_hnw0 = geomGetHoled(nbddnw)

Executing: scr_hnw10 = geomEnclose(geomHoles(scr_hnw0) scr_dhpw0)

Executing: scr1_hnw10 = geomEnclose(geomHoles(scr_hnw0) scr_dhpw01)

Executing: scr_dhpw1 = geomInside(scr_dhpw0 scr_hnw10)

Executing: scr1_dhpw1 = geomInside(scr_dhpw01 scr1_hnw10)

Executing: scr_dhpw21v1 = geomWidth(scr_dhpw1 (keep >= 13.99))

Executing: scr_dhpw22v1 = geomWidth(scr_dhpw1 (keep > 13.99))

Executing: scr_dhpwv1 = geomAndNot(scr_dhpw21v1 scr_dhpw22v1)

Executing: scr_dhpw21v3 = geomWidth(scr_dhpw1 (keep >= 12.87))

Executing: scr_dhpw22v3 = geomWidth(scr_dhpw1 (keep > 12.87))

Executing: scr_dhpwv3 = geomAndNot(scr_dhpw21v3 scr_dhpw22v3)

Executing: scr_dhpw31 = geomWidth(scr_dhpw1 (keep >= 10.59))

Executing: scr_dhpw32 = geomWidth(scr_dhpw1 (keep > 10.59))

Executing: scr_dhpw3a = geomAndNot(scr_dhpw31 scr_dhpw32)

Executing: scr_dhpw3b = drc(scr_dhpw3a scr_hnw0 (sep < 1.0))

Executing: scr_dhpw3c = geomAndNot(scr_dhpw3a geomButting(scr_dhpw3a scr_dhpw3b))

Executing: scr_dhpwi3 = geomEnclose(scr_dhpw3c dio_dnhpw1 (keep == 2))

Executing: scr_dhpw = geomOr(scr_dhpwv1 scr_dhpwv3 scr_dhpwi3)

Executing: scr1_dhpw21 = geomWidth(scr1_dhpw1 (keep >= 12.39))

Executing: scr1_dhpw22 = geomWidth(scr1_dhpw1 (keep > 12.39))

Executing: scr1_dhpw = geomAndNot(scr1_dhpw21 scr1_dhpw22)

Executing: scr_isopwv1 = geomInside(geomButtOnly(isopw scr_hnw0) geomEnclose(scr_hnw10 s...

Executing: scr_isopwv3 = geomInside(geomButtOnly(isopw scr_hnw0) geomEnclose(scr_hnw10 s...

Executing: scr_isopw = geomOr(scr_isopwv1 scr_isopwv3)

Executing: scr_dhpw3 = drc(scr_isopw scr_dhpw (sep < 2.0))

Executing: scr_dhpw4v1 = geomSize(geomGetEdge(scr_isopwv1 outside geomSize(scr_dhpwv1 5....

Executing: scr_dhpw4v3 = geomSize(geomGetEdge(scr_isopwv3 outside geomSize(scr_dhpwv3 4....

Executing: scr_dhpw4 = geomOr(scr_dhpw4v1 scr_dhpw4v3)

Executing: scr_hnw_a = geomEnclose(scr_hnw10 geomOr(scr_dhpw3 scr_dhpw4))

Executing: scr_isopw1 = geomInside(scr_isopw scr_hnw_a)

Executing: scr_dipdnw = geomAndNot(scr_isopw scr_isopw1)

Executing: scr1_hpw = geomInside(geomButtOnly(dio_dhpw scr_hnw0) scr1_hnw10)

Executing: scr1_dhpw3 = drc(scr1_hpw scr1_dhpw (sep < 3.0))

Executing: scr1_dhpw41 = geomSize(scr1_dhpw 5.37)

Executing: scr1_dhpw42 = geomSize(scr1_dhpw 2.5)

Executing: scr1_hnw41 = geomInside(nbddnw scr1_dhpw42)

Executing: scr1_dhpw4 = geomSize(geomGetEdge(scr1_hpw outside scr1_dhpw41) 0.001)

Executing: scr1_hnw_a = geomEnclose(scr1_hnw10 geomOr(scr1_dhpw3 scr1_dhpw4))

Executing: scr1_hpw1 = geomInside(scr1_hpw scr1_hnw_a)

Executing: scr1_dhpw_2 = geomAndNot(scr1_hpw scr1_hpw1)

Executing: scr1_hnw42 = geomButtOnly(geomSize(scr1_hnw41 0.5) scr1_dhpw_2)

Executing: scr1_hnw4 = geomAnd(scr1_hnw41 scr1_hnw42)

Executing: qnvaz_dpl = geomOr(qnva_dpl qnvz_dpl)

Executing: pmc_a = geomOr(pmmc pmc)

Executing: phv_a = geomOr(phhv phv)

Executing: nmc_a = geomOr(nmmc nmc)

Executing: nhv_a = geomOr(nhhv1 nhv1)

Executing: dphoc_s10 = geomAnd(catdop dphoc_a)

Executing: dphoc_s11 = geomSize(dphoc_s10 -0.281)

Executing: dphoc_s12 = geomSize(dphoc_s10 -0.509)

Executing: dphoc_s = geomAndNot(dphoc_s11 dphoc_s12)

Executing: dphod_s10 = geomAnd(anodop dphod_a)

Executing: dphod_s11 = geomSize(dphod_s10 -0.291)

Executing: dphod_s12 = geomSize(dphod_s10 -0.519)

Executing: dphod_s1 = geomAndNot(dphod_s11 dphod_s12)

Executing: dphod_s21 = geomSize(dphod_s10 0.939)

Executing: dphod_s22 = geomSize(dphod_s10 0.711)

Executing: dphod_s2 = geomAndNot(dphod_s21 dphod_s22)

Executing: dphod_s = geomOr(dphod_s1 dphod_s2)

Executing: dpho_uv31 = geomSize(dphocd_a -0.35)

Executing: dpho_uv32 = geomSize(dphocd_a -0.57)

Executing: dpho_uv33 = drc(dpho_uv31 (width < 0.28) only_perp)

Executing: dpho_uv34 = drc(dpho_uv32 (width < 0.155) only_perp)

Executing: dpho_uv3 = geomAndNot(geomAndNot(dpho_uv31 dpho_uv33) geomAndNot(dpho_uv32 dp...

Executing: dpho_uv41 = geomSize(dphocd_a 0.32)

Executing: dpho_uv42 = geomSize(dphocd_a 0.54)

Executing: dpho_uv43 = geomSize(dpho_uv41 0.41 edges)

Executing: dpho_uv44 = geomOr(dpho_uv41 dpho_uv43)

Executing: dpho_uv45 = geomSize(dpho_uv44 -0.19)

Executing: dpho_uv4 = geomAndNot(geomAndNot(dpho_uv42 dpho_uv41) geomAndNot(dpho_uv42 dp...

Executing: dpho_uv51 = geomSize(dphocd_a -0.11)

Executing: dpho_uv52 = geomSize(dphocd_a -0.37)

Executing: dpho_uv53 = drc(dpho_uv51 (width < 0.33) only_perp)

Executing: dpho_uv54 = drc(dpho_uv52 (width < 0.185) only_perp)

Executing: dpho_uv5 = geomAndNot(geomAndNot(dpho_uv51 dpho_uv53) geomAndNot(dpho_uv52 dp...

Executing: dpho_uvc1 = geomOr(geomOr(dphoc_s dphod_s) geomOr(dpho_uv3 dpho_uv4))

Executing: dpho_ext1 = geomOr(dphocd_a geomSize(dphoab 1.8))

Executing: dpho_ext = geomAndNot(phodio dpho_ext1)

Executing: dpho_cnt = geomOr(dpho_uvc1 geomAnd(dpho_ext diff))

Executing: dpho_via = geomOr(dpho_uv5 dpho_ext)

Executing: dpho_uvnw = geomSize(dphocd_a 0.86)

Executing: dpho_nw1 = drc(dphocd_a (width < 0.19) only_perp)

Executing: dpho_nw2 = geomAndNot(dphocd_a dpho_nw1)

Executing: dpho_nw = geomAndNot(dpho_uvnw dpho_nw2)

Executing: dpho_nw_1 = geomSize(anodop_33 1.255)

Executing: dpho_nw_3 = geomSize(dpho_nw_1 0.004)

Executing: dpho_nw_2 = geomSize(dpho_nw_1 -0.004)

Executing: dpho_mv_1 = geomSize(catdop_32 0.8)

Executing: dpho_mv = geomOr(dpho_mv_1 dpho_nw_1)

Executing: dpho_pb_1 = geomSize(anodop_33 3.255)

Executing: dpho_pb_2 = geomSize(catdop_32 1.82)

Executing: dpho_pb = geomOr(dpho_pb_1 dpho_pb_2)

Executing: dpho_uv_1 = geomSize(anodop_33 -0.895)

Executing: dpho_uv_2 = geomSize(catdop_32 -0.885)

Executing: dpho_uv_3 = geomOr(dpho_uv_1 dpho_uv_2)

Executing: dpho_uv_4 = geomSize(dpho_uv_3 -0.004)

Executing: dpho_uv_5 = geomSize(dpho_uv_3 0.004)

Executing: dpho_dn_1 = geomSize(anodop_33 1.045)

Executing: dpho_dn_2 = geomSize(anodop_33 0.605)

Executing: dpho_dn_3 = geomSize(geomAndNot(dpho_dn_1 dpho_dn_2) -0.004)

Executing: dpho_dn_4 = geomSize(catdop_32 -0.18)

Executing: dpho_dn_5 = geomSize(geomAndNot(dpho_dn_4 dpho_uv_2) -0.004)

Executing: dpho_dn = geomOr(dpho_dn_3 dpho_dn_5)

Executing: dpho_dp_1 = geomSize(anodop_33 -0.18)

Executing: dpho_dp_2 = geomSize(geomAndNot(dpho_dp_1 dpho_uv_1) -0.004)

Executing: dpho_dp_3 = geomSize(anodop_33 6.01)

Executing: dpho_dp_4 = geomSize(anodop_33 5.575)

Executing: dpho_dp_5 = geomSize(geomAndNot(dpho_dp_3 dpho_dp_4) -0.004)

Executing: dpho_dp_6 = geomSize(catdop_32 4.58)

Executing: dpho_dp_7 = geomSize(catdop_32 4.14)

Executing: dpho_dp_8 = geomSize(geomAndNot(dpho_dp_6 dpho_dp_7) -0.004)

Executing: dpho_dp_n = geomOr(dpho_dp_3 dpho_dp_6)

Executing: dpho_dp = geomOr(dpho_dp_2 dpho_dp_5 dpho_dp_8)

Executing: dpho_p1_1 = geomSize(anodop_33 -0.68)

Executing: dpho_p1_2 = geomSize(catdop_32 -0.67)

Executing: dpho_p1_3 = geomSize(anodop_33 0.415)

Executing: dpho_p1_4 = geomSize(catdop_32 0.43)

Executing: dpho_sb_1 = geomSize(anodop_33 -0.835)

Executing: dpho_sb_2 = geomSize(catdop_32 -0.825)

Executing: dpho_sb_3 = geomOr(dpho_sb_1 dpho_sb_2)

Executing: cnn_otpa = geomEmpty()

Executing: cnn_ex2 = geomEmpty()

Executing: cnn_ex3 = geomEmpty()

Executing: err_B1SU = geomStraddle(geomOr(n_psub diff_dg) subcut)
	   errorLayer(err_B1SU "B1SU : DIFF or *WELL crossing SUBCUT edge is not allowed")

Executing: err_W1NW = drc(geomAndNot(nwell ned_nw) (width < 0.86))
	   errorLayer(err_W1NW "W1NW : Minimum NWELL width = 0.86")

Executing: drc(nwell (sepNotch < 0.6) "S1NW : Minimum NWELL spacing/notch = 0.6")

Executing: err_S2NWa = drc(nwelltrm1 (sep < 1.4) diffNet)

Executing: err_S2NWaa = drc(pfuse_nw geomAndNot(nwell pfuse_nw) (sep < 1.4))

Executing: err_S2NW = geomOr(err_S2NWaa geomAndNot(err_S2NWa resnwell1))
	   errorLayer(err_S2NW "S2NW : Minimum NWELL spacing (different net) = 1.4")

Executing: err_S2NWres = drc(resnwell1 nwell ((0.0 < sep) < 1.4))
	   errorLayer(err_S2NWres "S2NW : Minimum NWELL spacing (different net) = 1.4")

Executing: err_A1NW = drc(nwell (area < 2.25))
	   errorLayer(err_A1NW "A1NW : Minimum NWELL area = 2.25")

Executing: pbdsub = geomAndNot(pbd pbddnw)

Executing: nwell13 = geomAndNot(nwell mv)

Executing: nwell24 = geomAnd(nwell mv)

Executing: nwell1 = geomOr(geomAndNot(geomAndNot(nwell13 lvt) svt) dnc)

Executing: nwell2 = geomAndNot(geomOr(nwell24 dnc) lndev)

Executing: nwell3 = geomAnd(geomOr(nwell13 dnc) lvt)

Executing: nwell4 = geomAnd(nwell24 lndev)

Executing: nwell5 = geomAnd(nwell13 svt)

Executing: pw_sub = geomOr(depl pbdsub pdd)

Executing: pwell13 = geomOr(geomAndNot(psub geomOr(mv pw_sub)) geomAndNot(isopw mv))

Executing: pwell1 = geomOr(geomAndNot(geomAndNot(pwell13 lvt) svt) dpc)

Executing: pwell2 = geomOr(geomAnd(geomAndNot(psub pw_sub) mv) geomAnd(isopw mv))

Executing: pwell3 = geomAnd(geomOr(pwell13 dpc) lvt)

Executing: pwell5 = geomAnd(pwell13 svt)

Executing: err_W1W1 = geomAndNot(drc(nwell1 (width < 0.86) opposite) ned_nw)
	   errorLayer(err_W1W1 "W1W1 : Minimum NWELL1 width = 0.86")

Executing: err_W1W1a = drc(nwell1 (width < 0.56) corner)
	   errorLayer(err_W1W1a "W1W1 : Minimum NWELL1 width = 0.86")

Executing: err_W1W2 = drc(pwell1 (width < 0.6) opposite)
	   errorLayer(err_W1W2 "W1W2 : Minimum PWELL1 width = 0.6")

Executing: err_W1W2a = drc(pwell1 (width < 0.56) corner)
	   errorLayer(err_W1W2a "W1W2 : Minimum PWELL1 width = 0.6")

Executing: err_W1W3 = drc(nwell2 (width < 0.86) withCornerTouch)
	   errorLayer(err_W1W3 "W1W3 : Minimum NWELL2 width = 0.86")

Executing: err_W1W4 = drc(pwell2 (width < 0.6) withCornerTouch)
	   errorLayer(err_W1W4 "W1W4 : Minimum PWELL2 width = 0.6")

Executing: err_W1W5 = drc(nwell3 (width < 0.86) withCornerTouch)
	   errorLayer(err_W1W5 "W1W5 : Minimum NWELL3 width = 0.86")

Executing: err_W1W6 = drc(pwell3 (width < 0.6) withCornerTouch)
	   errorLayer(err_W1W6 "W1W6 : Minimum PWELL3 width = 0.6")

Executing: err_W1W7 = drc(nwell4 (width < 0.86) withCornerTouch)
	   errorLayer(err_W1W7 "W1W7 : Minimum NWELL4 width = 0.86")

Executing: err_W1W9 = drc(nwell5 (width < 0.86) opposite)
	   errorLayer(err_W1W9 "W1W9 : Minimum NWELL5 width = 0.86")

Executing: err_W1W9a = drc(nwell5 (width < 0.56) corner)
	   errorLayer(err_W1W9a "W1W9 : Minimum NWELL5 width = 0.86")

Executing: err_W1W10 = drc(pwell5 (width < 0.6) opposite)
	   errorLayer(err_W1W10 "W1W10 : Minimum PWELL5 width = 0.6")

Executing: err_W1W10a = drc(pwell5 (width < 0.56) corner)
	   errorLayer(err_W1W10a "W1W10 : Minimum PWELL5 width = 0.6")

Executing: err_A1W1 = drc(nwell1 (area < 2.25))
	   errorLayer(err_A1W1 "A1W1 : Minimum NWELL1 area = 2.25")

Executing: err_A1W2 = drc(pwell1 (area < 2.25))
	   errorLayer(err_A1W2 "A1W2 : Minimum PWELL1 area = 2.25")

Executing: err_A1W3 = drc(nwell2 (area < 2.25))
	   errorLayer(err_A1W3 "A1W3 : Minimum NWELL2 area = 2.25")

Executing: err_A1W4 = drc(pwell2 (area < 2.25))
	   errorLayer(err_A1W4 "A1W4 : Minimum PWELL2 area = 2.25")

Executing: err_A1W5 = drc(nwell3 (area < 2.25))
	   errorLayer(err_A1W5 "A1W5 : Minimum NWELL3 area = 2.25")

Executing: err_A1W6 = drc(pwell3 (area < 2.25))
	   errorLayer(err_A1W6 "A1W6 : Minimum PWELL3 area = 2.25")

Executing: err_A1W7 = drc(nwell4 (area < 2.25))
	   errorLayer(err_A1W7 "A1W7 : Minimum NWELL4 area = 2.25")

Executing: err_A1W9 = drc(nwell5 (area < 2.25))
	   errorLayer(err_A1W9 "A1W9 : Minimum NWELL5 area = 2.25")

Executing: err_A1W10 = drc(pwell5 (area < 2.25))
	   errorLayer(err_A1W10 "A1W10 : Minimum PWELL5 area = 2.25")

Executing: err_W1PB = drc(pwblk (width < 0.6))
	   errorLayer(err_W1PB "W1PB : Minimum PWBLK width = 0.6")

Executing: err_S1PBa = drc(pwblk (sepNotch < 0.86))

Executing: err_S1PB = geomAndNot(err_S1PBa geomInside(err_S1PBa pbd))
	   errorLayer(err_S1PB "S1PB : Minimum PWBLK spacing/notch = 0.86")

Executing: drc(pwblk_pur ndiffa (sep < 0.12) "S1PBDN : Minimum PWBLK spacing to NDIFF = ...

Executing: drc(pwblk_pur geomAndNot(geomOutside(nwell ndf) dphod_1) (sep < 0.86) "S1PBNW...

Executing: drc(pwblk_pur dnwellmv (sep < 0.86) "S1PBWM : Minimum PWBLK spacing to DNWELL...

Executing: bxpb_ex = geomOr(geomOr(nmmagate nmmd nhv_a) cnn_ex2)

Executing: err_B4PB = geomStraddle(geomAndNot(diff bxpb_ex) pwblk_pur)
	   errorLayer(err_B4PB "B4PB : DIFF crossing PWBLK edge is not allowed")

Executing: err_B3PB = geomAnd(pdiffa pwblk_pur)
	   errorLayer(err_B3PB "B3PB : PWBLK overlap of PDIFF is not allowed")

Executing: pwblk_nd = geomStraddle(pwblk_pur ndiffa)

Executing: pwblk_nd1 = geomAnd(pwblk_pur nsdg)

Executing: nd_pwblk = geomAndNot(geomAnd(pwblk_nd ndiffa) dphoc_11)

Executing: nd_pwbl1 = geomAndNot(nd_pwblk bxpb_ex)

Executing: nd_pwbl3 = geomOutside(nd_pwbl1 cpod_all)

Executing: err_B5PB = geomAndNot(pwblk_nd1 geomOr(mv bnimp cnn_ex3))
	   errorLayer(err_B5PB "B5PB : PWBLK overlap of NDIFF without MV or BNIMP is not allowed")

Executing: err_B6PBa = geomGetNonRectangle(geomInside(nd_pwbl1 pwblk_pur))
	   errorLayer(err_B6PBa "B6PB : Only a single rectangular NDIFF inside PWBLK is allowed")

Executing: err_B6PBb = geomStraddle(geomStraddle(pwblk_nd nd_pwbl1) ndiffa (keep > 1))
	   errorLayer(err_B6PBb "B6PB : Only a single rectangular NDIFF inside PWBLK is allowed")

Executing: drc(pwblk_pur ndiffa (enc < 0.12) "E1PBDN : Fixed PWBLK enclosure of NDIFF = ...

Executing: nd_pwbl2 = geomSize(nd_pwbl3 0.12)

Executing: err_E1PBDNa = geomGetEdge(nd_pwbl2 inside pwblk_pur)
	   errorLayer(err_E1PBDNa "E1PBDN : Fixed PWBLK enclosure of NDIFF = 0.12")

Executing: dnw_nesd = geomAndNot(dnwell geomOr(ioh_ddnw niscr_ddnw))

Executing: dnw_s = geomSize(dnw_nesd 4.0)

Executing: dnw_s1 = geomSize(dnw_nesd 4.003)

Executing: dnw_nesd1 = geomAndNot(dnwell niscr_ddnw)

Executing: dnwell45 = geomSize(dnw_nesd1 4.005)

Executing: err_B1WD = geomGetEdge(dnwell45 outside pbdptie)
	   errorLayer(err_B1WD "B1WD : DNWELL must be surrounded by a GUARD RING consisting of PDIFF and HVPWELL")

Executing: dnw_nesd10 = geomAnd(dnwell niscr_ddnw)

Executing: dnw_nesd11 = geomEnclose(geomHoles(pbdptie_h) dnw_nesd10)

Executing: err_B1WDa = geomAndNot(dnw_nesd10 dnw_nesd11)
	   errorLayer(err_B1WDa "B1WD : DNWELL must be surrounded by a GUARD RING consisting of PDIFF and HVPWELL")

Executing: err_B3WD = geomStraddle(nwell dnwelldg)
	   errorLayer(err_B3WD "B3WD : NWELL crossing DNWELL edge is not allowed")

Executing: drc(dnw_nesd (width < 6.44) "W1WD : Minimum DNWELL width = 6.44")

Executing: drc(dnwell (sepNotch < 10.0) "S1WD : Minimum DNWELL spacing/notch = 10.0")

Executing: drc(dnwelldg dnwellmvdg (enc < 3.0) "E1WDWM : Minimum DNWELL enclosure of DNW...

Executing: drc(dnwell nwell (sep < 10.0) "S1WDNW : Minimum DNWELL spacing to NWELL = 10.0")

Executing: drc(dnwell nbd (sep < 10.0) "S1WDHN : Minimum DNWELL spacing to HVNWELL = 10.0")

Executing: drc(dnwell nwell (enc < 3.65) "E1WDNW : Minimum DNWELL enclosure of NWELL = 3...

Executing: dnwell_pma = geomEnclose(dnwell pmmagate)

Executing: nbd_rdp_io = geomEnclose(nbd rdp_io_g)

Executing: nbd_scr0 = geomButting(scr_hnw0 geomEnclose(scr_hnw10 scr_dhpw))

Executing: nbd_scr1 = geomButting(scr_hnw0 geomEnclose(scr1_hnw10 scr1_dhpw))

Executing: nbd_scr = geomCoinOnly(nbd geomOr(nbd_scr0 nbd_scr1))

Executing: drc(geomAndNot(dnwell dnwell_pma) geomAndNot(nbd geomOr(nbd_rdp_io nbd_scr qp...

Executing: drc(dnwell nbd (enc < 2.76) "E2WDHN : Minimum DNWELL enclosure of HVNWELL = 2...

Executing: dnw_nesd45 = geomSize(dnw_nesd 4.005)

Executing: err_E1PBWD = geomWidth(geomOr(geomAndNot(geomAndNot(dnw_s dnwell) pwblk) geom...
	   errorLayer(err_E1PBWD "E1PBWD : Fixed PWBLK enclosure of DNWELL = 4.0")

Executing: err_E1PBWDa = geomWidth(geomAndNot(geomAndNot(geomSize(ioh_ddnw 2.0) dnwell) ...
	   errorLayer(err_E1PBWDa "E1PBWD : Minimum PWBLK enclosure of DNWELL = 2.0 (applicable for DNWELL in ESD case)")

Executing: drc(dnw_nesd pbdsub (sep < 3.75) "S1WDHP : Minimum DNWELL spacing to HVPWELL ...

Executing: drc(ioh_ddnw pbdsub (sep < 2.0) "S1WDHP : Minimum DNWELL spacing to HVPWELL =...

Executing: drc(geomAndNot(dnwell niscr_ddnw) ndiffa (sep < 4.23) "S1WDDN : Minimum DNWEL...

Executing: drc(niscr_ddnw ndiffa (sep < 2.13) "S1WDDN : Minimum DNWELL spacing to NDIFF ...

Executing: drc(dnw_nesd pdiffa (sep < 4.0) "S1WDDP : Fixed DNWELL spacing to PDIFF = 4.0")

Executing: drc(ioh_ddnw pdiffa (sep < 3.0) "S1WDDP : Minimum DNWELL spacing to PDIFF = 3...

Executing: err_S1WDDP = geomGetEdge(geomOr(dnw_s dnw_s1) outside pdiffa)
	   errorLayer(err_S1WDDP "S1WDDP : Fixed DNWELL spacing to PDIFF = 4.0")

Executing: drc(geomAndNot(dnwell niscr_ddnw) pdiffa (enc < 3.5) "E1WDDP : Minimum DNWELL...

Executing: drc(niscr_ddnw pdiffa (enc < 1.5) "E1WDDP : Minimum DNWELL enclosure of PDIFF...

Executing: drc(dnw_nesd dnwntie (enc < 3.0) "E1WDDN : Fixed DNWELL enclosure of NDIFF = ...

Executing: drc(ioh_ddnw dnwntie (enc < 1.0) "E1WDDN : Minimum DNWELL enclosure of NDIFF ...

Executing: dnw_nedi_s = geomSize(nedi148 0.11)

Executing: dnw_nedi = geomAnd(geomEnclose(dnw_nedi_s nedi) dnwell)

Executing: dnw_nedia_s = geomSize(nedia48 0.1)

Executing: dnw_nedia = geomAnd(geomEnclose(dnw_nedia_s nedia) dnwell)

Executing: dnw_ped2 = geomSize(ped2_h1 4.735)

Executing: dnw_ped = geomSize(ped_h1 4.735)

Executing: dnwell_check = geomAndNot(dnwell geomOr(dnw_nedi dnw_nedia dnw_ped2 dnw_ped n...

Executing: dnw10_s = geomSize(dnwell_check -3.003)

Executing: err_E1WDDN_a = geomGetEdge(dnw10_s outside dnwntie)
	   errorLayer(err_E1WDDN_a "E1WDDN : Fixed DNWELL enclosure of NDIFF = 3.0")

Executing: err_E1WDDN_b1 = drc(geomOr(dnw_nedi dnw_nedia) diff (enc < 4.15))

Executing: err_E1WDDN_b2 = drc(geomOr(dnw_ped2 dnw_ped) diff (enc < 5.0))

Executing: err_E1WDDN_b = geomOr(err_E1WDDN_b1 err_E1WDDN_b2)
	   errorLayer(err_E1WDDN_b "E1WDDN : Fixed DNWELL enclosure of NDIFF = 3.0")

Executing: drc(poly dnwell (sep < 5.35) "S1P1WD : Minimum POLY1 spacing to DNWELL = 5.35")

Executing: err_S1P1WD = geomStraddle(poly dnwell)
	   errorLayer(err_S1P1WD "S1P1WD : Minimum POLY1 spacing to DNWELL = 5.35")

Executing: drc(dnwell poly (enc < 3.95) "E1WDP1 : Minimum DNWELL enclosure of POLY1 = 3....

Executing: err_B1WM = geomStraddle(dnwellmvdg dnwelldg)
	   errorLayer(err_B1WM "B1WM : DNWELLMV crossing DNWELL edge is not allowed")

Executing: drc(dnwellmvdg (width < 1.6) "W1WM : Minimum DNWELLMV width = 1.6")

Executing: drc(dnwellmvdg pbd (sep < 3.0) "S1WMHP : Minimum DNWELLMV spacing to HVPWELL ...

Executing: err_B6WM = geomStraddle(pbd dnwellmvdg)
	   errorLayer(err_B6WM "B6WM : HVPWELL crossing DNWELLMV edge is not allowed")

Executing: err_B7WM = geomStraddle(nbd dnwellmvdg)
	   errorLayer(err_B7WM "B7WM : HVNWELL crossing DNWELLMV edge is not allowed")

Executing: drc(dnwellmvdg pbd (enc < 2.0) "E1WMHP : Minimum DNWELLMV enclosure of HVPWEL...

Executing: err_B2WM = geomStraddle(nwell dnwellmv)
	   errorLayer(err_B2WM "B2WM : NWELL crossing DNWELLMV edge is not allowed")

Executing: err_B8WM = geomStraddle(poly dnwellmv)
	   errorLayer(err_B8WM "B8WM : POLY1 crossing DNWELLMV edge is not allowed")

Executing: drc(dnwellmv dnwelldg (sep < 10.0) "S1WMWD : Minimum DNWELLMV spacing to DNWE...

Executing: drc(dnwellmv poly (sep < 2.0) "S1WMP1 : Minimum DNWELLMV spacing to POLY1 = 2...

Executing: drc(dnwellmv (sepNotch < 1.6) "S1WM : Minimum DNWELLMV spacing/notch = 1.6")

Executing: err_S2WM_0 = drc(dnwellmvtrm (sep < 5.0) diffNet)

Executing: err_S2WM = geomAndNot(err_S2WM_0 resdnwellmv)
	   errorLayer(err_S2WM "S2WM : Minimum DNWELLMV spacing (different net) = 5.0")

Executing: err_S2WM_a1 = drc(resdnwellmv (notch < 5.0))

Executing: err_S2WM_a2 = drc(geomEnclose(dnwellmv resdnwellmv) (sep < 5.0))

Executing: err_S2WM_a = geomOr(err_S2WM_a1 err_S2WM_a2)
	   errorLayer(err_S2WM_a "S2WM : Minimum DNWELLMV spacing (different net) = 5.0")

Executing: err_S2WM_b = drc(dnwellmvtrm resdnwellmv ((0.0 < sep) < 5.0))
	   errorLayer(err_S2WM_b "S2WM : Minimum DNWELLMV spacing (different net) = 5.0")

Executing: drc(dnwellmv geomOutside(nwell dnwellmv) (sep < 3.5) "S1WMNW : Minimum DNWELL...

Executing: drc(dnwellmv poly (enc < 2.0) "E1WMP1 : Minimum DNWELLMV enclosure of POLY1 =...

Executing: drc(dnwellmv nbd (sep < 8.0) shielded "S1WMHN : Minimum DNWELLMV spacing to H...

Executing: drc(dnwellmv nbd (enc < 1.0) "E1WMHN : Minimum DNWELLMV enclosure of HVNWELL ...

Executing: dnw_nwn = geomAndNot(dnwellmv nwell)

Executing: pdiffadnwmv = geomAnd(pdiffanw dnw_nwn)

Executing: drc(geomAndNot(dnw_nwn dnwmviph) ptieg (sep < 0.43) "S1WMDP : Minimum DNWELLM...

Executing: drc(geomAndNot(dnwellmv dnwmviph) pdiffadnwmv (enc < 0.86) "E1WMDP : Minimum ...

Executing: drc(dnw_nwn ndiffapw (sep < 0.43) "S1WMDN : Minimum DNWELLMV spacing to NDIFF...

Executing: drc(dnwellmv geomInside(ndiffa dnw_nwn) (enc < 0.43) "E1WMDN : Minimum DNWELL...

Executing: err_A1WM = drc(dnwellmv (area < 4.0))
	   errorLayer(err_A1WM "A1WM : Minimum DNWELLMV area = 4.0")

Executing: drc(isopw (width < 0.6) "W1PI : Minimum ISOPW width = 0.6")

Executing: drc(isopw (sepNotch < 0.6) "S1PI : Minimum ISOPW spacing/notch = 0.6")

Executing: isopw_check = geomAndNot(isopw qpvhscr_isopw)

Executing: err_B1PI = geomAndNot(isopw_check dnwtrm)
	   errorLayer(err_B1PI "B1PI : ISOPW outside DNWELLMV/DNWELL is not allowed")

Executing: pwitrm0_1 = geomInside(pwitrm0 dnw_esd)

Executing: geomStamp(pwitrm0_1 pwitrm)

Executing: drc(pwitrm0_1 (sep < 1.5) diffNet "S2IW : Minimum ISOPW spacing (different ne...

Executing: pwitrm1 = geomAndNot(pwitrm0 geomOr(pwitrm0_1))

Executing: geomStamp(pwitrm1 pwitrm)

Executing: pbd_nedia = geomStraddle(pbd_ndmos nedia)

Executing: pwi_nedia = geomInside(isopw pbd_nedia)

Executing: pwitrm01 = geomAndNot(pwitrm0 pwi_nedia)

Executing: err_B1IWa = geomAnd(pwitrm0 geomOr(nwell nbd geomAndNot(pbd pbd_nedia) pdd))

Executing: err_B1IW = geomAndNot(err_B1IWa geomOr(qnvaz_dpl qnvbx))
	   errorLayer(err_B1IW "B1IW : ISOWELL overlap of NWELL, HVNWELL, HVPWELL or PDD is not allowed")

Executing: err_B2IW = geomStraddle(pwitrm0 dnwellmvdg)
	   errorLayer(err_B2IW "B2IW : ISOWELL crossing DNWELLMV edge is not allowed")

Executing: drc(pwitrm0 (sepNotch < 0.6) "S1IW : Minimum ISOWELL spacing/notch = 0.6")

Executing: drc(pwitrm1 (sep < 3.0) diffNet "S2IW : Minimum ISOWELL spacing (different ne...

Executing: drc(geomAndNot(pwitrm01 qnvaz_dpl) dnwntie (sep < 0.43) "S1IWDN : Minimum ISO...

Executing: drc(geomAndNot(pwitrm01 qnvaz_dpl) ndiffa (enc < 0.43) "E1IWDN : Minimum ISOW...

Executing: drc(pwitrm01 pdiffa (sep < 0.43) "S1IWDP : Minimum ISOWELL spacing to PDIFF =...

Executing: drc(geomAndNot(pwitrm01 qnvaz_dpl) pdiffa (enc < 0.43) "E1IWDP : Minimum ISOW...

Executing: drc(pwitrm01 pdd (sep < 8.0) "S1IWPT : Minimum ISOWELL spacing to PDD = 8.0")

Executing: pwitrm0_nscr = geomAndNot(pwitrm0 scr_dipdnw)

Executing: drc(pwitrm0_nscr pbd (sep < 7.4) "S1IWHP : Minimum ISOWELL spacing to HVPWELL...

Executing: drc(pwitrm0_nscr nbd (sep < 0.8) "S1IWHN : Minimum ISOWELL spacing to HVNWELL...

Executing: drc(geomOutside(pwitrm0_nscr dnwellmvdg) nbd (sep < 3.0) "S2IWHN : Minimum IS...

Executing: drc(dnwellmv pwitrm0 (enc < 2.0) "E1WMIW : Minimum DNWELLMV enclosure of ISOW...

Executing: dnwell_c = geomAndNot(dnwelldg dnwellmvdg)

Executing: pwi_dnw = geomAnd(pwitrm01 dnwell_c)

Executing: pwi_dnw1 = geomAnd(geomAndNot(pwitrm01 scr_dipdnw) dnwell_c)

Executing: drc(pwi_dnw1 ndiffa (sep < 3.0) "S2IWDN : Minimum ISOWELL spacing to NDIFF = ...

Executing: drc(pwi_dnw ndiffa (enc < 3.5) "E2IWDN : Minimum ISOWELL enclosure of NDIFF =...

Executing: drc(pwi_dnw1 pdiffa (sep < 3.0) "S2IWDP : Minimum ISOWELL spacing to PDIFF = ...

Executing: drc(pwi_dnw1 pdiffa (enc < 3.0) "E2IWDP : Fixed ISOWELL enclosure of PDIFF = ...

Executing: pwi_dnw_s = geomSize(pwi_dnw -3.003)

Executing: err_E2IWDP_1 = geomSize(geomGetEdge(pwi_dnw_s outside pdiffa) 0.003)
	   errorLayer(err_E2IWDP_1 "E2IWDP : Fixed ISOWELL enclosure of PDIFF = 3.0")

Executing: err_W1DF = drc(diff (width < 0.22))
	   errorLayer(err_W1DF "W1DF : Minimum DIFF width = 0.22")

Executing: sdpwnw = geomOr(nsdpw psdnw)

Executing: buttwelltie = geomOr(buttntie buttptie)

Executing: buttedge = geomGetEdge(buttwelltie butting sdpwnw)

Executing: err_W2DF = geomSize(geomGetLength(buttedge (keep < 0.42) contiguous) 0.005)
	   errorLayer(err_W2DF "W2DF : Minimum length of coincident NDIFF/PDIFF path edge = 0.42")

Executing: drc(diff (sepNotch < 0.28) "S1DF : Minimum DIFF spacing/notch = 0.28")

Executing: drc(nwell pdiffa (enc < 0.43) "E1NWDP : Minimum NWELL enclosure of PDIFF = 0....

Executing: drc(nwell ndiffa (sep < 0.43) "S1DNNW : Minimum NDIFF spacing to NWELL = 0.43")

Executing: drc(geomAndNot(nwell ned_nw) ndiffa (enc < 0.12) "E1NWDN : Minimum NWELL encl...

Executing: drc(nwell pdiffa (sep < 0.12) "S1DPNW : Minimum PDIFF spacing to NWELL = 0.12")

Executing: err_S2DF = drc(ntie ptie (sep < 0.36))
	   errorLayer(err_S2DF "S2DF : Minimum NDIFF in NWELL spacing to PDIFF in PWELL = 0.36")

Executing: drc(diff (area < 0.202) "A1DF : Minimum DIFF area = 0.202")

Executing: act_dr2 = geomInside(diff_dg geomOr(qnv_all geomAndNot(geomSize(nedia48 -4.15...

Executing: act_dr3 = geomAnd(diff_dg rnw_scr)

Executing: act_dr4 = geomOr(geomSize(geomAnd(sab dphoa) 0.135) geomSize(geomAnd(sab dpho...

Executing: act_dr5 = geomOr(geomSize(dphoc_1 -0.881) geomSize(geomAnd(dphod_1 anodop) -0...

Executing: act_dr = geomAndNot(diff_dg geomOr(act_dr2 act_dr3 d_ds_diff act_dr4 act_dr5))

Executing: err_B1DF = geomAndNot(act_dr implant)
	   errorLayer(err_B1DF "B1DF : DIFF without NIMP or PIMP is not allowed")

Executing: diff_nscr0 = geomAndNot(diff geomButtOnly(ndiffa resnwell4))

Executing: diff_nscr = geomAndNot(diff_nscr0 phodio)

Executing: pdiff_dnwmviph = geomAnd(diff geomSize(dnwmviph 0.8))

Executing: hvgate = geomOr(nmmagate pmmagate)

Executing: diff_check = geomAndNot(diff_nscr geomOr(nmmagate pmmagate pmc_a nmc_a phv_a ...

Executing: err_B2DF = geomStraddle(diff_check nwellniso)
	   errorLayer(err_B2DF "B2DF : DIFF crossing NTYPE_WELL or PTYPE_WELL edge is not allowed")

Executing: err_B3DF = geomStraddle(geomAndNot(diff_nscr geomOr(pedam_all nha3m1)) geomAn...
	   errorLayer(err_B3DF "B3DF : DIFF crossing NWELL edge is not allowed")

Executing: diff_dnw = geomAnd(pdiffa geomAndNot(geomOr(dnwtrm hnw) geomOr(isopwell nwell...

Executing: err_S3DFa = drc(diff_dnw (sep < 0.56))

Executing: err_S3DF = geomAndNot(err_S3DFa diff)
	   errorLayer(err_S3DF "S3DF : Minimum PDIFF spacing = 0.56")

Executing: drc(mv (width < 0.6) "W1MV : Minimum MV width = 0.6")

Executing: drc(mv (sepNotch < 0.45) "S1MV : Minimum MV spacing/notch = 0.45")

Executing: drc(mv diff_dg (enc < 0.32) "E1MVDF : Minimum MV enclosure of DIFF = 0.32")

Executing: drc(mv diff_dg (sep < 0.32) "S1MVDF : Minimum MV spacing to DIFF = 0.32")

Executing: drc(mv gate (enc < 0.4) "E1MVGA : Minimum MV enclosure of GATE = 0.4")

Executing: drc(mv gate (sep < 0.4) "S1MVGA : Minimum MV spacing to GATE = 0.4")

Executing: err_B1MV = geomStraddle(geomAndNot(diff_dg cnn_ex2) mv)
	   errorLayer(err_B1MV "B1MV : DIFF crossing MV edge is not allowed")

Executing: err_B2MV = geomStraddle(nwres mv)
	   errorLayer(err_B2MV "B2MV : NW_VERIFY crossing MV edge is not allowed")

Executing: err_B3MV = geomAnd(mv geomOr(pbd nbd pdd))
	   errorLayer(err_B3MV "B3MV : MV overlap of HVPWELL, HVNWELL, PDD is not allowed")

Executing: err_W1P1 = drc(poly (width < 0.18))
	   errorLayer(err_W1P1 "W1P1 : Minimum POLY1 width = 0.18")

Executing: gate45 = geomGetAngledEdge(gate (keep == 45) fig)

Executing: gate45p = drc(gate45 (width < 0.21) opposite parallel)

Executing: err_W2P1 = geomGetAngledEdge(gate45p (keep == 45) fig)
	   errorLayer(err_W2P1 "W2P1 : Minimum POLY1 width (for 45 degree bent GATE) = 0.21")

Executing: drc(poly (sepNotch < 0.25) "S1P1 : Minimum POLY1 spacing/notch = 0.25")

Executing: drc(poly diff (sep < 0.1) "S1P1DF : Minimum POLY1 spacing to DIFF = 0.1")

Executing: err_E1P1GA = drc(geomAndNot(poly geomOr(geomSize(pedam_all 0.15) davl_all)) d...
	   errorLayer(err_E1P1GA "E1P1GA : Minimum POLY1 extension beyond GATE = 0.22")

Executing: err_E1DFGA = drc(diff geomAndNot(poly davl_all) (enc < 0.32) shielded)
	   errorLayer(err_E1DFGA "E1DFGA : Minimum DIFF extension beyond GATE = 0.32")

Executing: err_B1GA_1 = geomSize(geomButtOrCoin(geomGetCorner(poly (keep == 90) (increme...

Executing: err_B1GA_2 = geomSize(geomButtOrCoin(geomGetCorner(diff (keep == 90) (increme...

Executing: err_B1GA = geomOr(err_B1GA_1 err_B1GA_2)
	   errorLayer(err_B1GA "B1GA : 90 degree bent GATE is not allowed")

Executing: mosGate = geomOr(ne pe nem pem nnm pei pemi ndm ndmi nei nemi ngate_mv_all_nd...

Executing: err_B2GA = geomAndNot(gate0 geomOr(mosGate ped ped2 nedi nedia nmmagate pmmag...
	   errorLayer(err_B2GA "B2GA : Illegal GATE construct")

Executing: b1p1_1 = geomAnd(geomAndNot(poly geomOr(polyres_ho rpp1k1 dpol davl_ex1)) sab)

Executing: b1p1_2 = geomOr(geomInside(b1p1_1 nimp) geomInside(b1p1_1 pimp))

Executing: err_B1P1 = geomAndNot(b1p1_1 b1p1_2)
	   errorLayer(err_B1P1 "B1P1 : (POLY1 and SBLK and not (HRES or MRES)) without NIMP or PIMP is not allowed")

Executing: err_A1P1 = drc(poly (area < 0.118))
	   errorLayer(err_A1P1 "A1P1 : Minimum POLY1 area = 0.118")

Executing: err_A2P1 = drc(geomAndNot(poly sab) (area > 17000))
	   errorLayer(err_A2P1 "A2P1 : Maximum (POLY1 and not SBLK) area = 17000")

Executing: err_W1SB = drc(sab (width < 0.43))
	   errorLayer(err_W1SB "W1SB : Minimum SBLK width = 0.43")

Executing: drc(sab (sepNotch < 0.43) "S1SB : Minimum SBLK spacing/notch = 0.43")

Executing: drc(sab diff (sep < 0.22) "S1SBDF : Minimum SBLK spacing to DIFF = 0.22")

Executing: drc(sab diff (enc < 0.22) "E1SBDF : Minimum SBLK extension beyond DIFF = 0.22")

Executing: drc(poly sab (sep < 0.3) "S1SBP1 : Minimum SBLK spacing to POLY1 = 0.3")

Executing: drc(sab poly (enc < 0.22) "E1SBP1 : Minimum SBLK extension beyond POLY1 = 0.22")

Executing: drc(sab gate (sep < 0.45) "S1SBGA : Minimum SBLK spacing to GATE = 0.45")

Executing: drc(sab gate (ovlp < 0.05) "O1SBGA : Minimum SBLK overlap of GATE = 0.05")

Executing: drc(sab cont (sep < 0.22) "S1SBCT : Minimum SBLK spacing to CONT = 0.22")

Executing: drc(diff sab (enc < 0.22) "E1DFSB : Minimum DIFF extension beyond SBLK = 0.22")

Executing: drc(sab (area < 2.0) "A1SB : Minimum SBLK area = 2.0")

Executing: err_W1IN = drc(nimp (width < 0.44))
	   errorLayer(err_W1IN "W1IN : Minimum NIMP width = 0.44")

Executing: drc(nimp (sepNotch < 0.44) "S1IN : Minimum NIMP spacing/notch = 0.44")

Executing: drc(nimp geomAndNot(diff ntie) (enc < 0.18) "E1INDF : Minimum NIMP extension ...

Executing: EXTntiepw_s = geomAnd(geomSize(EXTntiepw 0.18) EXTpw)

Executing: err_E1INDF1a = geomAndNot(geomAndNot(EXTntiepw_s nimp) rnw_scr)

Executing: err_E1INDF = drc(geomGetEdge(ndiffa inside EXTpw) err_E1INDF1a ((0 < sep) < 0...
	   errorLayer(err_E1INDF "E1INDF : Minimum NIMP extension beyond DIFF = 0.18")

Executing: drc(nimp geomInside(diff geomOr(nwellniso nbd)) (enc < 0.02) "E2INDF : Minimu...

Executing: drc(nimp diff (ovlp < 0.23) oppositeB "O1INDF : Minimum DIFF overlap of NIMP ...

Executing: drc(ndiffa ngate_all_edge (enc < 0.32) "E1DNP1 : Minimum NDIFF extension beyo...

Executing: err_S1INDP = drc(nimp pdiffa ((0.0 < sep) < 0.1) shielded)
	   errorLayer(err_S1INDP "S1INDP : Minimum NIMP spacing to PDIFF = 0.1")

Executing: err_S2INDP = drc(pdiffanw nimp ((0.0 < sep) < 0.26) shielded)
	   errorLayer(err_S2INDP "S2INDP : Minimum NIMP spacing to PDIFF (in NTYPE1_WELL) = 0.26")

Executing: err_S3INDPa = geomGetEdge(geomAnd(pdiffa geomAndNot(EXTnw nwell)) coincident ...

Executing: err_S3INDP = drc(err_S3INDPa nimp (sep < 0.18))
	   errorLayer(err_S3INDP "S3INDP : Minimum NIMP spacing to PDIFF = 0.18")

Executing: drc(nimp ngate_all_twedge (enc < 0.35) "E1INDN : Minimum NIMP extension beyon...

Executing: drc(nimp (area < 0.3844) "A1IN : Minimum NIMP area = 0.3844")

Executing: err_B1IPIN = geomAndNot(geomAnd(nimp pimp) davlb_al)
	   errorLayer(err_B1IPIN "B1IPIN : PIMP overlap of NIMP is not allowed")

Executing: err_W1IP = drc(pimp (width < 0.44))
	   errorLayer(err_W1IP "W1IP : Minimum PIMP width = 0.44")

Executing: drc(pimp (sepNotch < 0.44) "S1IP : Minimum PIMP spacing/notch = 0.44")

Executing: drc(pimp geomAndNot(diff ptieg) (enc < 0.18) "E1IPDF : Minimum PIMP extension...

Executing: EXTptienw_s = geomAnd(geomSize(EXTptienw 0.18) EXTnw)

Executing: err_E1IPDF1a = geomAndNot(EXTptienw_s pimp)

Executing: err_E1IPDF = drc(geomGetEdge(pdiffa inside EXTnw) err_E1IPDF1a ((0 < sep) < 0...
	   errorLayer(err_E1IPDF "E1IPDF : Minimum PIMP extension beyond DIFF = 0.18")

Executing: drc(pimp geomOutside(diff geomOr(nwellniso nbd)) (enc < 0.02) "E2IPDF : Minim...

Executing: drc(pimp diff (ovlp < 0.23) oppositeB "O1IPDF : Minimum DIFF overlap of PIMP ...

Executing: err_E1DPP1 = geomAndNot(drc(pdiffa pgate_all_edge (enc < 0.32)) d_ds_diff)
	   errorLayer(err_E1DPP1 "E1DPP1 : Minimum PDIFF extension beyond POLY1 = 0.32")

Executing: err_S1IPDN = drc(ndiffapw pimp ((0.0 < sep) < 0.26) shielded)
	   errorLayer(err_S1IPDN "S1IPDN : Minimum PIMP spacing to NDIFF (outside NTYPE1_WELL) = 0.26")

Executing: err_S2IPDN = drc(pimp ndiffa ((0 < sep) < 0.1) shielded)
	   errorLayer(err_S2IPDN "S2IPDN : Minimum PIMP spacing to NDIFF = 0.1")

Executing: err_S3IPDNa = geomGetEdge(geomAnd(ndiffa geomAndNot(nwell nwell43u)) coincide...

Executing: err_S3IPDN = drc(err_S3IPDNa pimp (sep < 0.18))
	   errorLayer(err_S3IPDN "S3IPDN : Minimum PIMP spacing to NDIFF = 0.18")

Executing: drc(pimp pgate_all_twedge (enc < 0.35) "E1IPDP : Minimum PIMP extension beyon...

Executing: drc(pimp (area < 0.3844) "A1IP : Minimum PIMP area = 0.3844")

Executing: cont_regio1 = geomSize(cont 0.15)

Executing: cont_regio2 = geomOr(cont_regio1)

Executing: cont_regio = geomSize(cont_regio2 -0.15)

Executing: cont_array1 = drc(cont_regio2 (width < 1.92) opposite parallel)

Executing: cont_regio_r = drc(geomAndNot(cont_regio cont_array1) (area > 3.1684))

Executing: cont_array = geomOutside(cont cont_regio_r)

Executing: diffcon = geomAnd(cont diff)

Executing: contp = geomAnd(diffcon pimp)

Executing: contn = geomAnd(diffcon nimp)

Executing: err_B1CTa = geomAndNot(geomAndNot(cont diff) poly)

Executing: err_B1CTb = geomAndNot(geomAndNot(geomAndNot(diffcon d_ds_diff) implant) davl...

Executing: err_B1CT = geomOr(err_B1CTa err_B1CTb)
	   errorLayer(err_B1CT "B1CT : CONT without NDIFF or PDIFF or POLY1 is not allowed")

Executing: err_B3CT = drc(cont (notch < 0.005) only_perp)
	   errorLayer(err_B3CT "B3CT : CONT stripes are only allowed to bend at 135 degrees")

Executing: err_B1CTGA = geomAnd(cnt_napd gate)
	   errorLayer(err_B1CTGA "B1CTGA : CONT overlap of GATE is not allowed")

Executing: err_B1CTSB = geomAnd(cont sab)
	   errorLayer(err_B1CTSB "B1CTSB : CONT overlap of SBLK is not allowed")

Executing: err_W1CT = geomAndNot(geomContactCheck(cont (length == 0.22) (width == 0.22) ...
	   errorLayer(err_W1CT "W1CT : Fixed CONT size = 0.22")

Executing: w1_cnt = geomAndNot(cont geomGetRectangle(cont (length == 0.22) (width == 0.2...

Executing: err_W2CTb = geomSize(w1_cnt -0.112 downUp)

Executing: err_W2CTc = drc(w1_cnt (width < 0.216))

Executing: err_W2CTd = drc(w1_cnt (area < 0.0484))

Executing: err_W2CT = geomOr(err_W2CTb err_W2CTc err_W2CTd)
	   errorLayer(err_W2CT "W2CT : Fixed CONT stripe size = 0.22")

Executing: drc(cont (sep < 0.25) "S1CT : Minimum CONT spacing = 0.25")

Executing: drc(geomAndNot(cont cont_array) (sep < 0.28) "S2CT : Minimum CONT spacing = 0...

Executing: err_S3CT = drc(w1_cnt cont (sep < 0.39))
	   errorLayer(err_S3CT "S3CT : Minimum CONT stripe to CONT spacing = 0.39")

Executing: err_S4CT = drc(w1_cnt (sepNotch < 0.67))
	   errorLayer(err_S4CT "S4CT : Minimum CONT stripe spacing/notch = 0.67")

Executing: drc(diff cont (enc < 0.1) "E1DFCT : Minimum DIFF enclosure of CONT = 0.1")

Executing: drc(geomAnd(cnt_napd diff) poly (sep < 0.16) "S1CTP1 : Minimum CONT spacing t...

Executing: drc(poly cnt_napd (enc < 0.1) "E1P1CT : Minimum POLY1 enclosure of CONT = 0.1")

Executing: drc(geomAnd(cont poly) diff (sep < 0.2) "S1CTDF : Minimum CONT spacing to DIF...

Executing: drc(pimp contp (enc < 0.12) "E1CTIP : Minimum PIMP enclosure of DIFFCON = 0.12")

Executing: drc(nimp contn (enc < 0.12) "E1CTIN : Minimum NIMP enclosure of DIFFCON = 0.12")

Executing: err_B1CTM1 = geomAndNot(cont met1)
	   errorLayer(err_B1CTM1 "B1CTM1 : CONT must be covered by MET1")

Executing: geomSizeAnd(geomSize(met1 -5) met1 0.2 6)

Executing: geomSizeAnd(geomSize(met1 -5) met1 0.2 6)

Executing: geomSizeAnd(geomSize(met1 -5) met1 0.2 6)

Executing: geomSizeAnd(geomSize(met1 -5) met1 0.2 6)

Executing: geomSizeAnd(geomSize(met1 -5) met1 0.2 6)

Executing: met1_wide = geomSizeAnd(geomSize(met1 -5) met1 0.2 6)

Executing: err_W1M1 = drc(met1 (width < 0.23))
	   errorLayer(err_W1M1 "W1M1 : Minimum MET1 width = 0.23")

Executing: drc(met1 (sepNotch < 0.23) "S1M1 : Minimum MET1 spacing/notch = 0.23")

Executing: err_S2M1 = drc(met1_wide met1 ((0 < sep) < 0.6) shielded)
	   errorLayer(err_S2M1 "S2M1 : Minimum MET1 spacing to WIDE_MET1 = 0.6")

Executing: drc(met1 cont (enc < 0.005) "E1M1CT : Minimum MET1 enclosure of CONT = 0.005")

Executing: enccont = drc(met1 cont ((0.005 <= enc) < 0.06) oppositeB)

Executing: enccont_1 = drc(met1 enccont ((0.005 <= enc) < 0.06) opposite)

Executing: enccont_2 = geomButtOnly(enccont_1 enccont (keep == 2))

Executing: err_E2M1CT = geomButtOnly(enccont enccont_2)
	   errorLayer(err_E2M1CT "E2M1CT : Minimum MET1 enclosure of CONT = 0.06")

Executing: drc(met1 (area < 0.202) "A1M1 : Minimum MET1 area = 0.202")

Executing: err_E3M1CT = drc(met1 w1_cnt (enc < 0.07))
	   errorLayer(err_E3M1CT "E3M1CT : Minimum MET1 enclosure of CONT stripe = 0.07")

Executing: met1wpad = geomAndNot(met1 pad)

Executing: err_B1M1 = geomWidth(met1wpad (keep > 35))
	   errorLayer(err_B1M1 "B1M1 : All MET1 tracks > 35um wide to be slotted (except Pads)")

Executing: drc(met1s (width < 0.6) "W2M1 : Minimum M1SLOT width = 0.6")

Executing: drc(met1s (width < 20) (length < 20) "W3M1 : Minimum M1SLOT length = 20.0")

Executing: drc(met1s (sepNotch < 10) "S3M1 : Minimum M1SLOT spacing/notch = 10.0")

Executing: drc(met1dg met1s (enc < 10) "E1M1M1 : Minimum MET1 enclosure of M1SLOT = 10.0")

Executing: err_E1M1M1a = geomAndNot(met1s met1dg)
	   errorLayer(err_E1M1M1a "E1M1M1 : M1SLOT without MET1 is not allowed")

Executing: err_B1V1 = geomOr(geomAndNot(via1 met1) geomAndNot(via1 met2))
	   errorLayer(err_B1V1 "B1V1 : VIA1 must be covered by MET1 and MET2")

Executing: err_B2V1 = drc(via1 (notch < 0.005) only_perp)
	   errorLayer(err_B2V1 "B2V1 : VIA1 stripes are only allowed to bend at 135 degrees")

Executing: w1_via1 = geomAndNot(via1 geomGetRectangle(via1 (length == 0.26) (width == 0....

Executing: optovia1 = geomAnd(w1_via1 optivia1)

Executing: err_W1V1 = geomAndNot(geomContactCheck(via1 (length == 0.26) (width == 0.26) ...
	   errorLayer(err_W1V1 "W1V1 : Fixed VIA1 size = 0.26")

Executing: err_W2V1a = drc(w1_via1 (width < 0.256))

Executing: err_W2V1b = geomAndNot(geomSize(w1_via1 -0.132 downUp) dpho_uv5)

Executing: err_W2V1c = drc(w1_via1 (area < 0.0676))

Executing: err_W2V1 = geomOr(err_W2V1c err_W2V1a err_W2V1b)
	   errorLayer(err_W2V1 "W2V1 : Fixed VIA1 stripe size = 0.26")

Executing: err_S2V1 = drc(w1_via1 via1 (sep < 1.0))
	   errorLayer(err_S2V1 "S2V1 : Minimum VIA1 stripe to VIA1 spacing = 1.0")

Executing: drc(via1 (sep < 0.26) "S1V1 : Minimum VIA1 spacing = 0.26")

Executing: drc(met1 via1 (enc < 0.01) "E1M1V1 : Minimum MET1 enclosure of VIA1 = 0.01")

Executing: encvia1_m1 = drc(met1 via1 ((0.01 <= enc) < 0.06) oppositeB)

Executing: encvia1_m1_1 = drc(met1 encvia1_m1 ((0.01 <= enc) < 0.06) opposite)

Executing: encvia1_m1_2 = geomButtOnly(encvia1_m1_1 encvia1_m1 (keep == 2))

Executing: err_E2M1V1 = geomButtOnly(encvia1_m1 encvia1_m1_2)
	   errorLayer(err_E2M1V1 "E2M1V1 : Minimum MET1 enclosure of VIA1 = 0.06")

Executing: drc(met2 via1 (enc < 0.01) "E1M2V1 : Minimum MET2 enclosure of VIA1 = 0.01")

Executing: encvia1_m2 = drc(met2 via1 ((0.01 <= enc) < 0.06) oppositeB)

Executing: encvia1_m2_1 = drc(met2 encvia1_m2 ((0.01 <= enc) < 0.06) opposite)

Executing: encvia1_m2_2 = geomButtOnly(encvia1_m2_1 encvia1_m2 (keep == 2))

Executing: err_E2M2V1 = geomButtOnly(encvia1_m2 encvia1_m2_2)
	   errorLayer(err_E2M2V1 "E2M2V1 : Minimum MET2 enclosure of VIA1 = 0.06")

Executing: err_E4M1V1 = drc(met1 w1_via1 (enc < 0.07))
	   errorLayer(err_E4M1V1 "E4M1V1 : Minimum MET1 enclosure of VIA1 stripe = 0.07")

Executing: err_E7M2V1 = drc(met2 w1_via1 (enc < 0.07))
	   errorLayer(err_E7M2V1 "E7M2V1 : Minimum MET2 enclosure of VIA1 stripe = 0.07")

Executing: err_Q20V1 = geomOr(optovia1)
	   errorLayer(err_Q20V1 "Q20V1 : Check for the right usage of OPTOVIA1")

Executing: geomSizeAnd(geomSize(met2 -5) met2 0.2 6)

Executing: geomSizeAnd(geomSize(met2 -5) met2 0.2 6)

Executing: geomSizeAnd(geomSize(met2 -5) met2 0.2 6)

Executing: geomSizeAnd(geomSize(met2 -5) met2 0.2 6)

Executing: geomSizeAnd(geomSize(met2 -5) met2 0.2 6)

Executing: met2_wide = geomSizeAnd(geomSize(met2 -5) met2 0.2 6)

Executing: err_W1M2 = drc(met2 (width < 0.28))
	   errorLayer(err_W1M2 "W1M2 : Minimum MET2 width = 0.28")

Executing: drc(met2 (sepNotch < 0.28) "S1M2 : Minimum MET2 spacing/notch = 0.28")

Executing: err_S2M2 = drc(met2_wide met2 ((0 < sep) < 0.6) shielded)
	   errorLayer(err_S2M2 "S2M2 : Minimum MET2 spacing to WIDE_MET2 = 0.6")

Executing: drc(met2 (area < 0.202) "A1M2 : Minimum MET2 area = 0.202")

Executing: met2wpad = geomAndNot(met2 geomOr(pad geomSize(geomOr(dphoc0 dphod0) 0.86)))

Executing: err_B1M2 = geomWidth(met2wpad (keep > 35))
	   errorLayer(err_B1M2 "B1M2 : All MET2 tracks > 35um wide to be slotted (except Pads)")

Executing: drc(met2s (width < 0.6) "W2M2 : Minimum M2SLOT width = 0.6")

Executing: drc(met2s (width < 20) (length < 20) "W3M2 : Minimum M2SLOT length = 20.0")

Executing: drc(met2s (sepNotch < 10) "S3M2 : Minimum M2SLOT spacing/notch = 10.0")

Executing: drc(met2s met1s (sep < 2.0) "S1M2M1 : Minimum M2SLOT spacing to M1SLOT = 2.0")

Executing: drc(met2dg met2s (enc < 10) "E1M2M2 : Minimum MET2 enclosure of M2SLOT = 10.0")

Executing: err_E1M2M2a = geomAndNot(met2s met2dg)
	   errorLayer(err_E1M2M2a "E1M2M2 : M2SLOT without MET2 is not allowed")

Executing: err_S1M2M1a = geomAnd(met2s met1s)
	   errorLayer(err_S1M2M1a "S1M2M1 : M2SLOT overlap of M1SLOT is not allowed")

Executing: err_B1V2 = geomOr(geomAndNot(via2 met2) geomAndNot(via2 met3))
	   errorLayer(err_B1V2 "B1V2 : VIA2 must be covered by MET2 and MET3")

Executing: err_B2V2 = drc(via2 (notch < 0.005) only_perp)
	   errorLayer(err_B2V2 "B2V2 : VIA2 stripes are only allowed to bend at 135 degrees")

Executing: w1_via2 = geomAndNot(via2 geomGetRectangle(via2 (length == 0.26) (width == 0....

Executing: optovia2 = geomAnd(w1_via2 optivia2)

Executing: err_W1V2 = geomAndNot(geomContactCheck(via2 (length == 0.26) (width == 0.26) ...
	   errorLayer(err_W1V2 "W1V2 : Fixed VIA2 size = 0.26")

Executing: err_W2V2a = drc(w1_via2 (width < 0.26))

Executing: err_W2V2b = geomAndNot(geomSize(w1_via2 -0.132 downUp) dpho_uv5)

Executing: err_W2V2 = geomOr(err_W2V2a err_W2V2b)
	   errorLayer(err_W2V2 "W2V2 : Fixed VIA2 stripe size = 0.26")

Executing: err_S2V2 = drc(w1_via2 via2 (sep < 1.0))
	   errorLayer(err_S2V2 "S2V2 : Minimum VIA2 stripe to VIA2 spacing = 1.0")

Executing: drc(via2 (sep < 0.26) "S1V2 : Minimum VIA2 spacing = 0.26")

Executing: drc(met2 via2 (enc < 0.01) "E1M2V2 : Minimum MET2 enclosure of VIA2 = 0.01")

Executing: encvia2_m2 = drc(met2 via2 ((0.01 <= enc) < 0.06) oppositeB)

Executing: encvia2_m2_1 = drc(met2 encvia2_m2 ((0.01 <= enc) < 0.06) opposite)

Executing: encvia2_m2_2 = geomButtOnly(encvia2_m2_1 encvia2_m2 (keep == 2))

Executing: err_E2M2V2 = geomButtOnly(encvia2_m2 encvia2_m2_2)
	   errorLayer(err_E2M2V2 "E2M2V2 : Minimum MET2 enclosure of VIA2 = 0.06")

Executing: drc(met3 via2 (enc < 0.01) "E1M3V2 : Minimum MET3 enclosure of VIA2 = 0.01")

Executing: encvia2_m3 = drc(met3 via2 ((0.01 <= enc) < 0.06) oppositeB)

Executing: encvia2_m3_1 = drc(met3 encvia2_m3 ((0.01 <= enc) < 0.06) opposite)

Executing: encvia2_m3_2 = geomButtOnly(encvia2_m3_1 encvia2_m3 (keep == 2))

Executing: err_E2M3V2 = geomButtOnly(encvia2_m3 encvia2_m3_2)
	   errorLayer(err_E2M3V2 "E2M3V2 : Minimum MET3 enclosure of VIA2 = 0.06")

Executing: err_E8M2V2 = drc(met2 w1_via2 (enc < 0.1))
	   errorLayer(err_E8M2V2 "E8M2V2 : Minimum MET2 enclosure of VIA2 stripe = 0.1")

Executing: err_E3M3V2 = drc(met3 w1_via2 (enc < 0.1))
	   errorLayer(err_E3M3V2 "E3M3V2 : Minimum MET3 enclosure of VIA2 stripe = 0.1")

Executing: err_Q20V2 = geomOr(optovia2)
	   errorLayer(err_Q20V2 "Q20V2 : Check for the right usage of OPTOVIA2")

Executing: geomSizeAnd(geomSize(met3 -5) met3 0.2 6)

Executing: geomSizeAnd(geomSize(met3 -5) met3 0.2 6)

Executing: geomSizeAnd(geomSize(met3 -5) met3 0.2 6)

Executing: geomSizeAnd(geomSize(met3 -5) met3 0.2 6)

Executing: geomSizeAnd(geomSize(met3 -5) met3 0.2 6)

Executing: met3_wide = geomSizeAnd(geomSize(met3 -5) met3 0.2 6)

Executing: err_W1M3 = drc(met3 (width < 0.28))
	   errorLayer(err_W1M3 "W1M3 : Minimum MET3 width = 0.28")

Executing: drc(met3 (sepNotch < 0.28) "S1M3 : Minimum MET3 spacing/notch = 0.28")

Executing: err_S2M3 = drc(met3_wide met3 ((0 < sep) < 0.6) shielded)
	   errorLayer(err_S2M3 "S2M3 : Minimum MET3 spacing to WIDE_MET3 = 0.6")

Executing: drc(met3 (area < 0.202) "A1M3 : Minimum MET3 area = 0.202")

Executing: met3wpad = geomAndNot(met3 pad)

Executing: err_B1M3 = geomWidth(met3wpad (keep > 35))
	   errorLayer(err_B1M3 "B1M3 : All MET3 tracks > 35um wide to be slotted (except Pads)")

Executing: drc(met3s (width < 0.6) "W2M3 : Minimum M3SLOT width = 0.6")

Executing: drc(met3s (width < 20) (length < 20) "W3M3 : Minimum M3SLOT length = 20.0")

Executing: drc(met3s (sepNotch < 10) "S3M3 : Minimum M3SLOT spacing/notch = 10.0")

Executing: drc(met3s met2s (sep < 2.0) "S1M3M2 : Minimum M3SLOT spacing to M2SLOT = 2.0")

Executing: drc(met3dg met3s (enc < 10) "E1M3M3 : Minimum MET3 enclosure of M3SLOT = 10.0")

Executing: err_E1M3M3a = geomAndNot(met3s met3dg)
	   errorLayer(err_E1M3M3a "E1M3M3 : M3SLOT without MET3 is not allowed")

Executing: err_S1M3M2a = geomAnd(met3s met2s)
	   errorLayer(err_S1M3M2a "S1M3M2 : M3SLOT overlap of M2SLOT is not allowed")

Executing: err_B1V3 = geomOr(geomAndNot(via3 met3) geomAndNot(via3 met4))
	   errorLayer(err_B1V3 "B1V3 : VIA3 must be covered by MET3 and MET4")

Executing: err_B2V3 = drc(via3 (notch < 0.005) only_perp)
	   errorLayer(err_B2V3 "B2V3 : VIA3 stripes are only allowed to bend at 135 degrees")

Executing: w1_via3 = geomAndNot(via3 geomGetRectangle(via3 (length == 0.26) (width == 0....

Executing: optovia3 = geomAnd(w1_via3 optivia3)

Executing: err_W1V3 = geomAndNot(geomContactCheck(via3 (length == 0.26) (width == 0.26) ...
	   errorLayer(err_W1V3 "W1V3 : Fixed VIA3 size = 0.26")

Executing: err_W2V3a = drc(w1_via3 (width < 0.26))

Executing: err_W2V3b = geomAndNot(geomSize(w1_via3 -0.132 downUp) dpho_uv5)

Executing: err_W2V3 = geomOr(err_W2V3a err_W2V3b)
	   errorLayer(err_W2V3 "W2V3 : Fixed VIA3 stripe size = 0.26")

Executing: err_S2V3 = drc(w1_via3 via3 (sep < 1.0))
	   errorLayer(err_S2V3 "S2V3 : Minimum VIA3 stripe to VIA3 spacing = 1.0")

Executing: drc(via3 (sep < 0.26) "S1V3 : Minimum VIA3 spacing = 0.26")

Executing: drc(met3 via3 (enc < 0.01) "E1M3V3 : Minimum MET3 enclosure of VIA3 = 0.01")

Executing: encvia3_m3 = drc(met3 via3 ((0.01 <= enc) < 0.06) oppositeB)

Executing: encvia3_m3_1 = drc(met3 encvia3_m3 ((0.01 <= enc) < 0.06) opposite)

Executing: encvia3_m3_2 = geomButtOnly(encvia3_m3_1 encvia3_m3 (keep == 2))

Executing: err_E2M3V3 = geomButtOnly(encvia3_m3 encvia3_m3_2)
	   errorLayer(err_E2M3V3 "E2M3V3 : Minimum MET3 enclosure of VIA3 = 0.06")

Executing: drc(met4 via3 (enc < 0.01) "E1M4V3 : Minimum MET4 enclosure of VIA3 = 0.01")

Executing: encvia3_m4 = drc(met4 via3 ((0.01 <= enc) < 0.06) oppositeB)

Executing: encvia3_m4_1 = drc(met4 encvia3_m4 ((0.01 <= enc) < 0.06) opposite)

Executing: encvia3_m4_2 = geomButtOnly(encvia3_m4_1 encvia3_m4 (keep == 2))

Executing: err_E2M4V3 = geomButtOnly(encvia3_m4 encvia3_m4_2)
	   errorLayer(err_E2M4V3 "E2M4V3 : Minimum MET4 enclosure of VIA3 = 0.06")

Executing: err_E8M3V3 = drc(met3 w1_via3 (enc < 0.1))
	   errorLayer(err_E8M3V3 "E8M3V3 : Minimum MET3 enclosure of VIA3 stripe = 0.1")

Executing: err_E4M4V3 = drc(met4 w1_via3 (enc < 0.1))
	   errorLayer(err_E4M4V3 "E4M4V3 : Minimum MET4 enclosure of VIA3 stripe = 0.1")

Executing: err_Q20V3 = geomOr(optovia3)
	   errorLayer(err_Q20V3 "Q20V3 : Check for the right usage of OPTOVIA3")

Executing: geomSizeAnd(geomSize(met4 -5) met4 0.2 6)

Executing: geomSizeAnd(geomSize(met4 -5) met4 0.2 6)

Executing: geomSizeAnd(geomSize(met4 -5) met4 0.2 6)

Executing: geomSizeAnd(geomSize(met4 -5) met4 0.2 6)

Executing: geomSizeAnd(geomSize(met4 -5) met4 0.2 6)

Executing: met4_wide = geomSizeAnd(geomSize(met4 -5) met4 0.2 6)

Executing: err_W1M4 = drc(met4 (width < 0.28))
	   errorLayer(err_W1M4 "W1M4 : Minimum MET4 width = 0.28")

Executing: drc(met4 (sepNotch < 0.28) "S1M4 : Minimum MET4 spacing/notch = 0.28")

Executing: err_S2M4 = drc(met4_wide met4 ((0 < sep) < 0.6) shielded)
	   errorLayer(err_S2M4 "S2M4 : Minimum MET4 spacing to WIDE_MET4 = 0.6")

Executing: drc(met4 (area < 0.202) "A1M4 : Minimum MET4 area = 0.202")

Executing: met4wpad = geomAndNot(met4 pad)

Executing: err_B1M4 = geomWidth(met4wpad (keep > 35))
	   errorLayer(err_B1M4 "B1M4 : All MET4 tracks > 35um wide to be slotted (except Pads)")

Executing: drc(met4s (width < 0.6) "W2M4 : Minimum M4SLOT width = 0.6")

Executing: drc(met4s (width < 20) (length < 20) "W3M4 : Minimum M4SLOT length = 20.0")

Executing: drc(met4s (sepNotch < 10) "S3M4 : Minimum M4SLOT spacing/notch = 10.0")

Executing: drc(met4s met3s (sep < 2.0) "S1M4M3 : Minimum M4SLOT spacing to M3SLOT = 2.0")

Executing: drc(met4dg met4s (enc < 10) "E1M4M4 : Minimum MET4 enclosure of M4SLOT = 10.0")

Executing: err_E1M4M4a = geomAndNot(met4s met4dg)
	   errorLayer(err_E1M4M4a "E1M4M4 : M4SLOT without MET4 is not allowed")

Executing: err_S1M4M3a = geomAnd(met4s met3s)
	   errorLayer(err_S1M4M3a "S1M4M3 : M4SLOT overlap of M3SLOT is not allowed")

Executing: err_B1VT = geomAndNot(vtp mtp)
	   errorLayer(err_B1VT "B1VT : VIATP must be covered by METTP")

Executing: err_B2VT = drc(vtp (notch < 0.005) only_perp)
	   errorLayer(err_B2VT "B2VT : VIATP stripes are only allowed to bend at 135 degrees")

Executing: w1_vtp = geomAndNot(vtp geomGetRectangle(vtp (length == 0.36) (width == 0.36)))

Executing: optovtp = geomAnd(w1_vtp optivtp)

Executing: err_W1VT = geomAndNot(geomContactCheck(vtp (length == 0.36) (width == 0.36) i...
	   errorLayer(err_W1VT "W1VT : Fixed VIATP size = 0.36")

Executing: err_W2VTa = drc(w1_vtp (width < 0.36))

Executing: err_W2VTb = geomAndNot(geomSize(w1_vtp -0.182 downUp) dpho_uv5)

Executing: err_W2VT = geomOr(err_W2VTa err_W2VTb)
	   errorLayer(err_W2VT "W2VT : Fixed VIATP stripe size = 0.36")

Executing: drc(vtp (sep < 0.35) "S1VT : Minimum VIATP spacing = 0.35")

Executing: drc(mtp vtp (enc < 0.09) "E1MTVT : Minimum METTP enclosure of VIATP = 0.09")

Executing: err_S9VT = drc(w1_vtp vtp (sep < 1.0))
	   errorLayer(err_S9VT "S9VT : Minimum VIATP stripe to VIATP spacing = 1.0")

Executing: err_E3MTVT = drc(mtp w1_vtp (enc < 0.2))
	   errorLayer(err_E3MTVT "E3MTVT : Minimum METTP enclosure of VIATP stripe = 0.2")

Executing: err_Q20VT = geomOr(optovtp)
	   errorLayer(err_Q20VT "Q20VT : Check for the right usage of OPTOVIATP")

Executing: err_B1VTM4 = geomAndNot(vtp met4)
	   errorLayer(err_B1VTM4 "B1VTM4 : VIATP must be covered by MET4")

Executing: drc(met4 vtp (enc < 0.01) "E1M4VT : Minimum MET4 enclosure of VIATP = 0.01")

Executing: encvtp_m4 = drc(met4 vtp ((0.01 <= enc) < 0.06) oppositeB)

Executing: encvtp_m4_1 = drc(met4 encvtp_m4 ((0.01 <= enc) < 0.06) opposite)

Executing: encvtp_m4_2 = geomButtOnly(encvtp_m4_1 encvtp_m4 (keep == 2))

Executing: err_E2M4VT = geomButtOnly(encvtp_m4 encvtp_m4_2)
	   errorLayer(err_E2M4VT "E2M4VT : Minimum MET4 enclosure of VIATP = 0.06")

Executing: err_E5M4VT = drc(met4 w1_vtp (enc < 0.2))
	   errorLayer(err_E5M4VT "E5M4VT : Minimum MET4 enclosure of VIATP stripe = 0.2")

Executing: geomSizeAnd(geomSize(mtp -5) mtp 0.2 6)

Executing: geomSizeAnd(geomSize(mtp -5) mtp 0.2 6)

Executing: geomSizeAnd(geomSize(mtp -5) mtp 0.2 6)

Executing: geomSizeAnd(geomSize(mtp -5) mtp 0.2 6)

Executing: geomSizeAnd(geomSize(mtp -5) mtp 0.2 6)

Executing: mtp_wide = geomSizeAnd(geomSize(mtp -5) mtp 0.2 6)

Executing: err_W1MT = drc(mtp (width < 0.44))
	   errorLayer(err_W1MT "W1MT : Minimum METTP width = 0.44")

Executing: drc(mtp (sepNotch < 0.46) "S1MT : Minimum METTP spacing/notch = 0.46")

Executing: err_S2MT = drc(mtp_wide mtp ((0 < sep) < 0.6) shielded)
	   errorLayer(err_S2MT "S2MT : Minimum METTP spacing to WIDE_METTP = 0.6")

Executing: drc(mtp (area < 0.562) "A1MT : Minimum METTP area = 0.562")

Executing: mtpwpad = geomAndNot(mtp pad)

Executing: err_B1MT = geomWidth(mtpwpad (keep > 35))
	   errorLayer(err_B1MT "B1MT : All METTP tracks > 35um wide to be slotted (except Pads)")

Executing: drc(mtps (width < 0.6) "W2MT : Minimum MTPSLOT width = 0.6")

Executing: drc(mtps (width < 20) (length < 20) "W3MT : Minimum MTPSLOT length = 20.0")

Executing: drc(mtps (sepNotch < 10) "S3MT : Minimum MTPSLOT spacing/notch = 10.0")

Executing: drc(mtpdg mtps (enc < 10) "E1MTMT : Minimum METTP enclosure of MTPSLOT = 10.0")

Executing: err_E1MTMTa = geomAndNot(mtps mtpdg)
	   errorLayer(err_E1MTMTa "E1MTMT : MTPSLOT without METTP is not allowed")

Executing: drc(mtps met4s (sep < 2.0) "S1MTM4 : Minimum MTPSLOT spacing to M4SLOT = 2.0")

Executing: err_S1MTM4a = geomAnd(mtps met4s)
	   errorLayer(err_S1MTM4a "S1MTM4 : MTPSLOT overlap M4SLOT is not allowed")

Executing: err_B1VL = geomAndNot(vtpl mtpl)
	   errorLayer(err_B1VL "B1VL : VIATPL must be covered by METTPL")

Executing: err_W1VL = geomContactCheck(vtpl (length == 0.5) (width == 0.5) ignore)
	   errorLayer(err_W1VL "W1VL : Fixed VIATPL size = 0.5")

Executing: drc(vtpl (sep < 0.45) "S1VL : Minimum VIATPL spacing = 0.45")

Executing: err_B1VLMT = geomAndNot(vtpl mtp)
	   errorLayer(err_B1VLMT "B1VLMT : VIATPL must be covered by METTP")

Executing: drc(mtp vtpl (enc < 0.5) "E1MTVL : Minimum METTP enclosure of VIATPL = 0.5")

Executing: bulk_dens_nlv = geomAndNot(bkgnd lock_f)

Executing: bulk_dens_nlvc = geomOr(bulk_dens_nlv)

Executing: viatpl_dens = dens_vtpl = processCoverage((withinLayer bulk_dens_nlvc) backup...

Executing: err_R1VLVT = dens_vtp = processCoverage((withinLayer viatpl_dens) backup (mea...
	   errorLayer(err_R1VLVT "R1VLVT : Maximum local VIATPL density = 19%")

Executing: drc(mtpl vtpl (enc < 0.5) "E1MLVL : Minimum METTPL enclosure of VIATPL = 0.5")

Executing: err_B1ML = geomWidth(geomAndNot(mtpl pad) (keep > 35.0))
	   errorLayer(err_B1ML "B1ML : METTPL tracks > 35.0 are not allowed (except Pads)")

Executing: err_W1ML = drc(mtpl (width < 3.0))
	   errorLayer(err_W1ML "W1ML : Minimum METTPL width = 3.0")

Executing: err_S1ML = drc(mtpl (sepNotch < 2.5))
	   errorLayer(err_S1ML "S1ML : Minimum METTPL spacing/notch = 2.5")

Executing: drc(mtpl (area < 10.0) "A1ML : Minimum METTPL area = 10.0")

Executing: err_A2ML = drc(geomAndNot(geomHoles(mtpl) mtpl) (area < 18.0))
	   errorLayer(err_A2ML "A2ML : Minimum METTPL enclosed area = 18.0")

Executing: drc(nopim (width < 60.0) "W1IB : Minimum NOPIM width = 60.0")

Executing: drc(nopim (sepNotch < 20.0) "S1IB : Minimum NOPIM spacing/notch = 20.0")

Executing: drc(nopim pad ((0 < sep) < 40.0) "S1IBPA : Minimum NOPIM spacing to PAD = 40.0")

Executing: pad_u = geomGetTexted(pad padlabel "USERPAD")

Executing: pad_p = geomGetTexted(pad padlabel "PROBEPAD")

Executing: pad_c = geomGetTexted(pad padlabel "CUPAD")

Executing: pad_b = geomOutside(pad geomOr(pad_u pad_p pad_c))

Executing: geomStamp(pad_b mtpltrm)

Executing: pad_s = geomSize(pad_b 2.0)

Executing: padv1 = geomAnd(via1 pad_s)

Executing: padv2 = geomAnd(via2 pad_s)

Executing: padv3 = geomAnd(via3 pad_s)

Executing: padvtpl = geomAnd(vtpl pad_s)

Executing: padvtp = geomAnd(vtp pad_s)

Executing: err_B4PA = geomAndNot(pad mtpl)
	   errorLayer(err_B4PA "B4PA : PAD without METTPL is not allowed")

Executing: drc(mtpl pad (enc < 2.0) "E1MLPA : Minimum METTPL enclosure of PAD = 2.0")

Executing: drc(pad (width < 15.0) "W1PA : Minimum PAD width = 15.0")

Executing: drc(pad (sepNotch < 7.0) "S1PA : Minimum PAD spacing/notch = 7.0")

Executing: err_B2PA = geomAnd(pad_b geomOr(diff_dg polydg))
	   errorLayer(err_B2PA "B2PA : PAD overlap of DIFF or POLY1 is not allowed")

Executing: err_Q1PA = drc(pad_b (width < 53.0))
	   errorLayer(err_Q1PA "Q1PA : Minimum recommended bond PAD width = 53.0")

Executing: err_Q3PA = drc(pad_c (width < 66.0) parallel)
	   errorLayer(err_Q3PA "Q3PA : Minimum recommended PAD width = 66.0")

Executing: drc(diff_dg pad_b (sep < 5.0) "S1PADF : Minimum PAD spacing to DIFF = 5.0")

Executing: drc(polydg pad_b (sep < 5.0) "S1PAP1 : Minimum PAD spacing to POLY1 = 5.0")

Executing: err_S1PAM1a = drc(pad_b met1 (sep < 5.0))

Executing: err_S1PAM1b = drc(pad_b met1trm (sep < 5.0) sameNet)

Executing: err_S1PAM1 = geomAndNot(err_S1PAM1a err_S1PAM1b)
	   errorLayer(err_S1PAM1 "S1PAM1 : Minimum PAD spacing to MET1 (different net) = 5.0")

Executing: err_S1PAM2a = drc(pad_b met2 (sep < 5.0))

Executing: err_S1PAM2b = drc(pad_b met2trm (sep < 5.0) sameNet)

Executing: err_S1PAM2 = geomAndNot(err_S1PAM2a err_S1PAM2b)
	   errorLayer(err_S1PAM2 "S1PAM2 : Minimum PAD spacing to MET2 (different net) = 5.0")

Executing: drc(met1 pad_b (enc < 2.0) "E1M1PA : Minimum MET1 enclosure of PAD = 2.0")

Executing: err_E1M1PA = geomAndNot(pad_b met1)
	   errorLayer(err_E1M1PA "E1M1PA : Minimum MET1 enclosure of PAD = 2.0")

Executing: drc(met2 pad_b (enc < 2.0) "E1M2PA : Minimum MET2 enclosure of PAD = 2.0")

Executing: err_E1M2PA = geomAndNot(pad_b met2)
	   errorLayer(err_E1M2PA "E1M2PA : Minimum MET2 enclosure of PAD = 2.0")

Executing: drc(padv1 (sep < 0.45) "S2V1 : Minimum VIA1 spacing = 0.45")

Executing: drc(padv2 (sep < 0.45) "S2V2 : Minimum VIA2 spacing = 0.45")

Executing: drc(padv1 padv2 (sep < 0.13) "S1V2V1 : Minimum VIA2 spacing to VIA1 = 0.13")

Executing: err_S1V2V1 = geomAnd(padv1 padv2)
	   errorLayer(err_S1V2V1 "S1V2V1 : Minimum VIA2 spacing to VIA1 = 0.13")

Executing: drc(met1 padv1 (enc < 3.0) "E3M1V1 : Minimum MET1 and MET2 enclosure of VIA1 ...

Executing: drc(met2 padv1 (enc < 3.0) "E3M1V1 : Minimum MET1 and MET2 enclosure of VIA1 ...

Executing: err_S1PAM3a = drc(pad_b met3 (sep < 5.0))

Executing: err_S1PAM3b = drc(pad_b met3trm (sep < 5.0) sameNet)

Executing: err_S1PAM3 = geomAndNot(err_S1PAM3a err_S1PAM3b)
	   errorLayer(err_S1PAM3 "S1PAM3 : Minimum PAD spacing to MET3 (different net) = 5.0")

Executing: drc(met3 pad_b (enc < 2.0) "E1M3PA : Minimum MET3 enclosure of PAD = 2.0")

Executing: err_E1M3PA = geomAndNot(pad_b met3)
	   errorLayer(err_E1M3PA "E1M3PA : Minimum MET3 enclosure of PAD = 2.0")

Executing: drc(met2 padv2 (enc < 3.0) "E3M2V2 : Minimum MET2 and MET3 enclosure of VIA2 ...

Executing: drc(met3 padv2 (enc < 3.0) "E3M2V2 : Minimum MET2 and MET3 enclosure of VIA2 ...

Executing: err_S1PAMTa = drc(pad_b mtp (sep < 5.0))

Executing: err_S1PAMTb = drc(pad_b mtptrm (sep < 5.0) sameNet)

Executing: err_S1PAMT = geomAndNot(err_S1PAMTa err_S1PAMTb)
	   errorLayer(err_S1PAMT "S1PAMT : Minimum PAD spacing to METTP (different net) = 5.0")

Executing: drc(mtp padvtp (enc < 3.0) "E2MTVT : Minimum METTP enclosure of VIATP = 3.0")

Executing: drc(mtp pad_b (enc < 2.0) "E1MTPA : Minimum METTP enclosure of PAD = 2.0")

Executing: err_E1MTPAa = geomAndNot(pad_b mtp)
	   errorLayer(err_E1MTPAa "E1MTPA : Minimum METTP enclosure of PAD = 2.0")

Executing: err_S1PAM4a = drc(pad_b met4 (sep < 5.0))

Executing: err_S1PAM4b = drc(pad_b met4trm (sep < 5.0) sameNet)

Executing: err_S1PAM4 = geomAndNot(err_S1PAM4a err_S1PAM4b)
	   errorLayer(err_S1PAM4 "S1PAM4 : Minimum PAD spacing to MET4 (different net) = 5.0")

Executing: drc(met4 pad_b (enc < 2.0) "E1M4PA : Minimum MET4 enclosure of PAD = 2.0")

Executing: err_E1M4PA = geomAndNot(pad_b met4)
	   errorLayer(err_E1M4PA "E1M4PA : Minimum MET4 enclosure of PAD = 2.0")

Executing: drc(padv3 (sep < 0.45) "S2V3 : Minimum VIA3 spacing = 0.45")

Executing: drc(padv2 padv3 (sep < 0.13) "S1V3V2 : Minimum VIA3 spacing to VIA2 = 0.13")

Executing: err_S1V3V2 = geomAnd(padv2 padv3)
	   errorLayer(err_S1V3V2 "S1V3V2 : Minimum VIA3 spacing to VIA2 = 0.13")

Executing: drc(met3 padv3 (enc < 3.0) "E3M3V3 : Minimum MET3 and MET4 enclosure of VIA3 ...

Executing: drc(met4 padv3 (enc < 3.0) "E3M3V3 : Minimum MET3 and MET4 enclosure of VIA3 ...

Executing: err_S1PAMLa = drc(pad_b mtpl (sep < 5.0))

Executing: err_S1PAMLb = drc(pad_b mtpltrm (sep < 5.0) sameNet)

Executing: err_S1PAML = geomAndNot(err_S1PAMLa err_S1PAMLb)
	   errorLayer(err_S1PAML "S1PAML : Minimum PAD spacing to METTPL (different net) = 5.0")

Executing: drc(mtpl padvtpl (enc < 3.0) "E2MLVL : Minimum METTPL enclosure of VIATPL = 3...

Executing: drc(mtp padvtpl (enc < 3.0) "E2MTVL : Minimum METTP enclosure of VIATPL = 3.0")

Executing: drc(padv3 padvtp (sep < 0.06) "S1VTV3 : Minimum VIATP spacing to VIA3 = 0.06")

Executing: err_S1VTV3 = geomAnd(padv3 padvtp)
	   errorLayer(err_S1VTV3 "S1VTV3 : Minimum VIATP spacing to VIA3 = 0.06")

Executing: drc(met4 padvtp (enc < 3.0) "E3M4VT : Minimum MET4 enclosure of VIATP = 3.0")

Executing: err_R1V1PA_1 = geomAndNot(pad_b geomEnclose(pad_b via1))

Executing: processAntenna((pad_b (gate (sum pad_b)) (antenna (sum via1)) (keep < 0.05))
running in speedup mode

Executing: err_R1V1PA = geomOr(err_R1V1PA_1 err_R1V1PA_2)
	   errorLayer(err_R1V1PA "R1V1PA : Minimum ratio of VIA1 (in pad) area to PAD area = 0.05")

Executing: err_R1V2PA_1 = geomAndNot(pad_b geomEnclose(pad_b via2CON))

Executing: processAntenna((pad_b (gate (sum pad_b)) (antenna (sum via2CON)) (keep < 0.05))
running in speedup mode

Executing: err_R1V2PA = geomOr(err_R1V2PA_1 err_R1V2PA_2)
	   errorLayer(err_R1V2PA "R1V2PA : Minimum ratio of VIA2 (in pad) area to PAD area = 0.05")

Executing: err_R1VTPA_1 = geomAndNot(pad_b geomEnclose(pad_b vtpCON))

Executing: processAntenna((pad_b (gate (sum pad_b)) (antenna (sum vtpCON)) (keep < 0.05))
running in speedup mode

Executing: err_R1VTPA = geomOr(err_R1VTPA_1 err_R1VTPA_2)
	   errorLayer(err_R1VTPA "R1VTPA : Minimum ratio of VIATP (in pad) area to PAD area = 0.05")

Executing: err_R1V3PA_1 = geomAndNot(pad_b geomEnclose(pad_b via3CON))

Executing: processAntenna((pad_b (gate (sum pad_b)) (antenna (sum via3CON)) (keep < 0.05))
running in speedup mode

Executing: err_R1V3PA = geomOr(err_R1V3PA_1 err_R1V3PA_2)
	   errorLayer(err_R1V3PA "R1V3PA : Minimum ratio of VIA3 (in pad) area to PAD area = 0.05")

Executing: err_R1VLPA_1 = geomAndNot(pad_b geomEnclose(pad_b vtpl))

Executing: processAntenna((pad_b (gate (sum pad_b)) (antenna (sum vtpl)) (keep < 0.05))
running in speedup mode

Executing: err_R1VLPA = geomOr(err_R1VLPA_1 err_R1VLPA_2)
	   errorLayer(err_R1VLPA "R1VLPA : Minimum ratio of VIATPL (in pad) area to PAD area = 0.05")

Executing: err_B15PA = geomAnd(pad_p vtpl)
	   errorLayer(err_B15PA "B15PA : Probe PAD with VIATPL is not allowed")

Executing: drc(pad_p vtpl (sep < 2.0) "S1PAVL : Minimum PAD spacing to VIATPL = 2.0")

Executing: bulk_cm = geomStraddle(bkgnd1 cm)

Executing: bulk_cm2 = geomStraddle(bkgnd1 cm2)

Executing: bulk_cm3 = geomStraddle(bkgnd1 cm3)

Executing: bulk_cmh = geomStraddle(bkgnd1 cmh)

Executing: bulk_cmh2 = geomStraddle(bkgnd1 cmh2)

Executing: bulk_cmh3 = geomStraddle(bkgnd1 cmh3)

Executing: bulk_cm23f = geomStraddle(bkgnd1 cm23f)

Executing: bulk_cm34f = geomStraddle(bkgnd1 cm34f)

Executing: bulk_cmh23f = geomStraddle(bkgnd1 cmh23f)

Executing: bulk_cmh34f = geomStraddle(bkgnd1 cmh34f)

Executing: bulk_m = geomOr(bulk_cm bulk_cm2 bulk_cm3 bulk_cm23f bulk_cm34f)

Executing: bulk_mh = geomOr(bulk_cmh bulk_cmh2 bulk_cmh3 bulk_cmh23f bulk_cmh34f)

Executing: err_B1CM = geomAndNot(cm bm)
	   errorLayer(err_B1CM "B1CM : CAPM without BM is not allowed")

Executing: err_B3CM = geomAnd(cm geomOr(geomOr(bulk_cm2 bulk_cm3 bulk_cm23f bulk_cm34f) ...
	   errorLayer(err_B3CM "B3CM : CAPM is not allowed when CAPM23F, CAPM34F, CAPMH, CAPMH23F, CAPMH34F, CAPM2, CAPMH2, CAPM3 or CAPMH3 is present")

Executing: err_W1CM = drc(cm (width < 2.0))
	   errorLayer(err_W1CM "W1CM : Minimum CAPM width = 2.0")

Executing: err_W2CM = geomGetBBox(cm (30 < length) outputInLayer)
	   errorLayer(err_W2CM "W2CM : Maximum CAPM bounding box size = 30.0 x 30.0")

Executing: drc(cm (sepNotch < 1.5) "S1CM : Minimum CAPM spacing/notch = 1.5")

Executing: drc(cm pad (sep < 10.0) "S1CMPA : Minimum CAPM spacing to PAD = 10.0")

Executing: drc(cm vtp (sep < 0.5) "S1CMVT : Minimum CAPM spacing to VIATP = 0.5")

Executing: drc(cm vtp (enc < 0.3) "E1CMVT : Minimum CAPM enclosure of VIATP = 0.3")

Executing: err_E1CMVT = geomStraddle(vtp cm)
	   errorLayer(err_E1CMVT "E1CMVT : Minimum CAPM enclosure of VIATP = 0.3")

Executing: drc(bm cm (enc < 0.5) "E1BMCM : Minimum BM enclosure of CAPM = 0.5")

Executing: drc(bm geomAnd(bm1 vtp) (enc < 0.15) "E1BMVT : Minimum BM enclosure of VIATP ...

Executing: drc(bm vian (enc < 0.15) "E1BMVN : Minimum BM enclosure of VIAn = 0.15")

Executing: drc(cm via3 (sep < 0.5) "S1CMVN : Minimum CAPM spacing to VIAn = 0.5")

Executing: err_B2CM = geomAnd(cm geomOr(via3 pad))
	   errorLayer(err_B2CM "B2CM : CAPM overlap of VIAn or PAD is not allowed")

Executing: drc(vtpcm (sep < 2.0) "S3VT : Minimum VIATP spacing on CAPM = 2.0")

Executing: err_Q1VT_1 = geomAndNot(cm geomEnclose(cm vtpcm))

Executing: err_Q1VT_2 = drc(vtpcm cm (coverage < 0.01))
Skip! Boundary layer has no shape

Executing: err_Q1VT = geomOr(err_Q1VT_1 err_Q1VT_2)
	   errorLayer(err_Q1VT "Q1VT : Recommended minimum ratio of VIATP to CAPM area = 1%")

Executing: err_B1CH = geomAndNot(cmh bmh)
	   errorLayer(err_B1CH "B1CH : CAPMH without BM is not allowed")

Executing: err_B3CH = geomAnd(cmh geomOr(geomOr(bulk_cmh2 bulk_cmh3 bulk_cmh23f bulk_cmh...
	   errorLayer(err_B3CH "B3CH : CAPMH is not allowed when CAPM, CAPM23F, CAPM34F, CAPMH23F, CAPMH34F, CAPM2, CAPMH2, CAPM3 or CAPMH3 is present")

Executing: err_W1CH = drc(cmh (width < 2.0))
	   errorLayer(err_W1CH "W1CH : Minimum CAPMH width = 2.0")

Executing: err_W2CH = geomGetBBox(cmh (30 < length) outputInLayer)
	   errorLayer(err_W2CH "W2CH : Maximum CAPMH bounding box size = 30.0 x 30.0")

Executing: drc(cmh (sepNotch < 1.5) "S1CH : Minimum CAPMH spacing/notch = 1.5")

Executing: drc(cmh pad (sep < 10.0) "S1CHPA : Minimum CAPMH spacing to PAD = 10.0")

Executing: drc(cmh vtp (sep < 0.5) "S1CHVT : Minimum CAPMH spacing to VIATP = 0.5")

Executing: drc(cmh vtp (enc < 0.3) "E1CHVT : Minimum CAPMH enclosure of VIATP = 0.3")

Executing: err_E1CHVT = geomStraddle(vtp cmh)
	   errorLayer(err_E1CHVT "E1CHVT : Minimum CAPMH enclosure of VIATP = 0.3")

Executing: drc(bmh cmh (enc < 0.5) "E1BMCH : Minimum BM enclosure of CAPMH = 0.5")

Executing: drc(bmh geomAnd(bmh1 vtp) (enc < 0.15) "E2BMVT : Minimum BM enclosure of VIAT...

Executing: drc(bmh vian (enc < 0.15) "E2BMVN : Minimum BM enclosure of VIAn = 0.15")

Executing: drc(cmh via3 (sep < 0.5) "S1CHVN : Minimum CAPMH spacing to VIAn = 0.5")

Executing: err_B2CH = geomAnd(cmh geomOr(via3 pad))
	   errorLayer(err_B2CH "B2CH : CAPMH overlap of VIAn or PAD is not allowed")

Executing: drc(vtpcmh (sep < 2.0) "S4VT : Minimum VIATP spacing on CAPMH = 2.0")

Executing: err_Q4VT = drc(vtpcmh cmh (coverage < 0.01))
	   errorLayer(err_Q4VT "Q4VT : Recommended minimum ratio of VIATP to CAPMH area = 1%")
Skip! Boundary layer has no shape

Executing: err_B1DM = geomAnd(cm2 geomOr(geomOr(bulk_cm bulk_cm3 bulk_cm23f bulk_cm34f) ...
	   errorLayer(err_B1DM "B1DM : CAPM2 is not allowed when CAPM, CAPM23F, CAPM34F, CAPMH, CAPMH23F, CAPMH34F, CAPMH2, CAPM3 or CAPMH3 is present")

Executing: err_B2DMa = geomAndNot(cm2 met2trm)

Executing: err_B2DMb = geomAndNot(cm2 met3trm)

Executing: err_B2DM = geomOr(err_B2DMa err_B2DMb)
	   errorLayer(err_B2DM "B2DM : CAPM2 must be enclosed by MET2 and MET3")

Executing: err_B3DM = geomAnd(cm2 geomOr(via1 pad))
	   errorLayer(err_B3DM "B3DM : CAPM2 must not be over VIA1 or PAD")

Executing: err_B4DM = geomOutside(cm2 via2)
	   errorLayer(err_B4DM "B4DM : CAPM2 without VIA2 is not allowed")

Executing: err_Q1V2 = drc(v2cm2 m3_dmm (coverage < 0.01))
	   errorLayer(err_Q1V2 "Q1V2 : Recommended minimum ratio of VIA2 to CAPM2 area = 1%")
Skip! Boundary layer has no shape

Executing: err_W1DM = drc(cm2 (width < 2.0))
	   errorLayer(err_W1DM "W1DM : Minimum CAPM2 width = 2.0")

Executing: err_W2DM = geomGetBBox(cm2 (30 < length) outputInLayer)
	   errorLayer(err_W2DM "W2DM : Maximum CAPM2 bounding box size = 30.0 x 30.0")

Executing: drc(cm2 (sepNotch < 1.5) "S1DM : Minimum CAPM2 spacing / notch = 1.5")

Executing: drc(cm2 pad (sep < 10.0) "S1DMPA : Minimum CAPM2 spacing to PAD = 10.0")

Executing: drc(cm2 via1 (sep < 0.5) "S1DMV1 : Minimum CAPM2 spacing to VIA1 = 0.5")

Executing: drc(cm2 via2 (sep < 0.5) "S1DMV2 : Minimum CAPM2 spacing to VIA2 = 0.5")

Executing: drc(cm2 via2 (enc < 0.3) "E1DMV2 : Minimum CAPM2 enclosure of VIA2 = 0.3")

Executing: err_E1DMV2 = geomStraddle(via2 cm2)
	   errorLayer(err_E1DMV2 "E1DMV2 : Minimum CAPM2 enclosure of VIA2 = 0.3")

Executing: drc(met2 cm2 (enc < 0.5) "E1M2DM : Minimum MET2 enclosure of CAPM2 = 0.5")

Executing: drc(met3 cm2 (enc < 0.5) "E1M3DM : Minimum MET3 enclosure of CAPM2 = 0.5")

Executing: cm2_s = geomAndNot(geomSize(cm2 2.5) cm2)

Executing: dmm_m2 = geomButtOrOver(geomAnd(cm2_s met2) cm2)

Executing: dmm_m3 = geomButtOrOver(geomAnd(cm2_s met3) cm2)

Executing: dmm_m2v1 = geomAnd(dmm_m2 via1)

Executing: dmm_m2v2 = geomAnd(dmm_m2 via2)

Executing: dmm_m3v2 = geomAnd(dmm_m3 via2)

Executing: drc(met2 dmm_m2v1 (enc < 0.15) "E3M2V1 : Minimum MET2 enclosure of VIA1 = 0.15")

Executing: drc(met2 dmm_m2v2 (enc < 0.15) "E4M2V2 : Minimum MET2 enclosure of VIA2 = 0.15")

Executing: drc(met3 dmm_m3v2 (enc < 0.15) "E4M3V2 : Minimum MET3 enclosure of VIA2 = 0.15")

Executing: drc(geomAnd(cm2 via2) (sep < 2.0) "S3V2 : Minimum VIA2 spacing on CAPM2 = 2.0")

Executing: geomStamp(m2_dmm met2trm)

Executing: err_B7DM = geomOutside(cm2 via3)
	   errorLayer(err_B7DM "B7DM : CAPM2 without VIA3 is not allowed")

Executing: m4_dm1 = geomInside(cm2 met4trm)

Executing: geomStamp(m4_dm1 met4trm)

Executing: m4_dm = geomOverlap(m4_dm1 m2_dmm sameNet)

Executing: err_B8DM = geomAndNot(cm2 m4_dm)
	   errorLayer(err_B8DM "B8DM : MET2 and MET4 must be connected (CAPM2 must be enclosed by MET4)")

Executing: err_Q1V3 = drc(v3cm2 m4_dmm (coverage < 0.01))
	   errorLayer(err_Q1V3 "Q1V3 : Recommended minimum ratio of VIA3 to CAPM2 area = 1%")
Skip! Boundary layer has no shape

Executing: drc(cm2 via3 (sep < 0.5) "S1DMV3 : Minimum CAPM2 spacing to VIA3 = 0.5")

Executing: drc(cm2 via3 (enc < 0.3) "E1DMV3 : Minimum CAPM2 enclosure of VIA3 = 0.3")

Executing: err_E1DMV3 = geomStraddle(via3 cm2)
	   errorLayer(err_E1DMV3 "E1DMV3 : Minimum CAPM2 enclosure of VIA3 = 0.3")

Executing: dmm_m3v3 = geomAnd(dmm_m3 via3)

Executing: drc(met3 dmm_m3v3 (enc < 0.15) "E4M3V3 : Minimum MET3 enclosure of VIA3 = 0.15")

Executing: drc(geomAnd(cm2 via3) (sep < 2.0) "S3V3 : Minimum VIA3 spacing on CAPM2 = 2.0")

Executing: err_B1TM = geomAnd(cm3 geomOr(geomOr(bulk_cm bulk_cm2 bulk_cm23f bulk_cm34f) ...
	   errorLayer(err_B1TM "B1TM : CAPM3 is not allowed when CAPM, CAPM23F, CAPM34F, CAPMH, CAPMH23F, CAPMH34F, CAPM2, CAPMH2 or CAPMH3 is present")

Executing: err_B2TMa = geomAndNot(cm3 met2trm)

Executing: err_B2TMb = geomAndNot(cm3 met3trm)

Executing: err_B2TMc = geomAndNot(cm3 met4trm)

Executing: err_B2TM = geomOr(err_B2TMa err_B2TMb err_B2TMc)
	   errorLayer(err_B2TM "B2TM : CAPM3 must be enclosed by MET2, MET3 and MET4")

Executing: err_B3TM = geomAnd(cm3 geomOr(via1 pad))
	   errorLayer(err_B3TM "B3TM : CAPM3 must not be over VIA1 or PAD")

Executing: err_B4TMa = geomOutside(cm3 via2)

Executing: err_B4TMb = geomOutside(cm3 via3)

Executing: err_B4TM = geomOr(err_B4TMa err_B4TMb)
	   errorLayer(err_B4TM "B4TM : CAPM3 without VIA2 or VIA3 is not allowed")

Executing: geomStamp(m2_tmm met2trm)

Executing: m4_tm = geomOverlap(m4_tmm m2_tmm sameNet)

Executing: err_B5TM = geomAndNot(cm3 m4_tm)
	   errorLayer(err_B5TM "B5TM : MET2 and MET4 must be connected")

Executing: err_Q2V2 = drc(v2cm3 m3_tmm (coverage < 0.01))
	   errorLayer(err_Q2V2 "Q2V2 : Recommended minimum ratio of VIA2 to CAPM3 area = 1%")
Skip! Boundary layer has no shape

Executing: err_Q2V3 = drc(v3cm3 m4_tmm (coverage < 0.01))
	   errorLayer(err_Q2V3 "Q2V3 : Recommended minimum ratio of VIA3 to CAPM3 area = 1%")
Skip! Boundary layer has no shape

Executing: err_W1TM = drc(cm3 (width < 2.0))
	   errorLayer(err_W1TM "W1TM : Minimum CAPM3 width = 2.0")

Executing: err_W2TM = geomGetBBox(cm3 (30 < length) outputInLayer)
	   errorLayer(err_W2TM "W2TM : Maximum CAPM3 bounding box size = 30.0 x 30.0")

Executing: drc(cm3 (sepNotch < 1.5) "S1TM : Minimum CAPM3 spacing / notch = 1.5")

Executing: drc(cm3 pad (sep < 10.0) "S1TMPA : Minimum CAPM3 spacing to PAD = 10.0")

Executing: drc(cm3 via1 (sep < 0.5) "S1TMV1 : Minimum CAPM3 spacing to VIA1 = 0.5")

Executing: drc(cm3 via2 (sep < 0.5) "S1TMV2 : Minimum CAPM3 spacing to VIA2 = 0.5")

Executing: drc(cm3 via3 (sep < 0.5) "S1TMV3 : Minimum CAPM3 spacing to VIA3 = 0.5")

Executing: drc(cm3 via2 (enc < 0.3) "E1TMV2 : Minimum CAPM3 enclosure of VIA2 = 0.3")

Executing: err_E1TMV2 = geomStraddle(via2 cm3)
	   errorLayer(err_E1TMV2 "E1TMV2 : Minimum CAPM3 enclosure of VIA2 = 0.3")

Executing: drc(cm3 via3 (enc < 0.3) "E1TMV3 : Minimum CAPM3 enclosure of VIA3 = 0.3")

Executing: err_E1TMV3 = geomStraddle(via3 cm3)
	   errorLayer(err_E1TMV3 "E1TMV3 : Minimum CAPM3 enclosure of VIA3 = 0.3")

Executing: drc(met2 cm3 (enc < 0.5) "E1M2TM : Minimum MET2 enclosure of CAPM3 = 0.5")

Executing: drc(met3 cm3 (enc < 0.5) "E1M3TM : Minimum MET3 enclosure of CAPM3 = 0.5")

Executing: drc(met4 cm3 (enc < 0.5) "E1M4TM : Minimum MET4 enclosure of CAPM3 = 0.5")

Executing: cm3_s = geomAndNot(geomSize(cm3 2.5) cm3)

Executing: tmm_m2 = geomButtOrOver(geomAnd(cm3_s met2) cm3)

Executing: tmm_m3 = geomButtOrOver(geomAnd(cm3_s met3) cm3)

Executing: tmm_m4 = geomButtOrOver(geomAnd(cm3_s met4) cm3)

Executing: tmm_m2v1 = geomAnd(tmm_m2 via1)

Executing: tmm_m2v2 = geomAnd(tmm_m2 via2)

Executing: tmm_m3v2 = geomAnd(tmm_m3 via2)

Executing: tmm_m3v3 = geomAnd(tmm_m3 via3)

Executing: tmm_m4v3 = geomAnd(tmm_m4 via3)

Executing: drc(met2 tmm_m2v1 (enc < 0.15) "E4M2V1 : Minimum MET2 enclosure of VIA1 = 0.15")

Executing: drc(met2 tmm_m2v2 (enc < 0.15) "E5M2V2 : Minimum MET2 enclosure of VIA2 = 0.15")

Executing: drc(met3 tmm_m3v2 (enc < 0.15) "E5M3V2 : Minimum MET3 enclosure of VIA2 = 0.15")

Executing: drc(met3 tmm_m3v3 (enc < 0.15) "E5M3V3 : Minimum MET3 enclosure of VIA3 = 0.15")

Executing: drc(met4 tmm_m4v3 (enc < 0.15) "E3M4V3 : Minimum MET4 enclosure of VIA3 = 0.15")

Executing: drc(geomAnd(cm3 via2) (sep < 2.0) "S4V2 : Minimum VIA2 spacing on CAPM3 = 2.0")

Executing: drc(geomAnd(cm3 via3) (sep < 2.0) "S4V3 : Minimum VIA3 spacing on CAPM3 = 2.0")

Executing: err_B6TM = geomOutside(cm3 vtp)
	   errorLayer(err_B6TM "B6TM : CAPM3 without VIATP is not allowed")

Executing: mt_tm1 = geomInside(cm3 mtptrm)

Executing: geomStamp(mt_tm1 mtptrm)

Executing: mt_tm = geomOverlap(mt_tm1 m3_tmm sameNet)

Executing: err_B7TM = geomAndNot(cm3 mt_tm)
	   errorLayer(err_B7TM "B7TM : MET3 and METTP must be connected (CAPM3 must be enclosed by METTP)")

Executing: err_Q3VT = drc(vtpcm3 mt_tmm (coverage < 0.01))
	   errorLayer(err_Q3VT "Q3VT : Recommended minimum ratio of VIATP to CAPM3 area = 1%")
Skip! Boundary layer has no shape

Executing: drc(cm3 vtp (sep < 0.5) "S1TMVT : Minimum CAPM3 spacing to VIATP = 0.5")

Executing: drc(cm3 vtp (enc < 0.3) "E1TMVT : Minimum CAPM3 enclosure of VIATP = 0.3")

Executing: err_E1TMVT = geomStraddle(vtp cm3)
	   errorLayer(err_E1TMVT "E1TMVT : Minimum CAPM3 enclosure of VIATP = 0.3")

Executing: tmm_m4vt = geomAnd(tmm_m4 vtp)

Executing: drc(met4 tmm_m4vt (enc < 0.15) "E4M4VT : Minimum MET4 enclosure of VIATP = 0....

Executing: drc(geomAnd(cm3 vtp) (sep < 2.0) "S6VT : Minimum VIATP spacing on CAPM3 = 2.0")

Executing: err_B1DH = geomAnd(cmh2 geomOr(geomOr(bulk_cmh bulk_cmh3 bulk_cmh23f bulk_cmh...
	   errorLayer(err_B1DH "B1DH : CAPMH2 is not allowed when CAPM, CAPM23F, CAPM34F, CAPMH, CAPMH23F, CAPMH34F, CAPM2, CAPM3 or CAPMH3 is present")

Executing: err_B2DHa = geomAndNot(cmh2 met2trm)

Executing: err_B2DHb = geomAndNot(cmh2 met3trm)

Executing: err_B2DH = geomOr(err_B2DHa err_B2DHb)
	   errorLayer(err_B2DH "B2DH : CAPMH2 must be enclosed by MET2 and MET3")

Executing: err_B3DH = geomAnd(cmh2 geomOr(via1 pad))
	   errorLayer(err_B3DH "B3DH : CAPMH2 must not be over VIA1 or PAD")

Executing: err_B4DH = geomOutside(cmh2 via2)
	   errorLayer(err_B4DH "B4DH : CAPMH2 without VIA2 is not allowed")

Executing: err_Q5V2 = drc(v2cmh2 m3_dmmh (coverage < 0.01))
	   errorLayer(err_Q5V2 "Q5V2 : Recommended minimum ratio of VIA2 to CAPMH2 area = 1%")
Skip! Boundary layer has no shape

Executing: err_W1DH = drc(cmh2 (width < 2.0))
	   errorLayer(err_W1DH "W1DH : Minimum CAPMH2 width = 2.0")

Executing: err_W2DH = geomGetBBox(cmh2 (30 < length) outputInLayer)
	   errorLayer(err_W2DH "W2DH : Maximum CAPMH2 bounding box size = 30.0 x 30.0")

Executing: drc(cmh2 (sepNotch < 1.5) "S1DH : Minimum CAPMH2 spacing / notch = 1.5")

Executing: drc(cmh2 pad (sep < 10.0) "S1DHPA : Minimum CAPMH2 spacing to PAD = 10.0")

Executing: drc(cmh2 via1 (sep < 0.5) "S1DHV1 : Minimum CAPMH2 spacing to VIA1 = 0.5")

Executing: drc(cmh2 via2 (sep < 0.5) "S1DHV2 : Minimum CAPMH2 spacing to VIA2 = 0.5")

Executing: drc(cmh2 via2 (enc < 0.3) "E1DHV2 : Minimum CAPMH2 enclosure of VIA2 = 0.3")

Executing: err_E1DHV2 = geomStraddle(via2 cmh2)
	   errorLayer(err_E1DHV2 "E1DHV2 : Minimum CAPMH2 enclosure of VIA2 = 0.3")

Executing: drc(met2 cmh2 (enc < 0.5) "E1M2DH : Minimum MET2 enclosure of CAPMH2 = 0.5")

Executing: drc(met3 cmh2 (enc < 0.5) "E1M3DH : Minimum MET3 enclosure of CAPMH2 = 0.5")

Executing: cmh2_s = geomAndNot(geomSize(cmh2 2.5) cmh2)

Executing: dmmh_m2 = geomButtOrOver(geomAnd(cmh2_s met2) cmh2)

Executing: dmmh_m3 = geomButtOrOver(geomAnd(cmh2_s met3) cmh2)

Executing: dmmh_m2v1 = geomAnd(dmmh_m2 via1)

Executing: dmmh_m2v2 = geomAnd(dmmh_m2 via2)

Executing: dmmh_m3v2 = geomAnd(dmmh_m3 via2)

Executing: drc(met2 dmmh_m2v1 (enc < 0.15) "E3M2V1 : Minimum MET2 enclosure of VIA1 = 0....

Executing: drc(met2 dmmh_m2v2 (enc < 0.15) "E4M2V2 : Minimum MET2 enclosure of VIA2 = 0....

Executing: drc(met3 dmmh_m3v2 (enc < 0.15) "E4M3V2 : Minimum MET3 enclosure of VIA2 = 0....

Executing: drc(geomAnd(cmh2 via2) (sep < 2.0) "S7V2 : Minimum VIA2 spacing on CAPMH2 = 2...

Executing: geomStamp(m2_dmmh met2trm)

Executing: err_B7DH = geomOutside(cmh2 via3)
	   errorLayer(err_B7DH "B7DH : CAPMH2 without VIA3 is not allowed")

Executing: m4_dmh1 = geomInside(cmh2 met4trm)

Executing: geomStamp(m4_dmh1 met4trm)

Executing: m4_dmh = geomOverlap(m4_dmh1 m2_dmmh sameNet)

Executing: err_B8DH = geomAndNot(cmh2 m4_dmh)
	   errorLayer(err_B8DH "B8DH : MET2 and MET4 must be connected (CAPMH2 must be enclosed by MET4)")

Executing: err_Q5V3 = drc(v3cmh2 m4_dmmh (coverage < 0.01))
	   errorLayer(err_Q5V3 "Q5V3 : Recommended minimum ratio of VIA3 to CAPMH2 area = 1%")
Skip! Boundary layer has no shape

Executing: drc(cmh2 via3 (sep < 0.5) "S1DHV3 : Minimum CAPMH2 spacing to VIA3 = 0.5")

Executing: drc(cmh2 via3 (enc < 0.3) "E1DHV3 : Minimum CAPMH2 enclosure of VIA3 = 0.3")

Executing: err_E1DHV3 = geomStraddle(via3 cmh2)
	   errorLayer(err_E1DHV3 "E1DHV3 : Minimum CAPMH2 enclosure of VIA3 = 0.3")

Executing: dmmh_m3v3 = geomAnd(dmmh_m3 via3)

Executing: drc(met3 dmmh_m3v3 (enc < 0.15) "E4M3V3 : Minimum MET3 enclosure of VIA3 = 0....

Executing: drc(geomAnd(cmh2 via3) (sep < 2.0) "S7V3 : Minimum VIA3 spacing on CAPMH2 = 2...

Executing: err_B1TH = geomAnd(cmh3 geomOr(geomOr(bulk_cmh bulk_cmh2 bulk_cmh23f bulk_cmh...
	   errorLayer(err_B1TH "B1TH : CAPMH3 is not allowed when CAPM, CAPM23F, CAPM34F, CAPMH, CAPMH23F, CAPMH34F, CAPM2, CAPMH2 or CAPM3 is present")

Executing: err_B2THa = geomAndNot(cmh3 met2trm)

Executing: err_B2THb = geomAndNot(cmh3 met3trm)

Executing: err_B2THc = geomAndNot(cmh3 met4trm)

Executing: err_B2TH = geomOr(err_B2THa err_B2THb err_B2THc)
	   errorLayer(err_B2TH "B2TH : CAPMH3 must be enclosed by MET2, MET3 and MET4")

Executing: err_B3TH = geomAnd(cmh3 geomOr(via1 pad))
	   errorLayer(err_B3TH "B3TH : CAPMH3 must not be over VIA1 or PAD")

Executing: err_B4THa = geomOutside(cmh3 via2)

Executing: err_B4THb = geomOutside(cmh3 via3)

Executing: err_B4TH = geomOr(err_B4THa err_B4THb)
	   errorLayer(err_B4TH "B4TH : CAPMH3 without VIA2 or VIA3 is not allowed")

Executing: geomStamp(m2_tmmh met2trm)

Executing: m4_tmh = geomOverlap(m4_tmmh m2_tmmh sameNet)

Executing: err_B5TH = geomAndNot(cmh3 m4_tmh)
	   errorLayer(err_B5TH "B5TH : MET2 and MET4 must be connected")

Executing: err_Q6V2 = drc(v2cmh3 m3_tmmh (coverage < 0.01))
	   errorLayer(err_Q6V2 "Q6V2 : Recommended minimum ratio of VIA2 to CAPMH3 area = 1%")
Skip! Boundary layer has no shape

Executing: err_Q6V3 = drc(v3cmh3 m4_tmmh (coverage < 0.01))
	   errorLayer(err_Q6V3 "Q6V3 : Recommended minimum ratio of VIA3 to CAPMH3 area = 1%")
Skip! Boundary layer has no shape

Executing: err_W1TH = drc(cmh3 (width < 2.0))
	   errorLayer(err_W1TH "W1TH : Minimum CAPMH3 width = 2.0")

Executing: err_W2TH = geomGetBBox(cmh3 (30 < length) outputInLayer)
	   errorLayer(err_W2TH "W2TH : Maximum CAPMH3 bounding box size = 30.0 x 30.0")

Executing: drc(cmh3 (sepNotch < 1.5) "S1TH : Minimum CAPMH3 spacing / notch = 1.5")

Executing: drc(cmh3 pad (sep < 10.0) "S1THPA : Minimum CAPMH3 spacing to PAD = 10.0")

Executing: drc(cmh3 via1 (sep < 0.5) "S1THV1 : Minimum CAPMH3 spacing to VIA1 = 0.5")

Executing: drc(cmh3 via2 (sep < 0.5) "S1THV2 : Minimum CAPMH3 spacing to VIA2 = 0.5")

Executing: drc(cmh3 via3 (sep < 0.5) "S1THV3 : Minimum CAPMH3 spacing to VIA3 = 0.5")

Executing: drc(cmh3 via2 (enc < 0.3) "E1THV2 : Minimum CAPMH3 enclosure of VIA2 = 0.3")

Executing: err_E1THV2 = geomStraddle(via2 cmh3)
	   errorLayer(err_E1THV2 "E1THV2 : Minimum CAPMH3 enclosure of VIA2 = 0.3")

Executing: drc(cmh3 via3 (enc < 0.3) "E1THV3 : Minimum CAPMH3 enclosure of VIA3 = 0.3")

Executing: err_E1THV3 = geomStraddle(via3 cmh3)
	   errorLayer(err_E1THV3 "E1THV3 : Minimum CAPMH3 enclosure of VIA3 = 0.3")

Executing: drc(met2 cmh3 (enc < 0.5) "E1M2TH : Minimum MET2 enclosure of CAPMH3 = 0.5")

Executing: drc(met3 cmh3 (enc < 0.5) "E1M3TH : Minimum MET3 enclosure of CAPMH3 = 0.5")

Executing: drc(met4 cmh3 (enc < 0.5) "E1M4TH : Minimum MET4 enclosure of CAPMH3 = 0.5")

Executing: cmh3_s = geomAndNot(geomSize(cmh3 2.5) cmh3)

Executing: tmmh_m2 = geomButtOrOver(geomAnd(cmh3_s met2) cmh3)

Executing: tmmh_m3 = geomButtOrOver(geomAnd(cmh3_s met3) cmh3)

Executing: tmmh_m4 = geomButtOrOver(geomAnd(cmh3_s met4) cmh3)

Executing: tmmh_m2v1 = geomAnd(tmmh_m2 via1)

Executing: tmmh_m2v2 = geomAnd(tmmh_m2 via2)

Executing: tmmh_m3v2 = geomAnd(tmmh_m3 via2)

Executing: tmmh_m3v3 = geomAnd(tmmh_m3 via3)

Executing: tmmh_m4v3 = geomAnd(tmmh_m4 via3)

Executing: drc(met2 tmmh_m2v1 (enc < 0.15) "E4M2V1 : Minimum MET2 enclosure of VIA1 = 0....

Executing: drc(met2 tmmh_m2v2 (enc < 0.15) "E5M2V2 : Minimum MET2 enclosure of VIA2 = 0....

Executing: drc(met3 tmmh_m3v2 (enc < 0.15) "E5M3V2 : Minimum MET3 enclosure of VIA2 = 0....

Executing: drc(met3 tmmh_m3v3 (enc < 0.15) "E5M3V3 : Minimum MET3 enclosure of VIA3 = 0....

Executing: drc(met4 tmmh_m4v3 (enc < 0.15) "E3M4V3 : Minimum MET4 enclosure of VIA3 = 0....

Executing: drc(geomAnd(cmh3 via2) (sep < 2.0) "S8V2 : Minimum VIA2 spacing on CAPMH3 = 2...

Executing: drc(geomAnd(cmh3 via3) (sep < 2.0) "S8V3 : Minimum VIA3 spacing on CAPMH3 = 2...

Executing: err_B6TH = geomOutside(cmh3 vtp)
	   errorLayer(err_B6TH "B6TH : CAPMH3 without VIATP is not allowed")

Executing: mt_tmh1 = geomInside(cmh3 mtptrm)

Executing: geomStamp(mt_tmh1 mtptrm)

Executing: mt_tmh = geomOverlap(mt_tmh1 m3_tmmh sameNet)

Executing: err_B7TH = geomAndNot(cmh3 mt_tmh)
	   errorLayer(err_B7TH "B7TH : MET3 and METTP must be connected (CAPMH3 must be enclosed by METTP)")

Executing: err_Q6VT = drc(vtpcmh3 mt_tmmh (coverage < 0.01))
	   errorLayer(err_Q6VT "Q6VT : Recommended minimum ratio of VIATP to CAPMH3 area = 1%")
Skip! Boundary layer has no shape

Executing: drc(cmh3 vtp (sep < 0.5) "S1THVT : Minimum CAPMH3 spacing to VIATP = 0.5")

Executing: drc(cmh3 vtp (enc < 0.3) "E1THVT : Minimum CAPMH3 enclosure of VIATP = 0.3")

Executing: err_E1THVT = geomStraddle(vtp cmh3)
	   errorLayer(err_E1THVT "E1THVT : Minimum CAPMH3 enclosure of VIATP = 0.3")

Executing: tmmh_m4vt = geomAnd(tmmh_m4 vtp)

Executing: drc(met4 tmmh_m4vt (enc < 0.15) "E4M4VT : Minimum MET4 enclosure of VIATP = 0...

Executing: drc(geomAnd(cmh3 vtp) (sep < 2.0) "S8VT : Minimum VIATP spacing on CAPMH3 = 2...

Executing: err_B3C3 = geomAnd(cm23f geomOr(geomOr(bulk_cm bulk_cm2 bulk_cm3 bulk_cm34f) ...
	   errorLayer(err_B3C3 "B3C3 : CAPM23F is not allowed when CAPM, CAPM34F, CAPMH, CAPMH23F, CAPMH34F, CAPM2, CAPMH2, CAPM3 or CAPMH3 is present")

Executing: err_B2C3 = geomAnd(cm23f geomOr(via1 pad))
	   errorLayer(err_B2C3 "B2C3 : CAPM23F overlap of VIA1 or PAD is not allowed")

Executing: err_B1C3 = geomAndNot(cm23f met2)
	   errorLayer(err_B1C3 "B1C3 : CAPM23F without MET2 is not allowed")

Executing: err_W1C3 = drc(cm23f (width < 2.0))
	   errorLayer(err_W1C3 "W1C3 : Minimum CAPM23F width = 2.0")

Executing: err_W2C3 = geomGetBBox(cm23f (30 < length) outputInLayer)
	   errorLayer(err_W2C3 "W2C3 : Maximum CAPM23F bounding box size = 30.0 x 30.0")

Executing: drc(cm23f (sepNotch < 1.5) "S1C3 : Minimum CAPM23F spacing/notch = 1.5")

Executing: drc(cm23f pad (sep < 10.0) "S1C3PA : Minimum CAPM23F spacing to PAD = 10.0")

Executing: drc(cm23f via1 (sep < 0.5) "S1C3V1 : Minimum CAPM23F spacing to VIA1 = 0.5")

Executing: drc(cm23f via2 (sep < 0.5) "S1C3V2 : Minimum CAPM23F spacing to VIA2 = 0.5")

Executing: drc(cm23f via2 (enc < 0.3) "E1C3V2 : Minimum CAPM23F enclosure of VIA2 = 0.3")

Executing: err_E1C3V2 = geomStraddle(via2 cm23f)
	   errorLayer(err_E1C3V2 "E1C3V2 : Minimum CAPM23F enclosure of VIA2 = 0.3")

Executing: drc(bm23f geomAnd(bm23f1 via2) (enc < 0.15) "E6M2V2 : Minimum MET2 enclosure ...

Executing: err_S5V2 = drc(v2cm (sep < 2.0))
	   errorLayer(err_S5V2 "S5V2 : Minimum VIA2 spacing on CAPM23F = 2.0")

Executing: err_Q3V2 = drc(v2cm cm23f (coverage < 0.01))
	   errorLayer(err_Q3V2 "Q3V2 : Recommended minimum ratio of VIA2 to CAPM23F area = 1%")
Skip! Boundary layer has no shape

Executing: drc(bm23f cm23f (enc < 0.5) "E1M2C3 : Minimum MET2 enclosure of CAPM23F = 0.5")

Executing: drc(met2 geomInside(via1 bm23f1) (enc < 0.15) "E5M2V1 : Minimum MET2 enclosur...

Executing: err_B3C4 = geomAnd(cm34f geomOr(geomOr(bulk_cm bulk_cm2 bulk_cm3 bulk_cm23f) ...
	   errorLayer(err_B3C4 "B3C4 : CAPM34F is not allowed when CAPM, CAPM23F, CAPMH, CAPMH23F, CAPMH34F, CAPM2, CAPMH2, CAPM3 or CAPMH3 is present")

Executing: err_B2C4 = geomAnd(cm34f geomOr(via2 pad))
	   errorLayer(err_B2C4 "B2C4 : CAPM34F overlap of VIA2 or PAD is not allowed")

Executing: err_B1C4 = geomAndNot(cm34f met3)
	   errorLayer(err_B1C4 "B1C4 : CAPM34F without MET3 is not allowed")

Executing: err_W1C4 = drc(cm34f (width < 2.0))
	   errorLayer(err_W1C4 "W1C4 : Minimum CAPM34F width = 2.0")

Executing: err_W2C4 = geomGetBBox(cm34f (30 < length) outputInLayer)
	   errorLayer(err_W2C4 "W2C4 : Maximum CAPM34F bounding box size = 30.0 x 30.0")

Executing: drc(cm34f (sepNotch < 1.5) "S1C4 : Minimum CAPM34F spacing/notch = 1.5")

Executing: drc(cm34f pad (sep < 10.0) "S1C4PA : Minimum CAPM34F spacing to PAD = 10.0")

Executing: drc(cm34f via2 (sep < 0.5) "S1C4V2 : Minimum CAPM34F spacing to VIA2 = 0.5")

Executing: drc(cm34f via3 (sep < 0.5) "S1C4V3 : Minimum CAPM34F spacing to VIA3 = 0.5")

Executing: drc(cm34f via3 (enc < 0.3) "E1C4V3 : Minimum CAPM34F enclosure of VIA3 = 0.3")

Executing: err_E1C4V3 = geomStraddle(via3 cm34f)
	   errorLayer(err_E1C4V3 "E1C4V3 : Minimum CAPM34F enclosure of VIA3 = 0.3")

Executing: drc(bm34f geomAnd(bm34f1 via3) (enc < 0.15) "E6M3V3 : Minimum MET3 enclosure ...

Executing: err_S5V3 = drc(v3cm (sep < 2.0))
	   errorLayer(err_S5V3 "S5V3 : Minimum VIA3 spacing on CAPM34F = 2.0")

Executing: err_Q3V3 = drc(v3cm cm34f (coverage < 0.01))
	   errorLayer(err_Q3V3 "Q3V3 : Recommended minimum ratio of VIA3 to CAPM34F area = 1%")
Skip! Boundary layer has no shape

Executing: drc(bm34f cm34f (enc < 0.5) "E1M3C4 : Minimum MET3 enclosure of CAPM34F = 0.5")

Executing: drc(met3 geomInside(via2 bm34f1) (enc < 0.15) "E6M3V2 : Minimum MET3 enclosur...

Executing: err_B3H3 = geomAnd(cmh23f geomOr(geomOr(bulk_cmh bulk_cmh2 bulk_cmh3 bulk_cmh...
	   errorLayer(err_B3H3 "B3H3 : CAPMH23F is not allowed when CAPM, CAPM23F, CAPM34F, CAPMH, CAPMH34F, CAPM2, CAPMH2, CAPM3 or CAPMH3 is present")

Executing: err_B2H3 = geomAnd(cmh23f geomOr(via1 pad))
	   errorLayer(err_B2H3 "B2H3 : CAPMH23F overlap of VIA1 or PAD is not allowed")

Executing: err_B1H3 = geomAndNot(cmh23f met2)
	   errorLayer(err_B1H3 "B1H3 : CAPMH23F without MET2 is not allowed")

Executing: err_W1H3 = drc(cmh23f (width < 2.0))
	   errorLayer(err_W1H3 "W1H3 : Minimum CAPMH23F width = 2.0")

Executing: err_W2H3 = geomGetBBox(cmh23f (30 < length) outputInLayer)
	   errorLayer(err_W2H3 "W2H3 : Maximum CAPMH23F bounding box size = 30.0 x 30.0")

Executing: drc(cmh23f (sepNotch < 1.5) "S1H3 : Minimum CAPMH23F spacing/notch = 1.5")

Executing: drc(cmh23f pad (sep < 10.0) "S1H3PA : Minimum CAPMH23F spacing to PAD = 10.0")

Executing: drc(cmh23f via1 (sep < 0.5) "S1H3V1 : Minimum CAPMH23F spacing to VIA1 = 0.5")

Executing: drc(cmh23f via2 (sep < 0.5) "S1H3V2 : Minimum CAPMH23F spacing to VIA2 = 0.5")

Executing: drc(cmh23f via2 (enc < 0.3) "E1H3V2 : Minimum CAPMH23F enclosure of VIA2 = 0.3")

Executing: err_E1H3V2 = geomStraddle(via2 cmh23f)
	   errorLayer(err_E1H3V2 "E1H3V2 : Minimum CAPMH23F enclosure of VIA2 = 0.3")

Executing: drc(bmh23f geomAnd(bmh23f1 via2) (enc < 0.15) "E7M2V2 : Minimum MET2 enclosur...

Executing: err_S6V2 = drc(v2cmh (sep < 2.0))
	   errorLayer(err_S6V2 "S6V2 : Minimum VIA2 spacing on CAPMH23F = 2.0")

Executing: err_Q4V2 = drc(v2cmh cmh23f (coverage < 0.01))
	   errorLayer(err_Q4V2 "Q4V2 : Recommended minimum ratio of VIA2 to CAPMH23F area = 1%")
Skip! Boundary layer has no shape

Executing: drc(bmh23f cmh23f (enc < 0.5) "E1M2H3 : Minimum MET2 enclosure of CAPMH23F = ...

Executing: drc(met2 geomInside(via1 bmh23f1) (enc < 0.15) "E6M2V1 : Minimum MET2 enclosu...

Executing: err_B3H4 = geomAnd(cmh34f geomOr(geomOr(bulk_cmh bulk_cmh2 bulk_cmh3 bulk_cmh...
	   errorLayer(err_B3H4 "B3H4 : CAPMH34F is not allowed when CAPM, CAPM23F, CAPM34F, CAPMH, CAPMH23F, CAPM2, CAPMH2, CAPM3 or CAPMH3 is present")

Executing: err_B2H4 = geomAnd(cmh34f geomOr(via2 pad))
	   errorLayer(err_B2H4 "B2H4 : CAPMH34F overlap of VIA2 or PAD is not allowed")

Executing: err_B1H4 = geomAndNot(cmh34f met3)
	   errorLayer(err_B1H4 "B1H4 : CAPMH34F without MET3 is not allowed")

Executing: err_W1H4 = drc(cmh34f (width < 2.0))
	   errorLayer(err_W1H4 "W1H4 : Minimum CAPMH34F width = 2.0")

Executing: err_W2H4 = geomGetBBox(cmh34f (30 < length) outputInLayer)
	   errorLayer(err_W2H4 "W2H4 : Maximum CAPMH34F bounding box size = 30.0 x 30.0")

Executing: drc(cmh34f (sepNotch < 1.5) "S1H4 : Minimum CAPMH34F spacing/notch = 1.5")

Executing: drc(cmh34f pad (sep < 10.0) "S1H4PA : Minimum CAPMH34F spacing to PAD = 10.0")

Executing: drc(cmh34f via2 (sep < 0.5) "S1H4V2 : Minimum CAPMH34F spacing to VIA2 = 0.5")

Executing: drc(cmh34f via3 (sep < 0.5) "S1H4V3 : Minimum CAPMH34F spacing to VIA3 = 0.5")

Executing: drc(cmh34f via3 (enc < 0.3) "E1H4V3 : Minimum CAPMH34F enclosure of VIA3 = 0.3")

Executing: err_E1H4V3 = geomStraddle(via3 cmh34f)
	   errorLayer(err_E1H4V3 "E1H4V3 : Minimum CAPMH34F enclosure of VIA3 = 0.3")

Executing: drc(bmh34f geomAnd(bmh34f1 via3) (enc < 0.15) "E7M3V3 : Minimum MET3 enclosur...

Executing: err_S6V3 = drc(v3cmh (sep < 2.0))
	   errorLayer(err_S6V3 "S6V3 : Minimum VIA3 spacing on CAPMH34F = 2.0")

Executing: err_Q4V3 = drc(v3cmh cmh34f (coverage < 0.01))
	   errorLayer(err_Q4V3 "Q4V3 : Recommended minimum ratio of VIA3 to CAPMH34F area = 1%")
Skip! Boundary layer has no shape

Executing: drc(bmh34f cmh34f (enc < 0.5) "E1M3H4 : Minimum MET3 enclosure of CAPMH34F = ...

Executing: drc(met3 geomInside(via2 bmh34f1) (enc < 0.15) "E7M3V2 : Minimum MET3 enclosu...

Executing: err_B1LV = geomAnd(lvt geomOr(pwblk mv gxh nbd pbd hnw dnc dpc pdd sci depl))
	   errorLayer(err_B1LV "B1LV : LVT overlap of PWBLK,MV,HVGOX,HVNWELL,HVPWELL,HNW,DNC,DPC,PDD,SCI or DEPL is not allowed")

Executing: err_B2LV = geomAnd(lvt geomOr(resnwell1 ndifres_1 pdifres_1 pnp2 pnp5 pnp10 q...
	   errorLayer(err_B2LV "B2LV : LVT overlap of rnw, rdn, rdp, qpva, qpvb, qpvc, qnvba or qnvb is not allowed")

Executing: lvtgate = geomAnd(gate lvt)

Executing: err_E1LVGA = drc(lvt lvtgate (enc < 0.35))
	   errorLayer(err_E1LVGA "E1LVGA : Minimum LVT enclosure of GATE = 0.35")

Executing: err_E2LVGA = drc(lvt geomGetEdge(lvtgate inside diff) (enc < 0.46))
	   errorLayer(err_E2LVGA "E2LVGA : Minimum LVT enclosure of GATE = 0.46")

Executing: err_S1LVGA = drc(lvt gate (sep < 0.35))
	   errorLayer(err_S1LVGA "S1LVGA : Minimum LVT spacing to GATE = 0.35")

Executing: err_S2LVGA = drc(lvt geomGetEdge(gate inside diff) (sep < 0.46))
	   errorLayer(err_S2LVGA "S2LVGA : Minimum LVT spacing to GATE = 0.46")

Executing: err_S1LVHN = drc(lvt nbd (sep < 3.0))
	   errorLayer(err_S1LVHN "S1LVHN : Minimum LVT spacing to HVNWELL = 3.0")

Executing: err_S1LVHP = drc(lvt pbd (sep < 3.0))
	   errorLayer(err_S1LVHP "S1LVHP : Minimum LVT spacing to HVPWELL = 3.0")

Executing: err_S1LVWM = drc(lvt dnwellmv (sep < 3.5))
	   errorLayer(err_S1LVWM "S1LVWM : Minimum LVT spacing to DNWELLMV = 3.5")

Executing: err_S1LVWD = drc(lvt dnwelldg (sep < 10.0))
	   errorLayer(err_S1LVWD "S1LVWD : Minimum LVT spacing to DNWELL = 10.0")

Executing: err_S1LVHW = drc(lvt hnw (sep < 10.0))
	   errorLayer(err_S1LVHW "S1LVHW : Minimum LVT spacing to HNW = 10.0")

Executing: err_S1LVND = drc(lvt ndf (sep < 10.0))
	   errorLayer(err_S1LVND "S1LVND : Minimum LVT spacing to NDF = 10.0")

Executing: err_B1SV = geomAnd(svt geomOr(pwblk mv gxh nbd pbd hnw dnc dpc pdd lvt sci de...
	   errorLayer(err_B1SV "B1SV : SVT overlap of PWBLK,MV,HVGOX,HVNWELL,HVPWELL,HNW,DNC,DPC,PDD,LVT,SCI or DEPL is not allowed")

Executing: err_B2SV = geomAnd(svt geomOr(resnwell1 ndifres_1 pdifres_1 pnp2 pnp5 pnp10 q...
	   errorLayer(err_B2SV "B2SV : SVT overlap of rnw, rdn, rdp, qpva, qpvb, qpvc, qnvba or qnvb is not allowed")

Executing: svtgate = geomAnd(gate svt)

Executing: err_E1SVGA = drc(svt svtgate (enc < 0.35))
	   errorLayer(err_E1SVGA "E1SVGA : Minimum SVT enclosure of GATE = 0.35")

Executing: err_E2SVGA = drc(svt geomGetEdge(svtgate inside diff) (enc < 0.46))
	   errorLayer(err_E2SVGA "E2SVGA : Minimum SVT enclosure of GATE = 0.46")

Executing: err_S1SVGA = drc(svt gate (sep < 0.35))
	   errorLayer(err_S1SVGA "S1SVGA : Minimum SVT spacing to GATE = 0.35")

Executing: err_S2SVGA = drc(svt geomGetEdge(gate inside diff) (sep < 0.46))
	   errorLayer(err_S2SVGA "S2SVGA : Minimum SVT spacing to GATE = 0.46")

Executing: err_S1SVHN = drc(svt nbd (sep < 3.0))
	   errorLayer(err_S1SVHN "S1SVHN : Minimum SVT spacing to HVNWELL = 3.0")

Executing: err_S1SVHP = drc(svt pbd (sep < 3.0))
	   errorLayer(err_S1SVHP "S1SVHP : Minimum SVT spacing to HVPWELL = 3.0")

Executing: err_S1SVWM = drc(svt dnwellmv (sep < 3.5))
	   errorLayer(err_S1SVWM "S1SVWM : Minimum SVT spacing to DNWELLMV = 3.5")

Executing: err_S1SVWD = drc(svt dnwelldg (sep < 10.0))
	   errorLayer(err_S1SVWD "S1SVWD : Minimum SVT spacing to DNWELL = 10.0")

Executing: err_S1SVHW = drc(svt hnw (sep < 10.0))
	   errorLayer(err_S1SVHW "S1SVHW : Minimum SVT spacing to HNW = 10.0")

Executing: err_S1SVND = drc(svt ndf (sep < 10.0))
	   errorLayer(err_S1SVND "S1SVND : Minimum SVT spacing to NDF = 10.0")

Executing: err_B1LD = geomAnd(lndev geomOr(gxh nbd pbd hnw dnc dpc pdd sci depl))
	   errorLayer(err_B1LD "B1LD : LNDEV overlap of HVGOX, HVNWELL, HVPWELL, HNW, DNC, DPC, PDD, SCI or DEPL is not allowed")

Executing: err_B2LD = geomAnd(lndev geomOr(resnwell1 ndifres_1 pdifres_1 pnph2 pnph5 pnp...
	   errorLayer(err_B2LD "B2LD : LNDEV overlap of rnw3, rdn3, rdp3, qpva3, qpvb3 or qpvc3 is not allowed")

Executing: err_B3LD = geomAnd(lndev geomOr(lvt svt))
	   errorLayer(err_B3LD "B3LD : LNDEV overlap of LVT or SVT is not allowed")

Executing: lngate = geomAnd(gate lndev)

Executing: err_E1LDGA = drc(lndev lngate (enc < 0.35))
	   errorLayer(err_E1LDGA "E1LDGA : Minimum LNDEV enclosure of GATE = 0.35")

Executing: err_E2LDGA = drc(lndev geomGetEdge(lngate inside diff) (enc < 0.46))
	   errorLayer(err_E2LDGA "E2LDGA : Minimum LNDEV enclosure of GATE = 0.46")

Executing: err_S1LDGA = drc(lndev gate (sep < 0.35))
	   errorLayer(err_S1LDGA "S1LDGA : Minimum LNDEV spacing to GATE = 0.35")

Executing: err_S2LDGA = drc(lndev geomGetEdge(gate inside diff) (sep < 0.46))
	   errorLayer(err_S2LDGA "S2LDGA : Minimum LNDEV spacing to GATE = 0.46")

Executing: err_S1LDHN = drc(lndev nbd (sep < 3.0))
	   errorLayer(err_S1LDHN "S1LDHN : Minimum LNDEV spacing to HVNWELL = 3.0")

Executing: err_S1LDHP = drc(lndev pbd (sep < 3.0))
	   errorLayer(err_S1LDHP "S1LDHP : Minimum LNDEV spacing to HVPWELL = 3.0")

Executing: err_S1LDWM = drc(dnwellmv geomGetEdge(lndev not_over dnwellmv) (sep < 3.5))
	   errorLayer(err_S1LDWM "S1LDWM : Minimum LNDEV spacing to DNWELLMV = 3.5")

Executing: err_S1LDWD = drc(lndev dnwelldg (sep < 10.0))
	   errorLayer(err_S1LDWD "S1LDWD : Minimum LNDEV spacing to DNWELL = 10.0")

Executing: err_S1LDHW = drc(lndev hnw (sep < 10.0))
	   errorLayer(err_S1LDHW "S1LDHW : Minimum LNDEV spacing to HNW = 10.0")

Executing: err_S1LDND = drc(lndev ndf (sep < 10.0))
	   errorLayer(err_S1LDND "S1LDND : Minimum LNDEV spacing to NDF = 10.0")

Executing: ulngate = geomAnd(gate uln)

Executing: err_B1UL = geomAnd(uln geomOr(pwblk gxh nbd pbd hnw dnc dpc pdd sci depl lvt ...
	   errorLayer(err_B1UL "B1UL : ULN overlap of PWBLK,HVGOX,HVNWELL,HVPWELL,HNW,DNC,DPC,PDD,SCI,DEPL,LVT,SVT,LNDEV,CATDOP or ANODOP is not allowed")

Executing: err_B2UL = geomAnd(uln geomOr(mres hres polyres_n polyres_p polyres_ps))
	   errorLayer(err_B2UL "B2UL : ULN overlap of rpp1#, rnp1#, rpp1s#, MRES or HRES is not allowed")

Executing: ulnres = geomButting(geomOr(ndifres0 ndifres0_iso pdifres0) ulngate)

Executing: uln_ex2 = geomOr(geomButting(ulngate ulnres) ulnres)

Executing: uln_ex3 = geomSize(geomGetEdge(uln_ex2 coincident diff) 0.22)

Executing: uln_ex4 = geomOr(uln_ex2 uln_ex3)

Executing: err_B1ULSB = geomAndNot(geomAnd(uln sab) uln_ex4)
	   errorLayer(err_B1ULSB "B1ULSB : ULN overlap of SBLK is not allowed")

Executing: err_W1UL = drc(uln (width < 0.44))
	   errorLayer(err_W1UL "W1UL : Minimum ULN width = 0.44")

Executing: err_S1UL = drc(uln (sepNotch < 0.44))
	   errorLayer(err_S1UL "S1UL : Minimum ULN spacing/notch = 0.44")

Executing: err_E1ULGA = drc(uln ulngate (enc < 0.35))
	   errorLayer(err_E1ULGA "E1ULGA : Minimum ULN enclosure of GATE = 0.35")

Executing: err_S1ULGA = drc(uln gate (sep < 0.35))
	   errorLayer(err_S1ULGA "S1ULGA : Minimum ULN spacing to GATE = 0.35")

Executing: err_S1ULSB = drc(uln sab (sep < 0.35))
	   errorLayer(err_S1ULSB "S1ULSB : Minimum ULN spacing to SBLK = 0.35")

Executing: err_A1UL = drc(uln (area < 0.3844))
	   errorLayer(err_A1UL "A1UL : Minimum ULN area < 0.3844")

Executing: err_B1NU = geomAnd(bnimp geomOr(lvt svt depl hvdepl pdd lndev uln))
	   errorLayer(err_B1NU "B1NU : BNIMP overlap of LVT, SVT, DEPL, HVDEPL, PDD, LNDEV or ULN is not allowed")

Executing: err_B2NU = geomAnd(bnimp nwellg)
	   errorLayer(err_B2NU "B2NU : BNIMP overlap of NTYPE_WELL is not allowed")

Executing: err_B3NU = geomAnd(bnimp pbd)
	   errorLayer(err_B3NU "B3NU : BNIMP overlap of HVPWELL is not allowed")

Executing: err_B4NU = geomAndNot(bndiff nimp)
	   errorLayer(err_B4NU "B4NU : (BNIMP and DIFF) without NIMP is not allowed")

Executing: err_W1NU = drc(bnimp (width < 0.6))
	   errorLayer(err_W1NU "W1NU : Minimum BNIMP width = 0.6")

Executing: err_S1NU = drc(bnimp (sepNotch < 0.6))
	   errorLayer(err_S1NU "S1NU : Minimum BNIMP spacing/notch = 0.6")

Executing: err_S1NUDF = drc(bnimp diff_dg (sep < 0.35))
	   errorLayer(err_S1NUDF "S1NUDF : Minimum BNIMP spacing to DIFF = 0.35")

Executing: err_E1NUDN = drc(bnimp ndiffa (enc < 0.25))
	   errorLayer(err_E1NUDN "E1NUDN : Minimum BNIMP extension beyond NDIFF = 0.25")

Executing: cpodgate = geomAnd(gate bnimp)

Executing: err_E1NUGA = drc(bnimp cpodgate (enc < 0.25))
	   errorLayer(err_E1NUGA "E1NUGA : Minimum BNIMP enclosure of GATE = 0.25")

Executing: err_S1NUGA = drc(bnimp gate (sep < 0.45))
	   errorLayer(err_S1NUGA "S1NUGA : Minimum BNIMP spacing to GATE = 0.45")

Executing: err_B5NU = geomAndNot(geomStraddle(bnimp cpod_all) pwblk)
	   errorLayer(err_B5NU "B5NU : BNIMP without PWBLK is not allowed")

Executing: ndiffc1 = geomStraddle(ndiffa cpod_all)

Executing: ndiffc_s1 = geomSize(ndiffc1 1.2)

Executing: ndiffc_s2 = geomAndNot(geomSize(ndiffc1 1.205) ndiffc_s1)

Executing: err_E2PBDN = geomOr(geomAndNot(ndiffc_s1 pwblk_pur) geomAnd(ndiffc_s2 pwblk_p...
	   errorLayer(err_E2PBDN "E2PBDN : Fixed PWBLK enclosure of NDIFF = 1.2")

Executing: err_W2NU = drc(cpod_all (width < 2.0))
	   errorLayer(err_W2NU "W2NU : Minimum cpod# width = 2.0")

Executing: err_A1NU = drc(bnimp (area < 0.3844))
	   errorLayer(err_A1NU "A1NU : Minimum BNIMP area < 0.3844")

Executing: err_B1GHMV = geomAnd(gxh mv)
	   errorLayer(err_B1GHMV "B1GHMV : HVGOX overlap of MV is not allowed")

Executing: err_B1GH = geomStraddle(diff gxh)
	   errorLayer(err_B1GH "B1GH : DIFF crossing HVGOX edge is not allowed")

Executing: drc(gxh (width < 0.6) "W1GH : Minimum HVGOX width = 0.6")

Executing: drc(gxh (sepNotch < 1.0) "S1GH : Minimum HVGOX spacing/notch = 1.0")

Executing: drc(gxh diff (enc < 0.2) "E1GHDF : Minimum HVGOX enclosure of DIFF = 0.2")

Executing: drc(gxh diff (sep < 0.2) "S1GHDF : Minimum HVGOX spacing to DIFF = 0.2")

Executing: nbd_dnw_lv = geomInside(nbd dnwellmvdg)

Executing: pbd_dnw_lv = geomInside(pbd dnwellmvdg)

Executing: nbd_hv = geomAndNot(nbd geomOr(nbd_dnw_lv nbd_nma))

Executing: pbd_hv = geomAndNot(pbd geomOr(pbd_dnw_lv pbd_pma))

Executing: err_W1HPa = drc(pbd (width < 0.9))

Executing: err_W1HP = geomAndNot(err_W1HPa geomOr(geomSize(geomGetEdge(nmmd inside pbd) ...
	   errorLayer(err_W1HP "W1HP : Minimum HVPWELL width = 0.9")

Executing: drc(pbd (sepNotch < 0.6) "S1HP : Minimum HVPWELL spacing/notch = 0.6")

Executing: err_S2HP_1 = drc(pbddnw (sep < 3.0) diffNet)

Executing: err_S2HP = geomAndNot(err_S2HP_1 geomSize(pmmagate 0.43))
	   errorLayer(err_S2HP "S2HP : Minimum HVPWELL spacing (different net) = 3.0")

Executing: drc(pbd pdiffa (sep < 0.43) "S1HPDP : Minimum HVPWELL spacing to PDIFF = 0.43")

Executing: drc(pbd ndiffa (enc < 0.43) "E1HPDN : Minimum HVPWELL enclosure of NDIFF = 0....

Executing: drc(geomAndNot(pbd geomOr(pbd_ndmos scr1_dhpw_2)) ndiffa (sep < 0.43) "S1HPDN...

Executing: pbd_a1 = geomStraddle(pbd psd)

Executing: err_B1HP = geomAndNot(pbd pbd_a1)
	   errorLayer(err_B1HP "B1HP : HVPWELL must be contacted by PDIFF")

Executing: nhvgate1 = geomOr(nmmagate nmmc nhhv1 nmmd)

Executing: nhvgate2 = geomStraddle(diff geomOr(nma nmc nhv1))

Executing: pbd_ped = geomInside(pbd ped_h1)

Executing: err_B2HP = geomStraddle(diff geomAndNot(pbd geomOr(pbd_ndmos nhvgate1 nhvgate...
	   errorLayer(err_B2HP "B2HP : DIFF crossing HVPWELL edge is not allowed")

Executing: err_B3HP = geomAnd(pbd nwell)
	   errorLayer(err_B3HP "B3HP : HVPWELL overlap of NWELL is not allowed")

Executing: err_B4HP = geomStraddle(pbd dnwelldg)
	   errorLayer(err_B4HP "B4HP : HVPWELL crossing DNWELL edge is not allowed")

Executing: err_B5HP = geomAnd(pbd dnwellmvin)
	   errorLayer(err_B5HP "B5HP : HVPWELL overlap of DNWELL is not allowed")

Executing: drc(pbddnw nwell (sep < 0.8) "S1HPNW : Minimum HVPWELL spacing to NWELL = 0.8")

Executing: pbd_ped2 = geomInside(pbd ped2_h1)

Executing: pbddnwell = geomAndNot(pbddnw dnwellmvdg)

Executing: pbddnw2 = geomAndNot(pbddnwell geomOr(pbd_ndmos pbd_ped2 pbd_ped pbd_pma scr_...

Executing: drc(pbddnw2 ntie (sep < 3.0) "S2HPDN : Fixed HVPWELL spacing to NDIFF = 3.0")

Executing: pbddnw2_s = geomSize(pbddnw2 3.003)

Executing: err_S2HPDN = geomGetEdge(pbddnw2_s outside ntie)
	   errorLayer(err_S2HPDN "S2HPDN : Fixed HVPWELL spacing to NDIFF = 3.0")

Executing: drc(pbddnwell nwell (sep < 3.0) "S2HPNW : Minimum HVPWELL spacing to NWELL = ...

Executing: pbddnw_c1 = geomAndNot(pbddnw geomOr(pbd_ped2 pbd_ndmos scr1_dhpw_2 pbd_ped))

Executing: drc(pbddnw_c1 pdiffa (enc < 0.43) "E1HPDP : Minimum HVPWELL enclosure of PDIF...

Executing: err_A1HP = drc(pbd (area < 2.25))
	   errorLayer(err_A1HP "A1HP : Minimum HVPWELL area < 2.25")

Executing: err_B1HN = geomOutside(geomAndNot(nbd scr1_hnw4) nsd)
	   errorLayer(err_B1HN "B1HN : HVNWELL must be contacted by NDIFF")

Executing: err_B2HN = geomAnd(nbd geomOr(pbd pdd))
	   errorLayer(err_B2HN "B2HN : HVNWELL overlap of HVPWELL or PDD is not allowed")

Executing: err_B3HN = geomAnd(geomAndNot(nbd qnva_ce6) nwell)
	   errorLayer(err_B3HN "B3HN : HVNWELL overlap of NWELL is not allowed")

Executing: nbdgate1 = geomOr(pmmagate nmmagate pmc_a phv_a)

Executing: err_B4HN = geomGetEdge(geomGetEdge(nbd inside diff) not_over geomOr(nbdgate1 ...
	   errorLayer(err_B4HN "B4HN : DIFF crossing HVNWELL edge is not allowed")

Executing: err_B6HN = geomStraddle(nbd dnwelldg)
	   errorLayer(err_B6HN "B6HN : HVNWELL crossing DNWELL edge is not allowed")

Executing: err_B7HN = geomAnd(nbd dnwellmvin)
	   errorLayer(err_B7HN "B7HN : HVNWELL overlap of DNWELL is not allowed")

Executing: nbd_pm = geomAnd(geomStraddle(nbd pmmc) ndf)

Executing: err_W1HNa = drc(nbd (width < 0.9))

Executing: err_W1HN = geomAndNot(err_W1HNa nbd_pm)
	   errorLayer(err_W1HN "W1HN : Minimum HVNWELL width = 0.9")

Executing: drc(nbd (sepNotch < 0.6) "S1HN : Minimum HVNWELL spacing/notch = 0.6")

Executing: drc(nbd nwell (sep < 3.0) "S1HNNW : Minimum HVNWELL spacing to NWELL = 3.0")

Executing: drc(geomAndNot(nbd_hv scr1_hnw4) geomAndNot(pbd_hv geomOr(pbd_ped pbd_ped2 sc...

Executing: drc(nbd_hv geomAnd(pbd geomOr(pbd_ped2 pbd_ped)) (sep < 2.2) "S1HNHP : Minimu...

Executing: drc(geomAndNot(nbd geomAnd(ped116 ped136)) pdiffa (enc < 0.43) "E1HNDP : Mini...

Executing: drc(geomAndNot(nbd qnva_ce6) ndiffa (enc < 0.12) "E1HNDN : Minimum HVNWELL en...

Executing: drc(qnva_ce6 ndiffa (enc < 0.33) "E1HNDN : Minimum HVNWELL enclosure of NDIFF...

Executing: drc(nbd ndiffa (sep < 0.43) "S1HNDN : Minimum HVNWELL spacing to NDIFF = 0.43")

Executing: err_B5HN = geomAndNot(geomOutside(nbd dnwellg) pwblk)
	   errorLayer(err_B5HN "B5HN : HVNWELL without PWBLK is not allowed")

Executing: drc(nbdsub (sep < 7.0) diffNet "S2HN : Minimum HVNWELL spacing (different net...

Executing: err_S2HNa = drc(nbd_nma nbdsub (sep < 7.0) diffNet)
	   errorLayer(err_S2HNa "S2HN : Minimum HVNWELL spacing (different net) = 7.0")

Executing: nbd4_1a = geomEnclose(pwblk nbdsub)

Executing: nbd4_1b = geomSize(nbd4_1a -3.003)

Executing: nbdsub1 = geomSize(geomSize(nbdsub 1.5) -1.5)

Executing: err_E1PBHN = geomSize(geomAndNot(nbd4_1b nbdsub1) 0.003)
	   errorLayer(err_E1PBHN "E1PBHN : Fixed PWBLK enclosure of HVNWELL = 3.0")

Executing: drc(pwblk nbdsub (enc < 3.0) "E1PBHN : Fixed PWBLK enclosure of HVNWELL = 3.0")

Executing: drc(nbdsub0 ndiffa (enc < 0.43) "E2HNDN : Minimum HVNWELL enclosure of NDIFF ...

Executing: drc(nbdsub geomOutside(ndiffa nbd) (sep < 3.43) "S2HNDN : Minimum HVNWELL spa...

Executing: drc(pbd_dnw_lv nbd (sep < 0.8) "S2HNHP : Minimum HVNWELL spacing to HVPWELL =...

Executing: err_A1HN = drc(nbd (area < 2.25))
	   errorLayer(err_A1HN "A1HN : Minimum HVNWELL area < 2.25")

Executing: err_B1DLa = geomAnd(depl geomOr(gxh nbd pbdsub nwell))

Executing: err_B1DL = geomAndNot(err_B1DLa geomOr(qnvaz_dpl qnvbx))
	   errorLayer(err_B1DL "B1DL : DEPL overlap of HVGOX, NWELL, HVNWELL or HVPWELL is not allowed")

Executing: err_B2DLa = geomStraddle(depl dnwelldg)

Executing: err_B2DLb = geomStraddle(depl dnwellmvdg)

Executing: err_B2DL = geomOr(err_B2DLa err_B2DLb)
	   errorLayer(err_B2DL "B2DL : DEPL crossing DNWELLMV / DNWELL edge is not allowed")

Executing: err_B3DL = geomAndNot(geomAnd(ngate_all depl) mv)
	   errorLayer(err_B3DL "B3DL : DEPL NMOS transistor without MV is not allowed")

Executing: drc(depl (width < 1.0) "W1DL : Minimum DEPL width = 1.0")

Executing: drc(depl (sepNotch < 0.6) "S1DL : Minimum DEPL spacing/notch = 0.6")

Executing: err_O1DLPI_c = geomSize(geomGetEdge(dpldnw butting isopw) 0.005)

Executing: err_O1DLPI_a = drc(dpldnw isopw (ovlp < 0.05))

Executing: err_O1DLPI_b = geomAnd(dpldnw geomSize(isopw -0.05))

Executing: err_O1DLPI = geomOr(err_O1DLPI_c err_O1DLPI_a err_O1DLPI_b)
	   errorLayer(err_O1DLPI "O1DLPI : Fixed DEPL overlap of ISOPW (same potential) = 0.05")

Executing: drc(depl gate (enc < 0.7) "E1DLGA : Minimum DEPL extension beyond GATE = 0.7")

Executing: err_E1DLGA = geomGetEdge(depl inside gate)
	   errorLayer(err_E1DLGA "E1DLGA : Minimum DEPL extension beyond GATE = 0.7")

Executing: drc(depl geomAnd(poly diff) (sep < 0.7) "S1DLGA : Minimum DEPL spacing to GAT...

Executing: drc(depl nbd (sep < 3.0) "S1DLHN : Minimum DEPL spacing to HVNWELL = 3.0")

Executing: err_A1DL = drc(depl (area < 2.25))
	   errorLayer(err_A1DL "A1DL : Minimum DEPL area < 2.25")

Executing: ped1_ex2 = geomAnd(geomSize(geomOr(ped1321 geomSize(ped116 0.48)) 0.05) geomS...

Executing: ped2_ex2 = geomAnd(geomSize(geomOr(ped2321 geomSize(ped216 0.48)) 0.05) geomS...

Executing: ped_pdd = geomOr(ped1_ex2 ped2_ex2)

Executing: nedi_ex1 = geomSize(geomGetEdge(nedi4d butting nedi) 2.6)

Executing: nedi_ex2 = geomSize(geomGetEdge(nedi4d butting nedi) 1.4)

Executing: nedi_ex3 = geomOr(geomAndNot(nedi1411 nedi131) geomOr(nedi115 geomAndNot(nedi...

Executing: nedia_ex1 = geomSize(geomGetEdge(nedi4d butting nedia) 4.3)

Executing: nedia_ex2 = geomSize(geomGetEdge(nedi4d butting nedia) 2.0)

Executing: nedia_ex3 = geomOr(geomAndNot(nedia411 nedia31) geomOr(nedia25 geomAndNot(ned...

Executing: ned_pdd = geomOr(nedi_ex3 nedia_ex3)

Executing: err_B1PT = geomAndNot(pdd geomOr(ped_pdd ned_pdd dpdd_scr))
	   errorLayer(err_B1PT "B1PT : PDD is only allowed for ned#, ped#")

Executing: err_W1PT = drc(pdd (width < 1.0))
	   errorLayer(err_W1PT "W1PT : Minimum PDD width = 1.0")

Executing: err_S1PT = drc(pdd (sep < 0.86))
	   errorLayer(err_S1PT "S1PT : Minimum PDD spacing/notch = 0.86")

Executing: err_S1PTa0 = drc(pdd (notch < 0.86))

Executing: err_S1PTa1 = drc(geomAnd(err_S1PTa0 ned_pdd) ((0.59 <= width) <= 0.86))

Executing: err_S1PTa = geomAndNot(err_S1PTa0 err_S1PTa1)
	   errorLayer(err_S1PTa "S1PT : Minimum PDD spacing/notch = 0.86")

Executing: err_A1PT = drc(pdd (area < 6.0))
	   errorLayer(err_A1PT "A1PT : Minimum PDD area = 6.0")

Executing: err_A2PT = drc(geomAndNot(geomHoles(pdd) pdd) (area < 12.0))
	   errorLayer(err_A2PT "A2PT : Minimum PDD enclosed area = 12.0")

Executing: err_BDSC = geomOr(sci)
	   errorLayer(err_BDSC "BDSC : Not allowed to be used by customers")

Executing: hnw_dsb = geomAnd(hnw geomSize(d_dsdf 5.02))

Executing: hnw_check = geomAndNot(hnw geomOr(qpvhscr_bas hnw_dsb))

Executing: err_B1HWa = geomAndNot(hnw_check gxh)
	   errorLayer(err_B1HWa "B1HW : HNW without HVGOX and PWBLK is not allowed")

Executing: err_B1HWb = geomAndNot(geomAndNot(hnw hnw_dsb) pwblk)
	   errorLayer(err_B1HWb "B1HW : HNW without HVGOX and PWBLK is not allowed")

Executing: hnw_s = geomSize(hnw 4.0)

Executing: hnw45 = geomSize(hnw 4.005)

Executing: err_B2HW = geomGetEdge(hnw45 outside pbdptie)
	   errorLayer(err_B2HW "B2HW : HNW must be surrounded by a GUARD RING consisting of PDIFF and HVPWELL")

Executing: nwell_nqpvh = geomAndNot(nwell geomAndNot(qpvhscr_bas pdf))

Executing: pbd_nqpvh = geomAndNot(pbd qpvhbscr)

Executing: err_B3HW = geomAnd(hnw geomOr(dnwelldg dnwellmvdg nwell_nqpvh pbd_nqpvh isopw...
	   errorLayer(err_B3HW "B3HW : HNW overlap of DNWELL, DNWELLMV, NWELL, HVPWELL, ISOWELL or PDD is not allowed")

Executing: err_B4HW = geomStraddle(nbd hnw)
	   errorLayer(err_B4HW "B4HW : HVNWELL crossing HNW edge is not allowed")

Executing: err_B5HW = geomAnd(hnw geomOr(mres hres polyres_n polyres_p polyres_ps))
	   errorLayer(err_B5HW "B5HW : HNW overlap of rpp1#, rnp1#, rpp1s#, MRES or HRES is not allowed")

Executing: err_W1HW = drc(hnw (width < 8.0))
	   errorLayer(err_W1HW "W1HW : Minimum HNW width = 8.0")

Executing: err_S1HW = drc(hnw (sepNotch < 10.0))
	   errorLayer(err_S1HW "S1HW : Minimum HNW spacing/notch = 10.0")

Executing: err_E1HWDN = drc(hnw ndiffa (enc < 2.0))
	   errorLayer(err_E1HWDN "E1HWDN : Fixed HNW enclosure of NDIFF = 2.0")

Executing: hnw_s2 = geomOutside(geomSize(hnw_check -2.003) qpvhbscr)

Executing: err_E1HWDNa = geomGetEdge(geomOr(ndiffa geomHoles(geomInside(ndiffa hnw))) in...
	   errorLayer(err_E1HWDNa "E1HWDN : Fixed HNW enclosure of NDIFF = 2.0")

Executing: err_E1HWHN = drc(hnw nbd (enc < 1.76))
	   errorLayer(err_E1HWHN "E1HWHN : Minimum HNW enclosure of HVNWELL = 1.76")

Executing: err_E1GHHW = drc(gxh hnw (enc < 0.5))
	   errorLayer(err_E1GHHW "E1GHHW : Minimum HVGOX enclosure of HNW = 0.5")

Executing: err_E1PBHWa = geomAndNot(geomAndNot(hnw_s hnw) pwblk)
	   errorLayer(err_E1PBHWa "E1PBHW : Fixed PWBLK enclosure of HNW = 4.0")

Executing: err_E1PBHWb = geomGetEdge(hnw45 inside pwblk)
	   errorLayer(err_E1PBHWb "E1PBHW : Fixed PWBLK enclosure of HNW = 4.0")

Executing: err_S1HWHP = drc(hnw pbd (sep < 3.76))
	   errorLayer(err_S1HWHP "S1HWHP : Minimum HNW spacing to HVPWELL = 3.76")

Executing: err_S1HWWD = drc(hnw dnwelldg (sep < 10.0))
	   errorLayer(err_S1HWWD "S1HWWD : Minimum HNW spacing to DNWELL = 10.0")

Executing: err_S1HWWM = drc(hnw dnwellmv (sep < 10.0))
	   errorLayer(err_S1HWWM "S1HWWM : Minimum HNW spacing to DNWELLMV = 10.0")

Executing: err_S1HWHN = drc(hnw nbd (sep < 10.0))
	   errorLayer(err_S1HWHN "S1HWHN : Minimum HNW spacing to HVNWELL = 10.0")

Executing: err_S1HWNW = drc(hnw nwell (sep < 10.0))
	   errorLayer(err_S1HWNW "S1HWNW : Minimum HNW spacing to NWELL = 10.0")

Executing: err_S1HWND = drc(hnw ndf (sep < 10.0))
	   errorLayer(err_S1HWND "S1HWND : Minimum HNW spacing to NDF = 10.0")

Executing: err_S1HWP1 = drc(poly hnw (sep < 5.35))
	   errorLayer(err_S1HWP1 "S1HWP1 : Minimum HNW spacing to POLY1 = 5.35")

Executing: err_S1HWP1a = geomStraddle(poly hnw)
	   errorLayer(err_S1HWP1a "S1HWP1 : Minimum HNW spacing to POLY1 = 5.35")

Executing: err_E1HWP1 = drc(hnw poly (enc < 2.95))
	   errorLayer(err_E1HWP1 "E1HWP1 : Minimum HNW enclosure of POLY1 = 2.95")

Executing: err_E1HWDP = drc(hnw pdiffa (enc < 2.86))
	   errorLayer(err_E1HWDP "E1HWDP : Minimum HNW enclosure of PDIFF = 2.86")

Executing: err_S1HWDN = drc(hnw ndiffa (sep < 4.5))
	   errorLayer(err_S1HWDN "S1HWDN : Minimum HNW spacing to NDIFF = 4.5")

Executing: err_S1HWDP = drc(hnw pdiffa (sep < 4.0))
	   errorLayer(err_S1HWDP "S1HWDP : Fixed HNW spacing to PDIFF = 4.0")

Executing: err_S1HWDP = geomGetEdge(hnw45 outside pdiffa)
	   errorLayer(err_S1HWDP "S1HWDP : Fixed HNW spacing to PDIFF = 4.0")

Executing: ndf_hnw = geomAnd(ndf hnw)

Executing: err_A1ND = drc(ndf (area < 2.25))
	   errorLayer(err_A1ND "A1ND : Minimum NDF area < 2.25")

Executing: err_B1NDa = geomAndNot(geomAndNot(ndf dnp20) pwblk)
	   errorLayer(err_B1NDa "B1ND : NDF without HVGOX and PWBLK is not allowed")

Executing: err_B1NDb = geomAndNot(ndf gxh)
	   errorLayer(err_B1NDb "B1ND : NDF without HVGOX and PWBLK is not allowed")

Executing: err_B2ND = geomAnd(ndf geomOr(dnwelldg dnwellmvdg isopw depl sci pbd pdd))
	   errorLayer(err_B2ND "B2ND : NDF overlap of DNWELL, DNWELLMV, HVPWELL, ISOPW, SCI, DEPL or PDD is not allowed")

Executing: err_B3ND = geomStraddle(ndf hnw)
	   errorLayer(err_B3ND "B3ND : NDF crossing HNW edge is not allowed")

Executing: phv_ndf1 = geomOr(phv geomSize(geomGetEdge(phv coincident poly) 0.48))

Executing: err_B4ND = geomAndNot(geomAnd(pdiffa ndf) geomOr(pmc_a phhv phv_ndf1 pma))
	   errorLayer(err_B4ND "B4ND : PDIFF overlap of NDF is not allowed")

Executing: err_B5ND = geomAnd(ndftrm nbd)
	   errorLayer(err_B5ND "B5ND : NDF overlap of HVNWELL is not allowed")

Executing: err_B6ND = geomAndNot(ndf_hnw nbd)
	   errorLayer(err_B6ND "B6ND : NDF without HVNWELL is not allowed")

Executing: err_B7ND = geomAnd(ndf geomOr(mres hres polyres_n polyres_p polyres_ps))
	   errorLayer(err_B7ND "B7ND : NDF overlap of rpp1#, rnp1#, rpp1s#, HRES or MRES is not allowed")

Executing: err_B8ND = geomStraddle(nwell ndf)
	   errorLayer(err_B8ND "B8ND : NWELL crossing NDF edge is not allowed")

Executing: err_B9ND = geomAnd(ndf nwres)
	   errorLayer(err_B9ND "B9ND : NW_VERIFY overlap of NDF is not allowed")

Executing: err_B12ND = geomAnd(ndf_hnw ndiffa)
	   errorLayer(err_B12ND "B12ND : NDIFF overlap of NDF is not allowed")

Executing: err_W1ND = drc(ndf (width < 0.8))
	   errorLayer(err_W1ND "W1ND : Minimum NDF width = 0.8")

Executing: err_S1ND = drc(ndf (sepNotch < 0.54))
	   errorLayer(err_S1ND "S1ND : Minimum NDF spacing/notch = 0.54")

Executing: ndf_ex1 = geomOr(nmc_ndf nmmc_ndf)

Executing: nhv_andf = geomOr(nhv_ndf nhhv_ndf)

Executing: ndf_ex4 = geomOr(ndf_ex1 nmmd_ndf)

Executing: ndf_ex2 = geomOr(ndf_ex4 nhv_andf)

Executing: nmmc_g1 = geomSize(nmmc 1.0)

Executing: nmc_g1 = geomSize(nmc 1.0)

Executing: nhhv_g1 = geomSize(nhhv1 1.0)

Executing: nhv_g1 = geomSize(nhv1 1.0)

Executing: nmmd_g1 = geomSize(nmmd 1.0)

Executing: ndf_ex3 = geomOr(nmmc_g1 nmc_g1 nhhv_g1 nhv_g1 nmmd_g1)

Executing: ndf_ex5 = geomOr(nmmc_g1 nmc_g1 nhhv_g1 nmmd_g1)

Executing: nm_a = geomOr(nmc nmmc nmmd nhv1 nhhv1)

Executing: dndf_2 = geomAndNot(dndf_1 nhv_andf)

Executing: dndf_3 = geomAndNot(dndf_2 ndf_ex4)

Executing: dndf_345 = geomSize(dndf_3 4.005)

Executing: err_B10NDa = geomGetEdge(dndf_345 outside pbdptie)
	   errorLayer(err_B10NDa "B10ND : NDF must be surrounded by a GUARD RING consisting of PDIFF and HVPWELL")

Executing: err_B10NDb = geomEnclose(dndf_345 ndf (keep > 1))
	   errorLayer(err_B10NDb "B10ND : NDF must be surrounded by a GUARD RING consisting of PDIFF and HVPWELL")

Executing: ndf_aa = geomOr(ndf_ex2 ndf_ex3)

Executing: ndf_aa4 = geomSizeAndNot(ndf_aa pdiffa 0.2 4.0)

Executing: ndf_aa45 = geomSize(ndf_aa4 0.005)

Executing: err_B10NDc = geomGetEdge(ndf_aa45 outside pbdptie)
	   errorLayer(err_B10NDc "B10ND : NDF must be surrounded by a GUARD RING consisting of PDIFF and HVPWELL")

Executing: err_B10NDd = geomEnclose(ndf_aa4 ndf_aa (keep > 1))
	   errorLayer(err_B10NDd "B10ND : NDF must be surrounded by a GUARD RING consisting of PDIFF and HVPWELL")

Executing: err_B11ND = geomAnd(geomAndNot(poly ndf_ex3) ndftrm)
	   errorLayer(err_B11ND "B11ND : POLY1 overlap of NDF is not allowed")

Executing: err_B13ND = geomAnd(geomAndNot(ndf ndf_ex2) nwell)
	   errorLayer(err_B13ND "B13ND : NWELL overlap of NDF is not allowed")

Executing: err_W2NDa = drc(ndftrm (width < 5.32))

Executing: err_W2ND = geomAndNot(err_W2NDa ndf_ex4)
	   errorLayer(err_W2ND "W2ND : Minimum NDF width = 5.32")

Executing: err_S2NDa = drc(ndftrm (sep < 8.42) diffNet)

Executing: err_S2NDb = drc(ndf_ex4 (sepNotch < 8.42))

Executing: err_S2ND = geomAndNot(geomAndNot(err_S2NDa err_S2NDb) ndf_ex5)
	   errorLayer(err_S2ND "S2ND : Minimum NDF spacing (different net) = 8.42")

Executing: ndf_a11 = geomOr(geomSize(geomGetLength(geomGetEdge(nmc_a inside ndf_ex1) (ke...

Executing: ndf_a12 = geomOr(geomSize(geomGetLength(geomGetEdge(nmmd inside nmmd_ndf) (ke...

Executing: ndf_a13 = geomOr(geomSize(geomGetLength(geomGetEdge(nhv_a inside nhv_andf) (k...

Executing: ndf_a14 = geomOr(geomSize(geomGetLength(geomGetEdge(ndf_a13 inside nhv_andf) ...

Executing: ndf_a1 = geomOr(ndf_a11 ndf_a12 ndf_a14)

Executing: ndf_a2 = geomSize(geomAndNot(dndf_1 ndf_a1) -1.0)

Executing: ndf_a3 = geomAndNot(geomAnd(dndf_1 ndiffa) nm_a)

Executing: err_E1NDDNa = geomXor(dndf_1 geomOr(geomSize(ndf_a3 1.0) ndf_a1))
	   errorLayer(err_E1NDDNa "E1NDDN : Fixed NDF enclosure of NDIFF = 1.0")

Executing: err_E1NDDNb = geomXor(ndf_a2 ndf_a3)
	   errorLayer(err_E1NDDNb "E1NDDN : Fixed NDF enclosure of NDIFF = 1.0")

Executing: err_S1NDDN = drc(geomAndNot(ndftrm nm_ndf) ndiffa (sep < 4.5))
	   errorLayer(err_S1NDDN "S1NDDN : Minimum NDF spacing to NDIFF = 4.5")

Executing: err_S2NDDN = drc(nm_ndf geomGetEdge(ndiffa outside nm_ndf) (sep < 3.0))
	   errorLayer(err_S2NDDN "S2NDDN : Minimum NDF spacing to NDIFF = 3.0")

Executing: err_S1NDWD = drc(ndftrm dnwelldg (sep < 10.0))
	   errorLayer(err_S1NDWD "S1NDWD : Minimum NDF spacing to DNWELL = 10.0")

Executing: err_S1NDWM = drc(ndftrm dnwellmv (sep < 10.0))
	   errorLayer(err_S1NDWM "S1NDWM : Minimum NDF spacing to DNWELLMV = 10.0")

Executing: err_S1NDHN = drc(ndftrm nbd (sep < 10.0))
	   errorLayer(err_S1NDHN "S1NDHN : Minimum NDF spacing to HVNWELL = 10.0")

Executing: err_S1NDHP = drc(geomAndNot(ndftrm ndf_ex2) pbd (sep < 3.76))
	   errorLayer(err_S1NDHP "S1NDHP : Minimum NDF spacing to HVPWELL = 3.76")

Executing: err_S1NDNW = drc(ndftrm geomAndNot(nwell ndf) (sep < 10.0))
	   errorLayer(err_S1NDNW "S1NDNW : Minimum NDF spacing to NWELL = 10.0")

Executing: err_E1GHND = drc(gxh ndftrm (enc < 0.5))
	   errorLayer(err_E1GHND "E1GHND : Minimum HVGOX enclosure of NDF = 0.5")

Executing: ndf_nhnw1 = geomAndNot(ndftrm geomOr(ndf_ex2 dnp20))

Executing: err_E1PBNDa = geomAndNot(geomSize(ndf_nhnw1 4.0) pwblk)
	   errorLayer(err_E1PBNDa "E1PBND : Fixed PWBLK enclosure of NDF = 4.0")

Executing: err_E1PBNDb = geomGetEdge(geomSize(ndf_nhnw1 4.005) inside pwblk)
	   errorLayer(err_E1PBNDb "E1PBND : Fixed PWBLK enclosure of NDF = 4.0")

Executing: err_S1NDDP = drc(dndf_3 pdiffa (sep < 4.0))
	   errorLayer(err_S1NDDP "S1NDDP : Fixed NDF spacing to PDIFF = 4.0")

Executing: err_S1NDDPa = geomGetEdge(dndf_345 outside pdiffa)
	   errorLayer(err_S1NDDPa "S1NDDP : Fixed NDF spacing to PDIFF = 4.0")

Executing: err_A1PD = drc(pdf (area < 2.25))
	   errorLayer(err_A1PD "A1PD : Minimum PDF area < 2.25")

Executing: err_B1PD = geomAndNot(pdf hnw)
	   errorLayer(err_B1PD "B1PD : PDF without HNW is not allowed")

Executing: err_B2PD = geomAnd(geomAndNot(pdf qpvhscr_isopw) ndiffa)
	   errorLayer(err_B2PD "B2PD : NDIFF overlap of PDF is not allowed")

Executing: err_B3PD = geomAnd(pdf nbd)
	   errorLayer(err_B3PD "B3PD : PDF overlap of HVNWELL is not allowed")

Executing: err_W1PDa = drc(pdf (width < 5.0))

Executing: err_W1PD = geomAndNot(err_W1PDa geomOr(pmc_pdf pmmc_pdf phhv_pdf))
	   errorLayer(err_W1PD "W1PD : Minimum PDF width = 5.0")

Executing: pdiffa_pdf = geomAndNot(geomAnd(pdiffa pdf) geomOr(pmc_a phv_a))

Executing: err_W1DPa = drc(pdiffa_pdf (width < 0.42))

Executing: err_W1DPb = geomSize(pdiffa_pdf -0.21 downUp)

Executing: err_W1DP = geomOr(err_W1DPa err_W1DPb)
	   errorLayer(err_W1DP "W1DP : Fixed PDIFF stripe width = 0.42")

Executing: pmc_g1 = geomSize(pmc 1.1)

Executing: pmmc_g1 = geomSize(pmmc 1.1)

Executing: err_S1PDa = drc(pdf (sepNotch < 2.2))

Executing: err_S1PD = geomAndNot(err_S1PDa pmmc_g1)
	   errorLayer(err_S1PD "S1PD : Minimum PDF spacing/notch = 2.2")

Executing: phhv_g1 = geomSize(phhv 3.0)

Executing: phv_g1 = geomOr(geomSize(geomGetEdge(phv coincident pdiffa inside nbd) 3.0) g...

Executing: err_S2PDa = drc(pdf (sep < 5.0) diffNet)

Executing: err_S2PD = geomAndNot(err_S2PDa geomOr(pmmc_g1 phhv_g1))
	   errorLayer(err_S2PD "S2PD : Minimum PDF spacing (different net) = 5.0")

Executing: pdiffa_pmc = geomOr(geomInside(pdiffa geomStraddle(pdf pmc)) pmc)

Executing: pdiffa_pmmc = geomOr(geomInside(pdiffa geomStraddle(pdf pmmc)) pmmc)

Executing: pdiffa_pdf1 = geomAnd(pdf geomAndNot(pdiffa geomOr(phv_a pdiffa_pmc pdiffa_pm...

Executing: err_E1PDDP = drc(pdf pdiffa_pdf1 (enc < 3.0))
	   errorLayer(err_E1PDDP "E1PDDP : Minimum PDF enclosure of PDIFF = 3.0")

Executing: err_E1HWPD = drc(hnw pdf (enc < 5.0))
	   errorLayer(err_E1HWPD "E1HWPD : Minimum HNW enclosure of PDF = 5.0")

Executing: phhv_g1a = geomOr(phhv_pdf phhv_g1)

Executing: phv_g1a = geomOr(phv_pdf phv_g1)

Executing: pmmc_g1a = geomAnd(pmmc_g1 nbd)

Executing: pmc_g1a = geomAnd(geomSize(pmc 1.1) nbd)

Executing: err_S1PDHNa = drc(geomOr(pdf phhv_g1a phv_g1a) nbd ((0 < sep) < 2.76))
	   errorLayer(err_S1PDHNa "S1PDHN : Minimum PDF spacing to HVNWELL = 2.76")

Executing: err_S1PDHNbb = geomSize(geomGetEdge(geomOr(pdf phhv_g1a phv_g1a) butting nbd)...

Executing: err_S1PDHNb = geomAndNot(err_S1PDHNbb geomOr(pmmc_g1a pmc_g1a))
	   errorLayer(err_S1PDHNb "S1PDHN : Minimum PDF spacing to HVNWELL = 2.76")

Executing: pdf_c1 = geomAndNot(pdf qpvhscr)

Executing: err_S1PDDN = drc(pdf_c1 ndiffa (sep < 3.0))
	   errorLayer(err_S1PDDN "S1PDDN : Minimum PDF spacing to NDIFF = 3.0")

Executing: err_S1PDDP = drc(pdf_c1 pdiffa (sep < 4.0) shielded)
	   errorLayer(err_S1PDDP "S1PDDP : Minimum PDF spacing to PDIFF = 4.0")

Executing: nhvd_s75 = geomSize(nhvd 0.75)

Executing: nhhvd_s75 = geomSize(nhhvd 0.75)

Executing: err_B1HL = geomAndNot(hvdepl geomOr(nhvd_s75 nhhvd_s75))
	   errorLayer(err_B1HL "B1HL : HVDEPL is only allowed for nhvd, nhhvd")

Executing: err_W1HL = drc(hvdepl (width < 4.5))
	   errorLayer(err_W1HL "W1HL : Minimum HVDEPL width = 4.5")

Executing: err_S1HL = drc(hvdepl (sepNotch < 0.6))
	   errorLayer(err_S1HL "S1HL : Minimum HVDEPL sacing / notch = 0.6")

Executing: err_S1HLGA = drc(hvdepl gate (sep < 0.7))
	   errorLayer(err_S1HLGA "S1HLGA : Minimum HVDEPL spacing to GATE = 0.7")

Executing: err_W12GA = drc(nmmc (width < 2.0))
	   errorLayer(err_W12GA "W12GA : Minimum GATE length = 2.0")

Executing: err_W13GA = geomSize(geomGetLength(geomGetEdge(ndf inside nmmc) (keep < 3.0) ...
	   errorLayer(err_W13GA "W13GA : Minimum GATE width = 3.0")

Executing: err_W3ND = drc(nmmc_ndf (width < 2.82))
	   errorLayer(err_W3ND "W3ND : Minimum NDF width = 2.82")

Executing: err_S3NDHP = geomAndNot(nmmc_g1 geomOr(ndf pbd))
	   errorLayer(err_S3NDHP "S3NDHP : Fixed NDF spacing to HVPWELL (in channel region) = 0.0")

Executing: nmmc_nsd = geomInside(nsd nmmc_ndf)

Executing: err_S6DF = drc(nmmc_nsd nmmc (sep < 1.0))
	   errorLayer(err_S6DF "S6DF : Fixed SOURCE/DRAIN-EDGE-STI length = 1.0")

Executing: nmmc_s1 = geomSize(geomGetEdge(nmmc inside ndf) 1.0)

Executing: nmmc_s2 = geomWidth(nmmc_s1 (keep >= 1.0))

Executing: nmmc_s3 = geomSize(geomGetEdge(nmmc_s2 outside ndiffa) 0.001)

Executing: err_S6DFa = geomAndNot(nmmc_s3 geomStraddle(nmmc_s3 poly))
	   errorLayer(err_S6DFa "S6DF : Fixed SOURCE/DRAIN-EDGE-STI length = 1.0")

Executing: err_E2P1GA = drc(poly nmmc (enc < 0.5))
	   errorLayer(err_E2P1GA "E2P1GA : Minimum POLY1 extension beyond GATE = 0.5")

Executing: err_O1NDGAa = drc(nmmc_ndf nmmc (ovlp == 0.4))

Executing: err_O1NDGA = geomAndNot(geomAnd(nmmc_ndf nmmc) err_O1NDGAa)
	   errorLayer(err_O1NDGA "O1NDGA : Fixed NDF overlap of GATE = 0.4")

Executing: err_S2P1DN = drc(poly nmmc_nsd (sep < 0.5))
	   errorLayer(err_S2P1DN "S2P1DN : Minimum POLY1 spacing to SOURCE / DRAIN NDIFF = 0.5")

Executing: err_E1NDNW = drc(nmmc_ndf nwell (enc < 0.78))
	   errorLayer(err_E1NDNW "E1NDNW : Minimum NDF enclosure of NWELL = 0.78")

Executing: err_S1NWGA = drc(nmmc nwell (sep < 0.78))
	   errorLayer(err_S1NWGA "S1NWGA : Minimum NWELL spacing to GATE = 0.78")

Executing: err_E2NWDN = drc(nwell nmmc_nsd (enc < 0.22))
	   errorLayer(err_E2NWDN "E2NWDN : Minimum NWELL enclosure of NDIFF = 0.22")

Executing: nmmc_ndf_c3 = geomGetEdge(nmmc_ndf coincident geomOr(nmmc_g1 nmmc_ndf))

Executing: err_S5NDHPa = drc(nmmc_ndf_c3 pbd (sep < 1.76))
	   errorLayer(err_S5NDHPa "S5NDHP : Fixed NDF spacing to HVPWELL = 1.76")

Executing: err_S5NDHPb = geomAndNot(geomSize(geomGetEdge(nmmc inside pbd) 2.76) pbd)
	   errorLayer(err_S5NDHPb "S5NDHP : Fixed NDF spacing to HVPWELL = 1.76")

Executing: nmmc_ndf_s4 = geomOr(geomSize(geomGetEdge(nmmc_ndf outside pbd) 1.76 chainEdg...

Executing: err_S5NDHPc = geomAndNot(geomAndNot(geomSize(nmmc_ndf_s4 0.005) nmmc_ndf_s4) ...
	   errorLayer(err_S5NDHPc "S5NDHP : Fixed NDF spacing to HVPWELL = 1.76")

Executing: err_S5NDHPd = geomOverlap(nmmc_ndf_s4 ndf (keep > 1))
	   errorLayer(err_S5NDHPd "S5NDHP : Fixed NDF spacing to HVPWELL = 1.76")

Executing: nmc_a1 = geomSize(geomGetEdge(geomGetEdge(nmc coincident poly) inside pbd) -0...

Executing: nmc_a2 = geomAnd(geomAndNot(nmc nmc_a1) pbd)

Executing: nmc_a3 = geomSize(geomGetEdge(nmc_a2 outside nmc_a1 outside ndf) 1.0)

Executing: nmc_a4 = geomOr(ndf_ex1 geomOr(nmc_a2 nmc_a3))

Executing: nmc_a5 = geomOr(nmc_a4 nmmc_g1)

Executing: err_S3NDDPa = drc(geomGetEdge(ndf_ex1 coincident geomOr(ndf_ex1 ndf_ex3)) pdi...
	   errorLayer(err_S3NDDPa "S3NDDP : Fixed NDF spacing to PDIFF = 2.0")

Executing: nmc_a5_s2 = geomSize(nmc_a5 2.0)

Executing: nmc_a5_s25 = geomSize(nmc_a5 2.005)

Executing: err_S3NDDPb = geomGetEdge(nmc_a5_s2 inside pdiffa)
	   errorLayer(err_S3NDDPb "S3NDDP : Fixed NDF spacing to PDIFF = 2.0")

Executing: err_S3NDDPc = geomGetEdge(nmc_a5_s25 outside pdiffa)
	   errorLayer(err_S3NDDPc "S3NDDP : Fixed NDF spacing to PDIFF = 2.0")

Executing: err_E2PBNDa = drc(pwblk geomGetEdge(ndf_ex2 coincident geomOr(ndf_ex2 nmc_g1 ...
	   errorLayer(err_E2PBNDa "E2PBND : Fixed PWBLK enclosure of NDF = 2.0")

Executing: err_E2PBNDb = geomGetEdge(nmc_a5_s2 outside pwblk)
	   errorLayer(err_E2PBNDb "E2PBND : Fixed PWBLK enclosure of NDF = 2.0")

Executing: err_E2PBNDc = geomGetEdge(nmc_a5_s25 inside pwblk)
	   errorLayer(err_E2PBNDc "E2PBND : Fixed PWBLK enclosure of NDF = 2.0")

Executing: err_W24GA = drc(nmc (width < 1.5))
	   errorLayer(err_W24GA "W24GA : Minimum GATE length = 1.5")

Executing: err_W25GA = geomSize(geomGetLength(geomGetEdge(nmc coincident poly) (keep < 3...
	   errorLayer(err_W25GA "W25GA : Minimum GATE width = 3.0")

Executing: err_W4ND = drc(nmc_ndf (width < 2.82))
	   errorLayer(err_W4ND "W4ND : Minimum NDF width = 2.82")

Executing: err_S4NDHP = geomAndNot(nmc_s geomOr(ndf pbd))
	   errorLayer(err_S4NDHP "S4NDHP : Fixed NDF spacing to HVPWELL (in channel region) = 0.0")

Executing: nmc_nsd = geomInside(nsd nmc_ndf)

Executing: err_S9DF = drc(nmc_nsd nmc (sep < 1.0))
	   errorLayer(err_S9DF "S9DF : Fixed DRAIN-EDGE-STI length = 1.0")

Executing: nmc_s1 = geomSize(geomGetEdge(nmc inside ndf) 1.0)

Executing: nmc_s2 = geomWidth(nmc_s1 (keep >= 1.0))

Executing: nmc_s3 = geomSize(geomGetEdge(nmc_s2 outside ndiffa) 0.001)

Executing: err_S9DFa = geomAndNot(nmc_s3 geomStraddle(nmc_s3 poly))
	   errorLayer(err_S9DFa "S9DF : Fixed DRAIN-EDGE-STI length = 1.0")

Executing: err_E2P1DN = drc(poly geomStraddle(ndiffa nmc) (enc < 0.5))
	   errorLayer(err_E2P1DN "E2P1DN : Minimum POLY1 extension beyond NDIFF = 0.5")

Executing: err_O3NDGAa = drc(nmc_ndf nmc (ovlp == 0.4))

Executing: err_O3NDGA = geomAndNot(geomAnd(nmc_ndf nmc) err_O3NDGAa)
	   errorLayer(err_O3NDGA "O3NDGA : Fixed NDF overlap of GATE = 0.4")

Executing: err_S4P1DN = drc(poly nmc_nsd (sep < 0.5))
	   errorLayer(err_S4P1DN "S4P1DN : Minimum POLY1 spacing to DRAIN NDIFF = 0.5")

Executing: err_E2NDNW = drc(nmc_ndf nwell (enc < 0.78))
	   errorLayer(err_E2NDNW "E2NDNW : Minimum NDF enclosure of NWELL = 0.78")

Executing: err_S3NWGA = drc(nmc nwell (sep < 0.78))
	   errorLayer(err_S3NWGA "S3NWGA : Minimum NWELL spacing to GATE = 0.78")

Executing: err_E4NWDN = drc(nwell nmc_nsd (enc < 0.22))
	   errorLayer(err_E4NWDN "E4NWDN : Minimum NWELL enclosure of NDIFF = 0.22")

Executing: nmc_ndf_c3 = geomGetEdge(nmc_ndf coincident geomOr(nmc_g1 nmc_ndf))

Executing: err_S6NDHPa = drc(nmc_ndf_c3 pbd (sep < 1.76))
	   errorLayer(err_S6NDHPa "S6NDHP : Fixed NDF spacing to HVPWELL = 1.76")

Executing: err_S6NDHPb = geomAndNot(geomSize(geomGetEdge(geomGetEdge(nmc coincident ndif...
	   errorLayer(err_S6NDHPb "S6NDHP : Fixed NDF spacing to HVPWELL = 1.76")

Executing: nmc_ndf_s4 = geomOr(geomSize(geomGetEdge(nmc_ndf outside pbd) 1.76 chainEdges...

Executing: err_S6NDHPc = geomAndNot(geomAndNot(geomSize(nmc_ndf_s4 0.005) nmc_ndf_s4) pbd)
	   errorLayer(err_S6NDHPc "S6NDHP : Fixed NDF spacing to HVPWELL = 1.76")

Executing: err_S6NDHPd = geomOverlap(nmc_ndf_s4 ndf (keep > 1))
	   errorLayer(err_S6NDHPd "S6NDHP : Fixed NDF spacing to HVPWELL = 1.76")

Executing: nmmd_ch = geomGetRectangle(geomAndNot(nmmd ndf) (width == 1.4))

Executing: err_W30GA = geomAndNot(nmmd geomEnclose(nmmd nmmd_ch))
	   errorLayer(err_W30GA "W30GA : Fixed GATE length = 3.2")

Executing: err_W31GA = geomGetLength(geomGetEdge(ndf inside nmmd) (keep < 3.0))
	   errorLayer(err_W31GA "W31GA : Minimum GATE width = 3.0")

Executing: err_W5ND = drc(nmmd_ndf (width < 2.82))
	   errorLayer(err_W5ND "W5ND : Minimum NDF width = 2.82")

Executing: nmmd_nsd = geomInside(nsd nmmd_ndf)

Executing: err_S13DF = drc(nmmd_nsd nmmd (sep < 1.0))
	   errorLayer(err_S13DF "S13DF : Fixed SOURCE/DRAIN-EDGE-STI length = 1.0")

Executing: nmmd_s1 = geomSize(geomGetEdge(nmmd inside ndf) 1.0)

Executing: nmmd_s2 = geomWidth(nmmd_s1 (keep >= 1.0))

Executing: nmmd_s3 = geomSize(geomGetEdge(nmmd_s2 outside ndiffa) 0.001)

Executing: err_S13DFa = geomAndNot(nmmd_s3 geomStraddle(nmmd_s3 poly))
	   errorLayer(err_S13DFa "S13DF : Fixed SOURCE/DRAIN-EDGE-STI length = 1.0")

Executing: nmmd_ndf_s1 = geomSize(geomGetEdge(nmmd_ndf inside nmmd_g1) 0.3)

Executing: nmmd_ndf_s2 = geomSize(geomGetEdge(nmmd_ndf inside nmmd_g1) 0.305)

Executing: err_S8NDHPa = geomAnd(nmmd_ndf_s1 pbd)

Executing: err_S8NDHPb = geomAndNot(geomAndNot(nmmd_ndf_s2 nmmd_ndf_s1) pbd)

Executing: err_S8NDHP = geomOr(err_S8NDHPa err_S8NDHPb)
	   errorLayer(err_S8NDHP "S8NDHP : Fixed NDF spacing to HVPWELL = 0.3")

Executing: nmmd_g1_ndf = geomOr(nmmd_g1 nmmd_ndf)

Executing: nmmd_ndf_c3 = geomGetEdge(nmmd_ndf coincident nmmd_g1_ndf)

Executing: err_S9NDHPa = drc(nmmd_ndf_c3 pbd (sep < 1.76))
	   errorLayer(err_S9NDHPa "S9NDHP : Fixed NDF spacing to HVPWELL = 1.76")

Executing: err_S9NDHPb = geomAndNot(geomSize(geomGetEdge(nmmd inside pbd) 2.76) pbd)
	   errorLayer(err_S9NDHPb "S9NDHP : Fixed NDF spacing to HVPWELL = 1.76")

Executing: nmmd_ndf_s4 = geomOr(geomSize(geomGetEdge(geomOr(nmmd_ndf nmmd_ndf_s1) outsid...

Executing: err_S9NDHPc = geomAndNot(geomAndNot(geomSize(nmmd_ndf_s4 0.005) nmmd_ndf_s4) ...
	   errorLayer(err_S9NDHPc "S9NDHP : Fixed NDF spacing to HVPWELL = 1.76")

Executing: err_S9NDHPd = geomOverlap(nmmd_ndf_s4 ndf (keep > 1))
	   errorLayer(err_S9NDHPd "S9NDHP : Fixed NDF spacing to HVPWELL = 1.76")

Executing: err_S4P1DN = drc(poly nmmd_nsd (sep < 0.5))
	   errorLayer(err_S4P1DN "S2P1DN : Minimum POLY1 spacing to SOURCE / DRAIN NDIFF = 0.5")

Executing: err_E7P1GA = drc(poly nmmd (enc < 0.5))
	   errorLayer(err_E7P1GA "E7P1GA : Minimum POLY1 extension beyond GATE = 0.5")

Executing: err_O4NDGAa = drc(nmmd_ndf nmmd (ovlp == 0.9))

Executing: err_O4NDGA = geomAndNot(geomAnd(nmmd_ndf nmmd) err_O4NDGAa)
	   errorLayer(err_O4NDGA "O4NDGA : Fixed NDF overlap of GATE = 0.9")

Executing: err_S4NWGA = drc(nmmd nwell (sep < 0.78))
	   errorLayer(err_S4NWGA "S4NWGA : Minimum NWELL spacing to GATE = 0.78")

Executing: err_E5NWDN = drc(nwell nmmd_nsd (enc < 0.22))
	   errorLayer(err_E5NWDN "E5NWDN : Minimum NWELL enclosure of NDIFF = 0.22")

Executing: err_E4NDNW = drc(nmmd_ndf nwell (enc < 0.78))
	   errorLayer(err_E4NDNW "E4NDNW : Minimum NDF enclosure of NWELL = 0.78")

Executing: nmmd_a1 = geomSize(nmmd_g1_ndf 2.0)

Executing: err_E3PBNDa = drc(pwblk nmmd_ndf (enc < 2.0))
	   errorLayer(err_E3PBNDa "E3PBND : Fixed PWBLK enclosure of NDF = 2.0")

Executing: err_E3PBNDb = geomGetEdge(nmmd_a1 outside pwblk)
	   errorLayer(err_E3PBNDb "E3PBND : Fixed PWBLK enclosure of NDF = 2.0")

Executing: err_E3PBNDc = geomGetEdge(geomSize(nmmd_a1 0.005) inside pwblk)
	   errorLayer(err_E3PBNDc "E3PBND : Fixed PWBLK enclosure of NDF = 2.0")

Executing: err_S4NDDPa = drc(nmmd_ndf pdiffa (sep < 2.0))
	   errorLayer(err_S4NDDPa "S4NDDP : Fixed NDF spacing to PDIFF = 2.0")

Executing: err_S4NDDPb = geomGetEdge(nmmd_a1 inside pdiffa)
	   errorLayer(err_S4NDDPb "S4NDDP : Fixed NDF spacing to PDIFF = 2.0")

Executing: err_S4NDDPc = geomGetEdge(geomSize(nmmd_a1 0.005) outside pdiffa)
	   errorLayer(err_S4NDDPc "S4NDDP : Fixed NDF spacing to PDIFF = 2.0")

Executing: err_W14GA = drc(pmmc (width < 1.8))
	   errorLayer(err_W14GA "W14GA : Minimum GATE length = 1.8")

Executing: err_W15GA = geomSize(geomGetLength(geomGetEdge(pdf inside pmmc) (keep < 3.0) ...
	   errorLayer(err_W15GA "W15GA : Minimum GATE width = 3.0")

Executing: err_W2PD = drc(pmmc_pdf (width < 3.02))
	   errorLayer(err_W2PD "W2PD : Minimum PDF width = 3.02")

Executing: err_S3PD = geomAnd(drc(pmmc_pdf (sep < 0.8)) pmmc_g1)
	   errorLayer(err_S3PD "S3PD : Minimum PDF spacing (in channel region) = 0.8")

Executing: err_E2PDDP = drc(pmmc_pdf pdiffa (enc < 1.1))
	   errorLayer(err_E2PDDP "E2PDDP : Minimum PDF enclosure of PDIFF = 1.1")

Executing: err_S1PDND = geomAndNot(pmmc_g1 geomOr(pdf ndf))
	   errorLayer(err_S1PDND "S1PDND : Fixed PDF spacing to NDF (in channel region) = 0.0")

Executing: pmmc_psd = geomInside(psd pmmc_pdf)

Executing: err_S11DF = drc(pmmc_psd pmmc (sep < 1.0))
	   errorLayer(err_S11DF "S11DF : Fixed SOURCE / DRAIN-EDGE-STI length = 1.0")

Executing: pmmc_s1 = geomSize(geomGetEdge(pmmc inside pdf) 1.0)

Executing: pmmc_s2 = geomWidth(pmmc_s1 (keep >= 1.0))

Executing: pmmc_s3 = geomSize(geomGetEdge(pmmc_s2 outside pdiffa) 0.001)

Executing: err_S11DFa = geomAndNot(pmmc_s3 geomStraddle(pmmc_s3 poly))
	   errorLayer(err_S11DFa "S11DF : Fixed SOURCE / DRAIN-EDGE-STI length = 1.0")

Executing: err_E6P1GA = drc(poly pmmc (enc < 0.5))
	   errorLayer(err_E6P1GA "E6P1GA : Minimum POLY1 extension beyond GATE = 0.5")

Executing: err_O1PDGAa = drc(pmmc_pdf pmmc (ovlp == 0.5))

Executing: err_O1PDGA = geomAndNot(geomAnd(pmmc_pdf pmmc) err_O1PDGAa)
	   errorLayer(err_O1PDGA "O1PDGA : Fixed PDF overlap of GATE = 0.5")

Executing: err_S2P1DP = drc(poly pmmc_psd (sep < 0.5))
	   errorLayer(err_S2P1DP "S2P1DP : Minimum POLY1 spacing to SOURCE / DRAIN NDIFF = 0.5")

Executing: err_W28GA = drc(nhv1 (width < 3.0))
	   errorLayer(err_W28GA "W28GA : Minimum GATE length = 3.0")

Executing: err_W29GA = geomSize(geomGetLength(geomGetEdge(ndf inside nhv1) (keep < 4.0) ...
	   errorLayer(err_W29GA "W29GA : Minimum GATE width = 4.0")

Executing: nhv_nsd = geomInside(nsd nhv_ndf)

Executing: err_S2NDHPbb = drc(nhv_ndf pbd (sep == 0.5))

Executing: err_S2NDHPb = geomAndNot(geomAndNot(geomSize(nhv1 0.5) geomOr(pbd ndf)) err_S...
	   errorLayer(err_S2NDHPb "S2NDHP : Fixed NDF spacing to HVPWELL = 0.5")

Executing: err_S12DF = drc(nhv_nsd nhv1 (sep < 3.0))
	   errorLayer(err_S12DF "S12DF : Fixed DRAIN-EDGE-STI length = 3.0")

Executing: nhv_s1 = geomSize(geomGetEdge(nhv1 inside ndf) 3.0)

Executing: nhv_s2 = geomWidth(nhv_s1 (keep >= 3.0))

Executing: nhv_s3 = geomSize(geomGetEdge(nhv_s2 outside ndiffa) 0.001)

Executing: err_S12DFa = geomAndNot(nhv_s3 geomStraddle(nhv_s3 poly))
	   errorLayer(err_S12DFa "S12DF : Fixed DRAIN-EDGE-STI length = 3.0")

Executing: err_E3P1DN = drc(poly geomStraddle(ndiffa nhv1) (enc < 0.6))
	   errorLayer(err_E3P1DN "E3P1DN : Minimum POLY1 extension beyond NDIFF = 0.6")

Executing: err_S5P1DN = drc(poly nhv_nsd (sep < 2.4))
	   errorLayer(err_S5P1DN "S5P1DN : Minimum POLY1 spacing to DRAIN NDIFF = 2.4")

Executing: nhv_nsd2 = geomSize(nhv_nsd 1.0)

Executing: nhv_nsd1 = geomStraddle(met1 nhv_nsd)

Executing: nhv_nsd3 = geomSize(geomEnclose(met1 nhv_nsd) -1.0)

Executing: nhv_fp_xo1 = geomXor(nhv_nsd nhv_nsd3)

Executing: nhv_fp_xo2 = geomXor(nhv_nsd1 nhv_nsd2)

Executing: err_E2M1DN = geomOr(nhv_fp_xo1 nhv_fp_xo2)
	   errorLayer(err_E2M1DN "E2M1DN : Fixed MET1 overlap of DRAIN NDIFF = 1.0")

Executing: err_W16GA = geomStraddle(nhhv1 drc(geomAndNot(nhhv1 ndf) (width < 3.2)))
	   errorLayer(err_W16GA "W16GA : Minimum GATE length = 5.0")

Executing: err_W17GA = geomSize(geomGetLength(geomGetEdge(ndf inside nhhv1) (keep < 4.0)...
	   errorLayer(err_W17GA "W17GA : Minimum GATE width = 4.0")

Executing: nhhv_nsd = geomInside(nsd nhhv_ndf)

Executing: err_S2NDHPaa = drc(nhhv_ndf pbd (sep == 0.5))

Executing: err_S2NDHPa = geomAndNot(geomAndNot(geomSize(nhhv1 0.5) geomOr(pbd ndf)) err_...
	   errorLayer(err_S2NDHPa "S2NDHP : Fixed NDF spacing to HVPWELL = 0.5")

Executing: err_S7DF = drc(nhhv_nsd nhhv1 (sep < 3.0))
	   errorLayer(err_S7DF "S7DF : Fixed SOURCE / DRAIN-EDGE-STI length = 3.0")

Executing: nhhv_s1 = geomSize(geomGetEdge(nhhv1 inside ndf) 3.0)

Executing: nhhv_s2 = geomWidth(nhhv_s1 (keep >= 3.0))

Executing: nhhv_s3 = geomSize(geomGetEdge(nhhv_s2 outside ndiffa) 0.001)

Executing: err_S7DFa = geomAndNot(nhhv_s3 geomStraddle(nhhv_s3 poly))
	   errorLayer(err_S7DFa "S7DF : Fixed SOURCE / DRAIN-EDGE-STI length = 3.0")

Executing: err_E3P1GA = drc(poly nhhv1 (enc < 0.6))
	   errorLayer(err_E3P1GA "E3P1GA : Minimum POLY1 extension beyond GATE = 0.6")

Executing: err_S3P1DN = drc(poly nhhv_nsd (sep < 2.4))
	   errorLayer(err_S3P1DN "S3P1DN : Minimum POLY1 spacing to SOURCE / DRAIN NDIFF = 2.4")

Executing: nhhv_nsd2 = geomSize(nhhv_nsd 1.0)

Executing: nhhv_nsd1 = geomStraddle(met1 nhhv_nsd)

Executing: nhhv_nsd3 = geomSize(geomEnclose(met1 nhhv_nsd) -1.0)

Executing: nhhv_fp_xo1 = geomXor(nhhv_nsd nhhv_nsd3)

Executing: nhhv_fp_xo2 = geomXor(nhhv_nsd1 nhhv_nsd2)

Executing: err_E1M1DN = geomOr(nhhv_fp_xo1 nhhv_fp_xo2)
	   errorLayer(err_E1M1DN "E1M1DN : Fixed MET1 enclosure of SOURCE / DRAIN NDIFF = 1.0")

Executing: nhvd_s755 = geomSize(nhvd 0.755)

Executing: nhhvd_s755 = geomSize(nhhvd 0.755)

Executing: err_E2HLGA = geomOr(geomAndNot(nhvd_s75 hvdepl) geomAnd(geomAndNot(nhvd_s755 ...
	   errorLayer(err_E2HLGA "E2HLGA : Fixed HVDEPL enclosure of GATE = 0.75")

Executing: err_E1HLGA = geomOr(geomAndNot(nhhvd_s75 hvdepl) geomAnd(geomAndNot(nhhvd_s75...
	   errorLayer(err_E1HLGA "E1HLGA : Fixed HVDEPL enclosure of GATE = 0.75")

Executing: nhv_a1 = geomSize(geomGetEdge(geomGetEdge(nhv1 coincident poly) inside pbd) -...

Executing: nhv_a2 = geomAndNot(nhv_andf nhv_a1)

Executing: nhv_a3 = geomSize(nhv_a2 -0.5 downUp)

Executing: nhv_a4 = geomSize(geomGetEdge(geomGetEdge(nhv1 coincident poly) inside pbd) -...

Executing: nhv_a5 = geomOutside(nhv_a4 nhv_andf)

Executing: nhv_a6 = geomAndNot(geomEnclose(nhv1 nhv_a5) nhv_a5)

Executing: nhv_a7 = geomSize(geomOr(nhhv1 nhv_a6) 1.0)

Executing: nhv_b1 = geomAndNot(nhv_a4 nhv_a1)

Executing: nhv_b2 = geomOr(nhv_b1 geomSize(geomGetEdge(nhv1 coincident nhv_b1) 1.0))

Executing: nhv_a8 = geomOr(nhv_a7 nhv_a3 nhv_b2)

Executing: err_S2NDDPa = drc(geomGetEdge(nhv_andf coincident geomOr(nhv_andf ndf_ex3)) p...
	   errorLayer(err_S2NDDPa "S2NDDP : Fixed NDF spacing to PDIFF = 4.0")

Executing: nhv_a8_s4 = geomSize(nhv_a8 4.0)

Executing: nhv_a8_s45 = geomSize(nhv_a8 4.005)

Executing: err_S2NDDPb = geomGetEdge(nhv_a8_s4 inside pdiffa)
	   errorLayer(err_S2NDDPb "S2NDDP : Fixed NDF spacing to PDIFF = 4.0")

Executing: err_S2NDDPc = geomGetEdge(nhv_a8_s45 outside pdiffa)
	   errorLayer(err_S2NDDPc "S2NDDP : Fixed NDF spacing to PDIFF = 4.0")

Executing: err_O2NDGAa = drc(nhv_andf nhv_a (ovlp == 0.9))

Executing: err_O2NDGA = geomAndNot(geomAnd(nhv_andf nhv_a) err_O2NDGAa)
	   errorLayer(err_O2NDGA "O2NDGA : Fixed NDF overlap of GATE = 0.9")

Executing: err_E3NDNW = drc(nhv_andf nwell (enc < 0.78))
	   errorLayer(err_E3NDNW "E3NDNW : Minimum NDF enclosure of NWELL = 0.78")

Executing: err_S2NWGA = drc(nhv_a nwell (sep < 2.78))
	   errorLayer(err_S2NWGA "S2NWGA : Minimum NWELL spacing to GATE = 2.78")

Executing: err_E3NWDN = drc(nwell geomOr(nhhv_nsd nhv_nsd) (enc < 0.22))
	   errorLayer(err_E3NWDN "E3NWDN : Minimum NWELL enclosure of NDIFF = 0.22")

Executing: err_E3NWDNa = geomAndNot(geomOr(nhhv_nsd nhv_nsd) nwell)
	   errorLayer(err_E3NWDNa "E3NWDN : Minimum NWELL enclosure of NDIFF = 0.22")

Executing: nhv_andf_c3 = geomGetEdge(nhv_andf coincident geomOr(nhhv_g1 nhv_g1 nhv_andf))

Executing: nhv_andf_s = geomSize(geomSize(nhv_andf -0.8) 0.8)

Executing: err_S7NDHPa = drc(nhv_andf_c3 pbd (sep < 3.76))
	   errorLayer(err_S7NDHPa "S7NDHP : Fixed NDF spacing to HVPWELL = 3.76")

Executing: err_S7NDHPaa = geomAndNot(geomSize(geomGetEdge(nhv_a coincident ndiffa inside...
	   errorLayer(err_S7NDHPaa "S7NDHP : Fixed NDF spacing to HVPWELL = 3.76")

Executing: nhv_andf_s3 = geomSize(nhv_andf_s 0.5)

Executing: nhv_andf_s4 = geomOr(geomSize(geomGetEdge(nhv_andf_s3 outside pbd) 3.26 chain...

Executing: err_S7NDHPb = geomAnd(nhv_andf_s4 pbd)
	   errorLayer(err_S7NDHPb "S7NDHP : Fixed NDF spacing to HVPWELL = 3.76")

Executing: err_S7NDHPc = geomAndNot(geomAndNot(geomSize(nhv_andf_s4 0.005) nhv_andf_s4) ...
	   errorLayer(err_S7NDHPc "S7NDHP : Fixed NDF spacing to HVPWELL = 3.76")

Executing: err_S7NDHPd = geomOverlap(nhv_andf_s4 ndf (keep > 1))
	   errorLayer(err_S7NDHPd "S7NDHP : Fixed NDF spacing to HVPWELL = 3.76")

Executing: err_E4PBNDa = drc(pwblk geomGetEdge(nhv_andf coincident geomOr(nhv_andf ndf_e...
	   errorLayer(err_E4PBNDa "E4PBND : Fixed PWBLK enclosure of NDF = 4.0")

Executing: err_E4PBNDb = geomGetEdge(nhv_a8_s4 outside pwblk)
	   errorLayer(err_E4PBNDb "E4PBND : Fixed PWBLK enclosure of NDF = 4.0")

Executing: err_E4PBNDc = geomGetEdge(nhv_a8_s45 inside pwblk)
	   errorLayer(err_E4PBNDc "E4PBND : Fixed PWBLK enclosure of NDF = 4.0")

Executing: err_B1P1GA = geomGetNonRectangle(geomStraddle(poly nhv_a))
	   errorLayer(err_B1P1GA "B1P1GA : Only a rectangular POLY1 over GATE is allowed")

Executing: nhv_aedge1s1 = geomSize(nhv_aedge1 1.2)

Executing: nhv_aedge1s2 = geomSize(nhv_aedge1 1.201)

Executing: err_E5P1GAa = geomGetEdge(nhv_aedge1s1 outside poly)
	   errorLayer(err_E5P1GAa "E5P1GA : Fixed POLY1 extension beyond GATE = 1.2")

Executing: err_E5P1GAb = geomGetEdge(geomAndNot(nhv_aedge1s2 nhv_aedge1s1) inside poly)
	   errorLayer(err_E5P1GAb "E5P1GA : Fixed POLY1 extension beyond GATE = 1.2")

Executing: err_W18GA = drc(phhv (width < 3.5))
	   errorLayer(err_W18GA "W18GA : Minimum GATE length = 3.5")

Executing: err_W19GA = geomSize(geomGetLength(geomGetEdge(pdf inside phhv) (keep < 4.0) ...
	   errorLayer(err_W19GA "W19GA : Minimum GATE width = 4.0")

Executing: err_S4PD = drc(phhv_pdf (sep < 2.5))
	   errorLayer(err_S4PD "S4PD : Minimum PDF spacing (in channel region) = 2.5")

Executing: phhv_psd = geomInside(psd phhv_pdf)

Executing: phv_psd = geomInside(psd phv_pdf)

Executing: err_S8DF = drc(phhv_psd phhv (sep < 2.5))
	   errorLayer(err_S8DF "S8DF : Fixed SOURCE / DRAIN-EDGE-STI length = 2.5")

Executing: phhv_s1 = geomSize(geomGetEdge(phhv inside pdf) 2.5)

Executing: phhv_s2 = geomWidth(phhv_s1 (keep >= 2.5))

Executing: phhv_s3 = geomSize(geomGetEdge(phhv_s2 outside pdiffa) 0.001)

Executing: err_S8DFa = geomAndNot(phhv_s3 geomStraddle(phhv_s3 poly))
	   errorLayer(err_S8DFa "S8DF : Fixed SOURCE / DRAIN-EDGE-STI length = 2.5")

Executing: err_S3P1DP = drc(poly phhv_psd (sep < 1.25))
	   errorLayer(err_S3P1DP "S3P1DP : Minimum POLY1 spacing to SOURCE / DRAIN PDIFF = 1.25")

Executing: err_E4P1GA = drc(poly phhv (enc < 1.25))
	   errorLayer(err_E4P1GA "E4P1GA : Minimum POLY1 extension beyond GATE = 1.25")

Executing: phv_a_pdf = geomOr(phhv_pdf phv_pdf)

Executing: err_O2PDGAa = drc(phv_a_pdf phv_a (ovlp == 0.5))

Executing: err_O2PDGA = geomAndNot(geomAnd(phv_a_pdf phv_a) err_O2PDGAa)
	   errorLayer(err_O2PDGA "O2PDGA : Fixed PDF overlap of GATE = 0.5")

Executing: phv_a_psd1 = geomOr(geomSize(geomGetEdge(phv_a coincident pdiffa outside pdf)...

Executing: err_S3PDND = geomAndNot(geomAndNot(phv_a_psd1 pdf) ndf)
	   errorLayer(err_S3PDND "S3PDND : Fixed PDF spacing to NDF (in channel region) = 0.0")

Executing: err_W32GA = drc(phv (width < 2.0))
	   errorLayer(err_W32GA "W32GA : Minimum GATE length = 2.0")

Executing: err_W33GA = geomSize(geomGetLength(geomGetEdge(phv coincident poly) (keep < 4...
	   errorLayer(err_W33GA "W33GA : Minimum GATE width = 4.0")

Executing: err_S14DFb = drc(phv_psd phv (sep < 2.5))
	   errorLayer(err_S14DFb "S14DF : Fixed DRAIN-EDGE-STI length = 2.5")

Executing: phv_s1 = geomSize(geomGetEdge(phv inside pdf) 2.5)

Executing: phv_s2 = geomWidth(phv_s1 (keep >= 2.5))

Executing: phv_s3 = geomSize(geomGetEdge(phv_s2 outside pdiffa) 0.001)

Executing: err_S14DFba = geomAndNot(phv_s3 geomStraddle(phv_s3 poly))
	   errorLayer(err_S14DFba "S14DF : Fixed DRAIN-EDGE-STI length = 2.5")

Executing: err_S5P1DP = drc(poly phv_psd (sep < 1.25))
	   errorLayer(err_S5P1DP "S5P1DP : Minimum POLY1 spacing to DRAIN PDIFF = 1.25")

Executing: err_E3P1DP = drc(poly geomStraddle(pdiffa phv) (enc < 1.25))
	   errorLayer(err_E3P1DP "E3P1DP : Minimum POLY1 extension beyond PDIFF = 1.25")

Executing: err_W20GA = drc(nma (width < 1.0))
	   errorLayer(err_W20GA "W20GA : Minimum GATE length = 1.0")

Executing: err_W21GA = geomSize(geomGetLength(geomGetEdge(nma coincident poly) (keep < 2...
	   errorLayer(err_W21GA "W21GA : Minimum GATE width = 2.5")

Executing: err_W22GA = drc(pma (width < 1.0))
	   errorLayer(err_W22GA "W22GA : Minimum GATE length = 1.0")

Executing: err_W23GA = geomSize(geomGetLength(geomGetEdge(pma coincident poly) (keep < 2...
	   errorLayer(err_W23GA "W23GA : Minimum GATE width = 2.5")

Executing: err_W26GA = drc(pmc (width < 1.3))
	   errorLayer(err_W26GA "W26GA : Minimum GATE length = 1.3")

Executing: err_W27GA = geomSize(geomGetLength(geomGetEdge(pmc coincident poly) (keep < 3...
	   errorLayer(err_W27GA "W27GA : Minimum GATE width = 3.0")

Executing: err_W3PD = drc(pmc_pdf (width < 3.02))
	   errorLayer(err_W3PD "W3PD : Minimum PDF width = 3.02")

Executing: err_E3PDDP = drc(pmc_pdf pdiffa (enc < 1.1))
	   errorLayer(err_E3PDDP "E3PDDP : Minimum PDF enclosure of PDIFF = 1.1")

Executing: pmc_psd1 = geomAndNot(geomSize(geomButtOnly(psd pmc) 1.1) poly)

Executing: err_S2PDND = geomAndNot(geomAndNot(pmc_g1 geomOr(pdf ndf)) pmc_psd1)
	   errorLayer(err_S2PDND "S2PDND : Fixed PDF spacing to NDF (in channel region) = 0.0")

Executing: pmc_psd = geomInside(psd pmc_pdf)

Executing: err_S10DF = drc(pmc_psd pmc (sep < 1.0))
	   errorLayer(err_S10DF "S10DF : Fixed DRAIN-EDGE-STI length = 1.0")

Executing: pmc_s1 = geomSize(geomGetEdge(pmc inside pdf) 1.0)

Executing: pmc_s2 = geomWidth(pmc_s1 (keep >= 1.0))

Executing: pmc_s3 = geomSize(geomGetEdge(pmc_s2 outside pdiffa) 0.001)

Executing: err_S10DFa = geomAndNot(pmc_s3 geomStraddle(pmc_s3 poly))
	   errorLayer(err_S10DFa "S10DF : Fixed DRAIN-EDGE-STI length = 1.0")

Executing: err_E2P1DP = drc(poly geomStraddle(pdiffa pmc) (enc < 0.5))
	   errorLayer(err_E2P1DP "E2P1DP : Minimum POLY1 extension beyond PDIFF = 0.5")

Executing: err_O3PDGAa = drc(pmc_pdf pmc (ovlp == 0.5))

Executing: err_O3PDGA = geomAndNot(geomAnd(pmc_pdf pmc) err_O3PDGAa)
	   errorLayer(err_O3PDGA "O3PDGA : Fixed PDF overlap of GATE = 0.5")

Executing: err_S4P1DP = drc(poly pmc_psd (sep < 0.5))
	   errorLayer(err_S4P1DP "S4P1DP : Minimum POLY1 spacing to DRAIN PDIFF = 0.5")

Executing: dpho_ex_ab = geomAndNot(phodef geomGetBBox(geomSize(dphoab 0.5)))

Executing: err_Q1D1 = geomAndNot(dpho_ex_ab davl_ex3)
	   errorLayer(err_Q1D1 "Q1D1 : Check for the right usage of the layer PHODEF")

Executing: err_B1D1 = geomAndNot(dpho_ex_ab dio_mark)
	   errorLayer(err_B1D1 "B1D1 : PHODEF without DIODEF is not allowed")

Executing: err_B2D1 = geomAndNot(geomAndNot(dpho_ex_ab blkall) geomAndNot(davl_ex3 davl_...
	   errorLayer(err_B2D1 "B2D1 : PHODEF without BLKALL is not allowed")

Executing: davl_x1 = geomAnd(davl_e31 pdiffa)

Executing: davl_x2 = geomAnd(geomAndNot(davl_ex3 davl_e31) ndiffa)

Executing: davl_x3 = geomOr(davl_x1 davl_x2)

Executing: err_B3D1 = geomAndNot(geomAndNot(geomAndNot(geomAnd(phodio diff) geomSize(geo...
	   errorLayer(err_B3D1 "B3D1 : PHODEF and DIFF without SBLK is not allowed (except DIFFCON sized by 0.5um, davl#)")

Executing: err_B1D1DF = geomAndNot(geomAndNot(geomAndNot(geomAnd(dpho_ex_ab diff) implan...
	   errorLayer(err_B1D1DF "B1D1DF : PHODEF and DIFF without NIMP or PIMP or SBLK is not allowed")

Executing: err_W1DFD1 = geomGetBBox(geomStraddle(diff phodef) (502 < length) outputInLayer)
	   errorLayer(err_W1DFD1 "W1DFD1 : Maximum (DIFF overlap of PHODEF) bounding box size = 502 x 502")

Executing: phod_sb = geomAnd(phodef sab)

Executing: davla_gate = geomAnd(davla_ex1 gate)

Executing: err_O1SBIN = drc(geomAndNot(phod_sb davla_gate) nimp (ovlp < 0.22))
	   errorLayer(err_O1SBIN "O1SBIN : Minimum PHODEF and SBLK overlap of NIMP")

Executing: err_O1SBIP = drc(phod_sb pimp (ovlp < 0.22))
	   errorLayer(err_O1SBIP "O1SBIP : Minimum PHODEF and SBLK overlap of PIMP")

Executing: err_B1UV = geomAnd(uvwin geomOr(pad geomOr(met3 mtp)))
	   errorLayer(err_B1UV "B1UV : UVWIN overlap of MET3, METTP, PAD is not allowed")

Executing: uvwin_i = geomAnd(uvwin geomOr(geomSize(catdop -0.889) geomSize(anodop -0.889)))

Executing: err_B2UV = geomAndNot(geomAnd(uvwin_i poly) geomOr(dphocfp dphodfp))
	   errorLayer(err_B2UV "B2UV : POLY1 overlap of UVWIN is not allowed")

Executing: err_B3UV = geomAndNot(uvwin geomOr(dpho_uvnw davlb_al))
	   errorLayer(err_B3UV "B3UV : UVWIN is only allowed for dphoc#, dphod#, davlb#")

Executing: err_B4UV = geomAndNot(uvwin blkall)
	   errorLayer(err_B4UV "B4UV : UVWIN without BLKALL is not allowed")

Executing: err_W1UV = drc(uvwin (width < 3.0))
	   errorLayer(err_W1UV "W1UV : Minimum UVWIN width = 3.0")

Executing: err_W2UV = geomGetBBox(uvwin (500 < length) outputInLayer)
	   errorLayer(err_W2UV "W2UV : Maximum UVWIN bounding box size = 500.0 x 500.0")

Executing: err_W1DFUV = geomGetBBox(geomStraddle(diff uvwin) (502 < length) outputInLayer)
	   errorLayer(err_W1DFUV "W1DFUV : Maximum (DIFF overlap of UVWIN) bounding box size = 502 x 502")

Executing: err_S1UVM3 = drc(uvwin met3 (sep < 1.5))
	   errorLayer(err_S1UVM3 "S1UVM3 : Minimum UVWIN spacing to MET3 = 1.5")

Executing: err_S1UVMT = drc(uvwin mtp (sep < 2))
	   errorLayer(err_S1UVMT "S1UVMT : Minimum UVWIN spacing to METTP = 2.0")

Executing: err_S1UV = drc(uvwin (sepNotch < 3))
	   errorLayer(err_S1UV "S1UV : Minimum UVWIN spacing/notch = 3.0")

Executing: err_S1UVPA = drc(uvwin pad (sep < 5))
	   errorLayer(err_S1UVPA "S1UVPA : Minimum UVWIN spacing to PAD = 5.0")

Executing: err_E1BAUV = drc(blkall uvwin (enc < 2.0))
	   errorLayer(err_E1BAUV "E1BAUV : Minimum BLKALL enclosure of UVWIN = 2.0")

Executing: err_B1OA = geomAndNot(anodop dphod_a)
	   errorLayer(err_B1OA "B1OA : ANODOP is only allowed for dphod#")

Executing: err_W1OA = drc(anodop (width < 0.44))
	   errorLayer(err_W1OA "W1OA : Minimum ANODOP width = 0.44")

Executing: err_S1OA = drc(anodop (sepNotch < 0.44))
	   errorLayer(err_S1OA "S1OA : Minimum ANODOP spacing/notch = 0.44")

Executing: err_A1OA = drc(anodop (area < 0.3844))
	   errorLayer(err_A1OA "A1OA : Minimum ANODOP area = 0.3844")

Executing: err_B1OC = geomAndNot(catdop geomOr(dphoc_a davl_ex2))
	   errorLayer(err_B1OC "B1OC : CATDOP is only allowed for dphoc#, davl#")

Executing: err_W1OC = drc(catdop (width < 0.44))
	   errorLayer(err_W1OC "W1OC : Minimum CATDOP width = 0.44")

Executing: err_S1OC = drc(catdop (sepNotch < 0.44))
	   errorLayer(err_S1OC "S1OC : Minimum CATDOP spacing/notch = 0.44")

Executing: err_A1OC = drc(catdop (area < 0.3844))
	   errorLayer(err_A1OC "A1OC : Minimum CATDOP area = 0.3844")

Executing: err_E1OCDF = drc(catdop diff (enc < 0.18))
	   errorLayer(err_E1OCDF "E1OCDF : Minimum CATDOP extension beyond DIFF = 0.18")

Executing: err_W1AM = drc(aml (width < 1.0))
	   errorLayer(err_W1AM "W1AM : Minimum AML width = 1.0")

Executing: err_S1AM = drc(aml (sepNotch < 1.0))
	   errorLayer(err_S1AM "S1AM : Minimum AML spacing/notch = 1.0")

Executing: err_A1AM = drc(aml (area < 4.0))
	   errorLayer(err_A1AM "A1AM : Minimum AML area = 4.0")

Executing: err_B1AM = geomAndNot(aml davl_all)
	   errorLayer(err_B1AM "B1AM : AML is only allowed for davl#")

Executing: err_B2AM = geomAndNot(aml catdiff)
	   errorLayer(err_B2AM "B2AM : AML without CATDIFF is not allowed")

Executing: sblk_dpho = geomAnd(sab geomOr(dphoa dphob))

Executing: sblk_davla = geomEnclose(davl_a13 davla_a)

Executing: sblk_dp = geomOr(sblk_dpho sblk_davla)

Executing: err_B1SB = geomAnd(sblk_dp geomOr(met1 met2 met3 met4 mtp mtpl))
	   errorLayer(err_B1SB "B1SB : SBLK overlap of MET1, MET2, MET3, MET4, MET5, METTP or METTPL is not allowed")

Executing: davl_bs1 = geomEnclose(davl_a13 davlb_a)

Executing: davl_bs2 = geomAnd(davl_bs1 aml)

Executing: davl_bsb = geomAndNot(davl_bs2 poly)

Executing: err_B3SB = geomAnd(davl_bsb geomOr(met1 met2 met3 met4 mtp mtpl))
	   errorLayer(err_B3SB "B3SB : (SBLK and AML and not POLY1) overlap of MET1, MET2, MET3, MET4, MET5, METTP or METTPL is not allowed")

Executing: davla_sb = geomAnd(davla_al sab)

Executing: davlb_aml = geomAnd(davlb_al aml)

Executing: davlb_sb = geomAnd(geomAnd(davlb_al aml) sab)

Executing: err_B2SB = geomAndNot(geomOr(sblk_dpho davla_sb) blkall)
	   errorLayer(err_B2SB "B2SB : SBLK without BLKALL is not allowed")

Executing: err_E1BASB = drc(blkall davla_sb (enc < 1.7))
	   errorLayer(err_E1BASB "E1BASB : Minimum BLKALL enclosure of SBLK = 1.7")

Executing: err_B4SB = geomAndNot(davlb_sb blkall)
	   errorLayer(err_B4SB "B4SB : (SBLK and AML) without BLKALL is not allowed")

Executing: err_E2BASB = drc(blkall davlb_sb (enc < 1.7))
	   errorLayer(err_E2BASB "E2BASB : Minimum BLKALL enclosure of (SBLK and AML) = 1.7")

Executing: davla_aml = geomAnd(davla_al aml)

Executing: err_B3AM = geomAndNot(davla_aml sab)
	   errorLayer(err_B3AM "B3AM : AML without SBLK is not allowed")

Executing: err_B4AM = geomAndNot(davlb_aml catdiff)
	   errorLayer(err_B4AM "B4AM : AML without CATDIFF is not allowed")

Executing: err_E1DCAM = drc(catdiff davla_aml (enc < 1.0))
	   errorLayer(err_E1DCAM "E1DCAM : Minimum CATDIFF enclosure of AML = 1.0")

Executing: err_E2DCAM = drc(catdiff davlb_aml (enc < 0.44))
	   errorLayer(err_E2DCAM "E2DCAM : Minimum CATDIFF enclosure of AML = 0.44")

Executing: err_B1PBDC = geomAndNot(davl_cdf pwblk)
	   errorLayer(err_B1PBDC "B1PBDC : CATDIFF without PWBLK is not allowed")

Executing: err_E1PBDC = drc(pwblk davla_cdf (enc < 4.5))
	   errorLayer(err_E1PBDC "E1PBDC : Minimum PWBLK enclosure of CATDIFF = 4.5")

Executing: err_E2PBDC = drc(pwblk davlb_cdf (enc < 1.46))
	   errorLayer(err_E2PBDC "E2PBDC : Minimum PWBLK enclosure of CATDIFF = 1.46")

Executing: davla_ex11 = geomEnclose(davla_ex3 geomOr(dapda0 dspada0))

Executing: davla_ex12 = geomAnd(davla_ex11 via1)

Executing: davla_ex13 = geomHoles(davla_ex12 innermost)

Executing: davla_ex14 = geomAnd(davla_ex13 met1)

Executing: davla_ex15 = geomAnd(geomInside(davla_ex13 davla_ex14) geomInside(davla_ex14 ...

Executing: err_B6M2 = geomAndNot(geomAndNot(davla_ex11 met2) davla_ex15)
	   errorLayer(err_B6M2 "B6M2 : dapda0/dspada0 without MET2 is not allowed")

Executing: davlb_ex11 = geomSize(geomOr(geomEnclose(davlb_ex3 dapb0) geomEnclose(davlb_e...

Executing: davlb_ex12 = geomAnd(davlb_ex11 via1)

Executing: davlb_ex13 = geomHoles(davlb_ex12 innermost)

Executing: davlb_ex14 = geomAnd(davlb_ex13 met1)

Executing: davlb_ex15 = geomAnd(geomInside(davlb_ex13 davlb_ex14) geomInside(davlb_ex14 ...

Executing: err_B7M2 = geomAndNot(geomAndNot(davlb_ex11 met2) davlb_ex15)
	   errorLayer(err_B7M2 "B7M2 : dapb0/dspb0 without MET2 is not allowed")

Executing: davla_ex21 = geomSize(davla_e32 6.165)

Executing: err_B3NW = geomGetEdge(davla_ex21 not_over nwell)
	   errorLayer(err_B3NW "B3NW : dapda/dapda0 without NWELL ring is not allowed")

Executing: davlb_ex21 = geomSize(dapd_b1 0.75)

Executing: err_B4NW = geomGetEdge(davlb_ex21 not_over nwell)
	   errorLayer(err_B4NW "B4NW : dapb/dapb0 without NWELL ring is not allowed")

Executing: drc(gate (width < 0.18) "W4P1 : Minimum GATE length = 0.18")

Executing: err_W3DF = geomSize(geomGetLength(geomGetEdge(gate coincident poly) (keep < 0...
	   errorLayer(err_W3DF "W3DF : Minimum GATE width = 0.22")

Executing: ndiffa_mv = geomAnd(ndiffa mv)

Executing: pdiffa_mv = geomAnd(pdiffa mv)

Executing: ngate_mv_edge = geomGetEdge(geomOr(nem ngate_mv_i) inside ndiffa_mv)

Executing: pgate_mv_edge = geomGetEdge(geomOr(pgate_mv pgate_mv_w) inside pdiffa_mv)

Executing: err_W6P1 = drc(ngate_mv_edge (width < 0.35) (shielded gate))
	   errorLayer(err_W6P1 "W6P1 : Minimum GATE length = 0.35")

Executing: err_W7P1 = drc(pgate_mv_edge (width < 0.3) (shielded gate))
	   errorLayer(err_W7P1 "W7P1 : Minimum GATE length = 0.3")

Executing: pgate_all4_edge = geomGetEdge(pgate_all4 inside pdiffa_mv)

Executing: err_W9P1 = drc(pgate_all4_edge (width < 0.5) (shielded gate))
	   errorLayer(err_W9P1 "W9P1 : Minimum GATE length = 0.5")

Executing: ngate_nn3_edge = geomGetEdge(nnm inside ndiffa_mv)

Executing: err_W5P1 = drc(ngate_nn3_edge (width < 1.0) (shielded gate))
	   errorLayer(err_W5P1 "W5P1 : Minimum GATE length = 1.0")

Executing: err_W4DF = geomSize(geomGetLength(geomGetEdge(nnm coincident poly) (keep < 1....
	   errorLayer(err_W4DF "W4DF : Minimum GATE width = 1.0")

Executing: err_B3GA = geomGetNonRectangle(nnm)
	   errorLayer(err_B3GA "B3GA : Only rectangular GATE inside PWBLK is allowed")

Executing: ngate_dpl_edge = geomGetEdge(dplngate_all inside ndiffa_mv)

Executing: err_W1GA = drc(ngate_dpl_edge (width < 0.7) (shielded gate))
	   errorLayer(err_W1GA "W1GA : Minimum GATE length = 0.7")

Executing: drc(dplngate_all (width < 0.44) "W2GA : Minimum GATE width = 0.44")

Executing: nemlna_edge = geomGetEdge(geomOr(nemlna nemlnai) inside ndiffa_mv)

Executing: pemlna_edge = geomGetEdge(geomOr(pemlna pemlnai) inside pdiffa_mv)

Executing: err_W10P1 = drc(nemlna_edge (width < 0.35) (shielded gate))
	   errorLayer(err_W10P1 "W10P1 : Minimum GATE length = 0.35")

Executing: err_W11P1 = drc(pemlna_edge (width < 0.3) (shielded gate))
	   errorLayer(err_W11P1 "W11P1 : Minimum GATE length = 0.3")

Executing: mosvc_all = geomOr(mosvc1 mosvci2)

Executing: mosvc1_edge = geomGetEdge(mosvc1 inside ndiffa)

Executing: mosvci2_edge = geomGetEdge(mosvci2 inside pdiffa)

Executing: err_B4GA = geomGetNonRectangle(mosvc_all)
	   errorLayer(err_B4GA "B4GA : Only rectangular GATE is allowed")

Executing: err_W38GA = drc(mosvc1_edge (width < 2.0))
	   errorLayer(err_W38GA "W38GA : Minimum GATE length = 2.0")

Executing: err_W38GAa = drc(mosvci2_edge (width < 2.0))
	   errorLayer(err_W38GAa "W38GA : Minimum GATE length = 2.0")

Executing: err_W39GA = drc(mosvc_all (width < 2.0))
	   errorLayer(err_W39GA "W39GA : Minimum GATE width = 2.0")

Executing: err_B2M1 = geomAnd(geomOr(cont via1) met1res)
	   errorLayer(err_B2M1 "B2M1 : CONT or VIA1 are not allowed within rm1")

Executing: err_B2M2 = geomAnd(via1 met2res)
	   errorLayer(err_B2M2 "B2M2 : VIA1 is not allowed within rm2")

Executing: err_B4M2 = geomAnd(via2 met2res)
	   errorLayer(err_B4M2 "B4M2 : VIA2 is not allowed within rm2")

Executing: err_B2M3 = geomAnd(via2 met3res)
	   errorLayer(err_B2M3 "B2M3 : VIA2 is not allowed within rm3")

Executing: err_B2MT = geomAnd(vtp mtpres)
	   errorLayer(err_B2MT "B2MT : VIATP is not allowed within rmtp")

Executing: err_B4M3 = geomAnd(via3 met3res)
	   errorLayer(err_B4M3 "B4M3 : VIA3 is not allowed within rm3")

Executing: err_B2M4 = geomAnd(via3 met4res)
	   errorLayer(err_B2M4 "B2M4 : VIA3 is not allowed within rm4")

Executing: err_B3M4 = geomAnd(vtp met4res)
	   errorLayer(err_B3M4 "B3M4 : VIATP is not allowed within rm4")

Executing: err_B3MT = geomAnd(vtpl mtpres)
	   errorLayer(err_B3MT "B3MT : VIATPL is not allowed within rmtp")

Executing: err_B2ML = geomAnd(vtpl mtplres)
	   errorLayer(err_B2ML "B2ML : VIATPL is not allowed within rmtpl")

Executing: ndifres_iso = geomAndNot(geomAndNot(geomAnd(nsdg sab1) geomOr(qnv_all scr_dhp...

Executing: err_B1DN = geomAnd(ndifres_iso isopwell)
	   errorLayer(err_B1DN "B1DN : rdn/rdn3 inside ISOPW, DEPL, SCI, HVPWELL, PDD or PDF is not allowed")

Executing: err_B2GH = geomOr(geomAnd(ndifres gxh) geomAnd(pdifres gxh))
	   errorLayer(err_B2GH "B2GH : HVGOX overlap of rdn or rdp is not allowed")

Executing: err_W5DFa = drc(geomOr(ndifres0 ndifres0_iso) (width < 0.42))

Executing: rdp_edge = geomSize(geomGetEdge(pdifres0 coincident pdiffa) 0.001)

Executing: err_W5DFbb = drc(rdp_edge (sep < 0.42) opposite)

Executing: err_W5DFb = geomAnd(err_W5DFbb pdifres0)

Executing: err_W5DF = geomOr(err_W5DFa err_W5DFb)
	   errorLayer(err_W5DF "W5DF : Minimum rdn/rdn3, rdp/rdp3 width = 0.42")

Executing: err_B2CT = geomAnd(polyres_ps cont)
	   errorLayer(err_B2CT "B2CT : CONT is not allowed within rpp1s#")

Executing: err_B5P1 = geomOr(geomStraddle(rnp1_3 nwellniso) geomStraddle(rnp1_3 subcut))
	   errorLayer(err_B5P1 "B5P1 : rnp1_3 crossing NTYPE_WELL or PTYPE_WELL or SUBCUT edge is not allowed")

Executing: err_B6P1 = geomAnd(rnp1_3 geomOr(resnwell1 resdnwellmv))
	   errorLayer(err_B6P1 "B6P1 : rnp1_3 overlap rnw/rnw3/rdnwmv is not allowed")

Executing: err_B7P1 = geomOr(geomStraddle(rpp1_3 nwellniso) geomStraddle(rpp1_3 subcut))
	   errorLayer(err_B7P1 "B7P1 : rpp1_3 crossing NTYPE_WELL or PTYPE_WELL or SUBCUT edge is not allowed")

Executing: err_B8P1 = geomAnd(rpp1_3 geomOr(resnwell1 resdnwellmv))
	   errorLayer(err_B8P1 "B8P1 : rpp1_3 overlap rnw/rnw3/rdnwmv is not allowed")

Executing: err_B9P1 = geomOr(geomStraddle(rpp1s_3 nwellniso) geomStraddle(rpp1s_3 subcut))
	   errorLayer(err_B9P1 "B9P1 : rpp1s_3 crossing NTYPE_WELL or PTYPE_WELL or SUBCUT edge is not allowed")

Executing: err_B10P1 = geomAnd(rpp1s_3 geomOr(resnwell1 resdnwellmv))
	   errorLayer(err_B10P1 "B10P1 : rpp1s_3 overlap rnw/rnw3/rdnwmv is not allowed")

Executing: err_W3P1a = drc(polyres_n (width < 0.42))

Executing: err_W3P1b = drc(polyres_p (width < 0.42))

Executing: err_W3P1 = geomOr(err_W3P1a err_W3P1b)
	   errorLayer(err_W3P1 "W3P1 : Minimum rnp1#, rpp1# width = 0.42")

Executing: drc(nimp polyres_n (enc < 0.18) "E1INP1 : Minimum NIMP extension beyond rnp1#...

Executing: drc(pimp geomOr(polyres_p polyres_ps) (enc < 0.18) "E1IPP1 : Minimum PIMP ext...

Executing: drc(nimp geomOr(polyres_p polyres_ps) (sep < 0.26) "S1INP1 : Minimum NIMP spa...

Executing: drc(pimp polyres_n (sep < 0.26) "S1IPP1 : Minimum PIMP spacing to rnp1# = 0.26")

Executing: err_B1HR = geomAnd(hres diff)
	   errorLayer(err_B1HR "B1HR : HRES overlap of DIFF is not allowed")

Executing: err_B2HR = geomAnd(polyres_ho nimp)
	   errorLayer(err_B2HR "B2HR : NIMP overlap of rnp1h# (resistor body) is not allowed")

Executing: err_B3HR = geomAnd(hres pimp)
	   errorLayer(err_B3HR "B3HR : PIMP overlap of HRES is not allowed")

Executing: err_B4HR = geomStraddle(poly hres)
	   errorLayer(err_B4HR "B4HR : POLY1 crossing HRES edge is not allowed")

Executing: err_B6HR = geomStraddle(nimp hres)
	   errorLayer(err_B6HR "B6HR : NIMP crossing HRES edge is not allowed")

Executing: err_B7HR = geomAnd(polyres_ho met1)
	   errorLayer(err_B7HR "B7HR : MET1 overlap of rnp1h# (resistor body) is not allowed")

Executing: err_B10HR = geomOr(geomStraddle(rnp1h_3 nwellniso) geomStraddle(rnp1h_3 subcut))
	   errorLayer(err_B10HR "B10HR : rnp1h_3 crossing NTYPE_WELL or PTYPE_WELL or SUBCUT edge is not allowed")

Executing: err_B11HR = geomAnd(rnp1h_3 geomOr(resnwell1 resdnwellmv))
	   errorLayer(err_B11HR "B11HR : rnp1h_3 overlap rnw/rnw3/rdnwmv is not allowed")

Executing: err_W1HR = drc(hres (width < 0.44))
	   errorLayer(err_W1HR "W1HR : Minimum HRES width = 0.44")

Executing: err_W2HR = drc(polyres_ho (width < 0.42))
	   errorLayer(err_W2HR "W2HR : Minimum rnp1h# width = 0.42")

Executing: err_W3HR = geomGetLength(geomGetEdge(polyres_ho coincident poly) (keep < 5.0)...
	   errorLayer(err_W3HR "W3HR : Minimum rnp1h# length = 5.0")

Executing: drc(hres (sepNotch < 0.44) "S1HR : Minimum HRES spacing/notch = 0.44")

Executing: drc(hres diff (sep < 0.32) "S1HRDF : Minimum HRES spacing to DIFF = 0.32")

Executing: drc(hres poly (sep < 0.32) "S1HRP1 : Minimum HRES spacing to POLY1 = 0.32")

Executing: drc(hres nimp (sep < 0.44) shielded "S1HRIN : Minimum HRES spacing to NIMP = ...

Executing: drc(hres pimp (sep < 0.44) "S1HRIP : Minimum HRES spacing to PIMP = 0.44")

Executing: drc(hres poly (enc < 0.18) "E1HRP1 : Minimum HRES enclosure of POLY1 = 0.18")

Executing: polyresm_ho = geomOverlap(poly polyres_ho)

Executing: polyres_ho_t = geomAndNot(polyresm_ho polyres_ho)

Executing: drc(nimp polyresm_ho (enc < 0.18) "E2INP1 : Minimum NIMP extension beyond POL...

Executing: drc(nimp polyresm_ho (sep < 0.18) "S2INP1 : Minimum NIMP (in SBLK) spacing to...

Executing: err_B5HR = geomAndNot(polyres_ho_t nimp)
	   errorLayer(err_B5HR "B5HR : rnp1h# terminal without NIMP is not allowed")

Executing: err_A1MR = drc(mres (area < 0.3844))
	   errorLayer(err_A1MR "A1MR : Minimum MRES area < 0.3844")

Executing: err_B1MR = geomAnd(mres diff)
	   errorLayer(err_B1MR "B1MR : MRES overlap of DIFF is not allowed")

Executing: err_B2MR = geomAndNot(mres sab)
	   errorLayer(err_B2MR "B2MR : MRES without SBLK is not allowed")

Executing: err_B3MR = geomAnd(mres implant)
	   errorLayer(err_B3MR "B3MR : MRES overlap of NIMP or PIMP is not allowed")

Executing: err_W1MR = drc(mres (width < 0.44))
	   errorLayer(err_W1MR "W1MR : Minimum MRES width = 0.44")

Executing: drc(mres (sepNotch < 0.44) "S1MR : Minimum MRES spacing / notch = 0.44")

Executing: drc(mres diff (sep < 0.32) "S1MRDF : Minimum MRES spacing to DIFF = 0.32")

Executing: drc(mres poly (sep < 0.32) "S1MRP1 : Minimum MRES spacing to POLY1 = 0.32")

Executing: err_B4MR = geomAnd(hres mres)
	   errorLayer(err_B4MR "B4MR : HRES overlap of MRES is not allowed")

Executing: err_B6MR = geomOr(geomStraddle(rpp1k1_3 nwellniso) geomStraddle(rpp1k1_3 subc...
	   errorLayer(err_B6MR "B6MR : rpp1k1_3 crossing NTYPE_WELL or PTYPE_WELL or SUBCUT edge is not allowed")

Executing: err_B7MR = geomAnd(rpp1k1_3 geomOr(resnwell1 resdnwellmv))
	   errorLayer(err_B7MR "B7MR : rpp1k1_3 overlap of rnw/rnw3/rdnwmv is not allowed")

Executing: rpp1k1_edge = geomGetEdge(rpp1k1 coincident poly)

Executing: err_W16P1a = drc(rpp1k1_edge (sep < 0.42) opposite)

Executing: err_W16P1 = geomAnd(err_W16P1a rpp1k1)
	   errorLayer(err_W16P1 "W16P1 : Minimum rpp1k1# width = 0.42")

Executing: err_E1MRP1 = drc(mres geomGetEdge(rpp1k1 coincident poly) (enc < 0.18))
	   errorLayer(err_E1MRP1 "E1MRP1 : Minimum MRES extension beyond rpp1k1# = 0.18")

Executing: rp_ext = geomSize(geomGetEdge(rpp1k1 inside poly) 0.22)

Executing: err_E1SBMR = geomXor(rp_ext geomAndNot(geomAnd(geomOverlap(poly mres) sab) rp...
	   errorLayer(err_E1SBMR "E1SBMR : Fixed SBLK extension beyond MRES in direction of POLY1 = 0.22")

Executing: err_E2IPP1 = drc(pimp geomGetEdge(rp_ext outside rpp1k1) (enc < 0.18))
	   errorLayer(err_E2IPP1 "E2IPP1 : Minimum PIMP extension beyond rpp1k1_ext = 0.18")

Executing: err_E2IPP1a = geomAndNot(rp_ext pimp)
	   errorLayer(err_E2IPP1a "E2IPP1 : Minimum PIMP extension beyond rpp1k1_ext = 0.18")

Executing: err_S3INP1 = drc(nimp geomOr(rpp1k1 rp_ext) (sep < 0.26))
	   errorLayer(err_S3INP1 "S3INP1 : Minimum NIMP spacing to rpp1k1# or rpp1k1_ext = 0.26")

Executing: N_CT_pfuse = geomAnd(pfuse12 cont)
	   errorLayer(N_CT_pfuse "N_CT : Predefined area must not have CONT")

Executing: err_B2P1a = geomAnd(pfuse met1)

Executing: err_B2P1b = geomAnd(pfuse met2)

Executing: err_B2P1c = geomAnd(pfuse met3)

Executing: err_B2P1f = geomAnd(pfuse mtp)

Executing: err_B2P1d = geomAnd(pfuse met4)

Executing: err_B2P1g = geomAnd(pfuse mtpl)

Executing: err_B2P1 = geomOr(err_B2P1a err_B2P1b err_B2P1c err_B2P1d err_B2P1f err_B2P1g)
	   errorLayer(err_B2P1 "B2P1 : pfuse overlap of MET1, MET2, MET3, MET4, METTP or METTPL is not allowed")

Executing: err_B3P1 = geomAnd(pfuse geomOr(sab diff))
	   errorLayer(err_B3P1 "B3P1 : pfuse overlap of SBLK or DIFF is not allowed")

Executing: err_B4P1b = geomAndNot(pfuse blkall)

Executing: err_B4P1c = geomAndNot(pfuse nimp)

Executing: err_B4P1 = geomOr(err_B4P1b err_B4P1c)
	   errorLayer(err_B4P1 "B4P1 : pfuse without NIMP and BLKALL is not allowed")

Executing: pfuse_nw1 = geomStraddle(nwell pfuse)

Executing: err_E1NWP1 = geomXor(pfuse_nw1 pfuse_nw2)
	   errorLayer(err_E1NWP1 "E1NWP1 : Fixed NWELL enclosure of pfuse = 1.7")

Executing: err_E1BAP1 = drc(blkall pfuse (enc < 1.7))
	   errorLayer(err_E1BAP1 "E1BAP1 : Minimum BLKALL enclosure of pfuse = 1.7")

Executing: err_E3INP1 = drc(nimp geomStraddle(poly pfuse) (enc < 0.3))
	   errorLayer(err_E3INP1 "E3INP1 : Minimum NIMP enclosure of POLY1 = 0.3")

Executing: pfuse_edge = geomGetEdge(pfuse coincident poly)

Executing: err_S1DFP1 = drc(diff pfuse (sep < 2.0))
	   errorLayer(err_S1DFP1 "S1DFP1 : Minimum DIFF spacing to pfuse = 2.0")

Executing: err_S2SBP1 = drc(sab pfuse (sep < 2.0))
	   errorLayer(err_S2SBP1 "S2SBP1 : Minimum SBLK spacing to pfuse = 2.0")

Executing: err_S2P1 = drc(pfuse_edge poly (sep < 2.0))
	   errorLayer(err_S2P1 "S2P1 : Minimum POLY1 spacing to pfuse = 2.0")

Executing: err_S1M1P1 = drc(met1 pfuse_edge (sep < 0.8))
	   errorLayer(err_S1M1P1 "S1M1P1 : Minimum MET1 spacing to pfuse = 0.8")

Executing: err_S1M2P1 = drc(met2 pfuse_edge (sep < 0.8))
	   errorLayer(err_S1M2P1 "S1M2P1 : Minimum MET2 spacing to pfuse = 0.8")

Executing: err_S1M3P1 = drc(met3 pfuse_edge (sep < 1.7))
	   errorLayer(err_S1M3P1 "S1M3P1 : Minimum MET3 spacing to pfuse = 1.7")

Executing: err_S1MTP1 = drc(mtp pfuse_edge (sep < 1.7))
	   errorLayer(err_S1MTP1 "S1MTP1 : Minimum METTP spacing to pfuse = 1.7")

Executing: err_S1M4P1 = drc(met4 pfuse_edge (sep < 1.7))
	   errorLayer(err_S1M4P1 "S1M4P1 : Minimum MET4 spacing to pfuse = 1.7")

Executing: err_S1MLP1 = drc(mtpl pfuse_edge (sep < 1.7))
	   errorLayer(err_S1MLP1 "S1MLP1 : Minimum METTPL spacing to pfuse = 1.7")

Executing: err_B4DF = geomOr(d_dsb)
	   errorLayer(err_B4DF "B4DF : Check for dsb usage")

Executing: err_B11P1 = geomGetNonRectangle(dpol)
	   errorLayer(err_B11P1 "B11P1 : dpol body must be a rectangle")

Executing: dpol_n_ex1 = geomGetEdge(dpol butting dpol_n)

Executing: dpol_p_ex1 = geomGetEdge(dpol butting dpol_p)

Executing: dpol_length = geomOr(dpol_n_ex1 dpol_p_ex1)

Executing: err_W12P1 = geomGetLength(dpol_length (keep < 1.0))
	   errorLayer(err_W12P1 "W12P1 : Minimum dpol width = 1.0")

Executing: err_W13P1 = geomGetLength(dpol_length (keep > 200))
	   errorLayer(err_W13P1 "W13P1 : Maximum dpol width = 200.0")

Executing: err_W14P1 = geomGetLength(geomGetEdge(dpol outside geomOr(dpol_n dpol_p)) (ig...
	   errorLayer(err_W14P1 "W14P1 : Fixed (SBLK and POLY1) length between NIMP and PIMP regions = 0.85")

Executing: dpol_s15 = geomSize(dpol 1.5)

Executing: err_B12P1 = geomAnd(dpol_s15 diff)
	   errorLayer(err_B12P1 "B12P1 : dpol body (oversized by 1.5um) overlap of DIFF is not allowed")

Executing: dpol_s10 = geomSize(dpol 1.0)

Executing: err_B13P1a = geomAnd(dpol_s10 met1)

Executing: err_B13P1b = geomAnd(dpol_s10 met2)

Executing: err_B13P1c = geomAnd(dpol_s10 met3)

Executing: err_B13P1f = geomAnd(dpol_s10 mtp)

Executing: err_B13P1d = geomAnd(dpol_s10 met4)

Executing: err_B13P1g = geomAnd(dpol_s10 mtpl)

Executing: err_B13P1 = geomOr(err_B13P1a err_B13P1b err_B13P1c err_B13P1d err_B13P1f err...
	   errorLayer(err_B13P1 "B13P1 : dpol body (oversized by 1.0um) overlap of MET1, MET2, MET3, MET4, METTP or METTPL is not allowed")

Executing: err_B14P1 = geomAndNot(dpol_s10 blkall)
	   errorLayer(err_B14P1 "B14P1 : dpol body (oversized by 1.0um) without BLKALL is not allowed")

Executing: dpol_p1 = geomOverlap(poly dpol)

Executing: err_E3IPP1 = drc(pimp dpol_p1 (enc < 0.18))
	   errorLayer(err_E3IPP1 "E3IPP1 : Minimum PIMP extension beyond POLY1 = 0.18")

Executing: err_E3INP1 = drc(nimp dpol_p1 (enc < 0.18))
	   errorLayer(err_E3INP1 "E3INP1 : Minimum NIMP extension beyond POLY1 = 0.18")

Executing: dpol_n_ex = geomSize(dpol_n_ex1 1.0)

Executing: err_O1INSB = geomXor(dpol_n_ex dpol_n)
	   errorLayer(err_O1INSB "O1INSB : Fixed SBLK overlap of (POLY1 and NIMP) = 1.0")

Executing: dpol_p_ex = geomSize(dpol_p_ex1 1.0)

Executing: err_O1IPSB = geomXor(dpol_p_ex dpol_p)
	   errorLayer(err_O1IPSB "O1IPSB : Fixed SBLK overlap of (POLY1 and PIMP) = 1.0")

Executing: rdnw_edge = geomSize(geomGetEdge(resnwell1 coincident nwell) 0.001)

Executing: err_W2NWa = drc(rdnw_edge (sep < 2.0) opposite)

Executing: err_W2NW = geomAnd(err_W2NWa resnwell1)
	   errorLayer(err_W2NW "W2NW : Minimum rnw,rnw3 width = 2.0")

Executing: err_B1NW = geomAnd(geomAndNot(nwres rnw_scr) diff)
	   errorLayer(err_B1NW "B1NW : NW_VERIFY overlap of DIFF is not allowed")

Executing: err_B2NW = geomAnd(nwres dnwellg)
	   errorLayer(err_B2NW "B2NW : NW_VERIFY overlap of DNWELL or DNWELLMV is not allowed")

Executing: err_B3GH = geomAnd(resnwell gxh)
	   errorLayer(err_B3GH "B3GH : HVGOX overlap of rnw is not allowed")

Executing: rdnwmv_edge = geomSize(geomGetEdge(resdnwellmv coincident dnwellmv) 0.001)

Executing: err_W2WMa = drc(rdnwmv_edge (sep < 2.0) opposite)

Executing: err_W2WM = geomAnd(err_W2WMa resdnwellmv)
	   errorLayer(err_W2WM "W2WM : Minimum rdnwmv width = 2.0")

Executing: err_B4WM = geomAnd(dnwmvres geomOr(nwell dnwell nbd))
	   errorLayer(err_B4WM "B4WM : DNWMV_VERIFY overlap of NWELL, DNWELL or HVNWELL is not allowed")

Executing: err_B5WM = geomAnd(dnwmvres diff)
	   errorLayer(err_B5WM "B5WM : DNWMV_VERIFY overlap of DIFF is not allowed")

Executing: err_B9WM = geomAnd(dnwmvres isopwell)
	   errorLayer(err_B9WM "B9WM : DNWMV_VERIFY overlap of ISOPW, DEPL, SCI, HVPWELL, PDF or PDD is not allowed")

Executing: err_B4GH = geomAnd(resdnwellmv gxh)
	   errorLayer(err_B4GH "B4GH : HVGOX overlap of rdnwmv is not allowed")

Executing: err_B5WD = geomAnd(qnva dnwell)
	   errorLayer(err_B5WD "B5WD : qnva inside DNWELL is not allowed")

Executing: err_B4MV = geomAnd(qnva_ce6 mv)
	   errorLayer(err_B4MV "B4MV : MV overlap of qnva is not allowed")

Executing: err_B5DF = geomOr(qnvb)
	   errorLayer(err_B5DF "B5DF : Check for qnvb usage")

Executing: err_B6DF = geomOr(qnvc)
	   errorLayer(err_B6DF "B6DF : Check for qnvc usage")

Executing: err_B6WD = geomAnd(qnvb dnwell)
	   errorLayer(err_B6WD "B6WD : qnvb inside DNWELL is not allowed")

Executing: err_B5MV = geomAnd(geomEnclose(qnvb_r8 qnvb) mv)
	   errorLayer(err_B5MV "B5MV : MV overlap of qnvb is not allowed")

Executing: err_B8WD = geomAnd(qnvba dnwell)
	   errorLayer(err_B8WD "B8WD : qnvba inside DNWELL is not allowed")

Executing: err_B6MV = geomAnd(geomEnclose(qnvb_r8 qnvba) mv)
	   errorLayer(err_B6MV "B6MV : MV overlap of qnvba is not allowed")

Executing: err_B7WD = geomAnd(qnvc dnwell)
	   errorLayer(err_B7WD "B7WD : qnvc inside DNWELL is not allowed")

Executing: err_B9WD = geomAnd(qnvca dnwell)
	   errorLayer(err_B9WD "B9WD : qnvca inside DNWELL is not allowed")

Executing: err_E1MVWM = drc(mv geomEnclose(dnwellmv qnvc_all) (enc < 0.6))
	   errorLayer(err_E1MVWM "E1MVWM : Minimum MV enclosure of DNWELLMV = 0.6")

Executing: qnv_sb10 = geomOr(qnvba qnvca)

Executing: qnv_sb11 = geomSize(qnv_sb10 0.3)

Executing: qnv_sb12 = geomSize(qnv_sb10 -0.2)

Executing: qnv_sb1 = geomAndNot(qnv_sb11 qnv_sb12)

Executing: qnv_sb20 = geomAnd(qnv_sb10 nsd)

Executing: qnv_sb21 = geomSize(geomGetEdge(qnv_sb20 inside diff) -0.26)

Executing: qnv_sb22 = geomSize(geomGetEdge(qnv_sb20 inside diff) 0.52)

Executing: qnv_sb23 = geomOr(qnv_sb21 qnv_sb22)

Executing: qnv_sb24 = geomSize(geomGetLength(qnv_sb23 (keep == 0.78)) 0.3)

Executing: qnv_sb2 = geomOr(qnv_sb23 qnv_sb24)

Executing: qnv_sb_m = geomOr(qnv_sb1 qnv_sb2)

Executing: qnv_sb3 = geomSize(qnv_sb10 1.05)

Executing: qnv_sb_n = geomAndNot(qnv_sb3 qnv_sb_m)

Executing: M_SB_qnv = geomAndNot(qnv_sb_m sab)
	   errorLayer(M_SB_qnv "Predefined area must have SBLK")

Executing: N_SB_qnv = geomAnd(qnv_sb_n sab)
	   errorLayer(N_SB_qnv "Predefined area must not have SBLK")

Executing: ndiffa_gxh = geomAnd(ndiffa gxh)

Executing: pdiffa_gxh = geomAnd(pdiffa gxh)

Executing: diff_gxh = geomOverlap(diff gxh)

Executing: nmmagate_edge = geomGetEdge(geomAndNot(nmmagate nbd) inside diff_gxh)

Executing: pmmagate_edge = geomGetEdge(geomAndNot(pmmagate pbd) inside diff_gxh)

Executing: nmmagate_edges = geomSize(nmmagate_edge 0.001)

Executing: pmmagate_edges = geomSize(pmmagate_edge 0.001)

Executing: nmmagate_twedge = geomGetEdge(nmmagate coincident diff_gxh)

Executing: pmmagate_twedge = geomGetEdge(pmmagate coincident diff_gxh)

Executing: gp15_1 = drc(nmmagate_edges (sep < 2.5))

Executing: gp15_2 = drc(pmmagate_edges (sep < 2.5))

Executing: err_W5GA = geomEnclose(hvgate geomOr(gp15_1 gp15_2))
	   errorLayer(err_W5GA "W5GA : Minimum GATE length = 2.9")

Executing: gp14_1 = drc(nmmagate_twedge (width < 2.5))

Executing: gp14_2 = drc(pmmagate_twedge (width < 2.5))

Executing: err_W6GA = geomOr(gp14_1 gp14_2)
	   errorLayer(err_W6GA "W6GA : Minimum GATE width = 2.5")

Executing: drc(nbd_nma pbd (sep < 0.5) "S3HNHP : Fixed HVNWELL spacing to HVPWELL of GAT...

Executing: nbd_nma_s = geomSize(nbd_nma 0.505)

Executing: nbd_nma_st = geomStraddle(nbd_nma_s pbd)

Executing: nbd_nma_edge = geomSize(geomGetEdge(pbd inside nmmagate) 0.001)

Executing: err_S3HNHP = geomAndNot(nbd_nma_edge nbd_nma_st)
	   errorLayer(err_S3HNHP "S3HNHP : Fixed HVNWELL spacing to HVPWELL of GATE = 0.5")

Executing: nma_nbd1 = geomAnd(geomSize(geomAnd(nmmagate nbd) 0.65) nbd)

Executing: nma_nbd2 = geomAndNot(nbd_nma nma_nbd1)

Executing: nma_nbd3 = geomSize(nma_nbd2 0.4)

Executing: nma_nbd4 = geomSize(geomGetEdge(nma_nbd1 coincident nbd_nma) 0.4)

Executing: nma_nbd5 = geomAndNot(geomAndNot(nma_nbd3 nma_nbd4) nma_nbd1)

Executing: nma_nbd = geomSize(nma_nbd5 1.35)

Executing: drc(geomAnd(nma_nbd pbd) nbd (sep < 1.75) "S4HNHP : Fixed HVNWELL spacing to ...

Executing: err_S4HNHPa = geomGetEdge(geomSize(nma_nbd 0.003) outside pbd)
	   errorLayer(err_S4HNHPa "S4HNHP : Fixed HVNWELL spacing to HVPWELL (except channel region) = 1.75")

Executing: err_S4HNHPb = geomEnclose(geomAndNot(nma_nbd pbd) nbd (keep > 1))
	   errorLayer(err_S4HNHPb "S4HNHP : Fixed HVNWELL spacing to HVPWELL (except channel region) = 1.75")

Executing: nma_s1 = geomSize(nmmagate 3.0)

Executing: nma_pbdtie = geomAnd(nma_s1 pdiffa)

Executing: nma_pbdtie_s = geomSize(nma_pbdtie 2.6)

Executing: nmmagate_edge = geomGetEdge(nmmagate outside nbd)

Executing: err_S1DPGA = geomGetEdge(nmmagate_edge outside nma_pbdtie_s)
	   errorLayer(err_S1DPGA "S1DPGA : Maximum PDIFF spacing to GATE (at channel end) = 2.6")

Executing: drc(pwblk nbd_nma (enc < 1.75) "E2PBHN : Minimum PWBLK enclosure of HVNWELL =...

Executing: drc(pbd_pma nbd (sep < 0.8) "S2HPHN : Fixed HVPWELL spacing to HVNWELL of GAT...

Executing: pbd_pma_s = geomSize(pbd_pma 0.805)

Executing: pbd_pma_st = geomStraddle(pbd_pma_s nbd)

Executing: pbd_pma_edge = geomSize(geomGetEdge(nbd inside pmmagate) 0.001)

Executing: err_S2HPHN = geomAndNot(pbd_pma_edge pbd_pma_st)
	   errorLayer(err_S2HPHN "S2HPHN : Fixed HVPWELL spacing to HVNWELL of GATE = 0.8")

Executing: pma_pbd1 = geomAnd(geomSize(geomAnd(pmmagate pbd) 0.7) pbd)

Executing: pma_pbd2 = geomAndNot(pbd_pma pma_pbd1)

Executing: pma_pbd3 = geomSize(pma_pbd2 0.9)

Executing: pma_pbd4 = geomSize(geomGetEdge(pma_pbd1 coincident pbd_pma) 0.9)

Executing: pma_pbd5 = geomAndNot(geomAndNot(pma_pbd3 pma_pbd4) pma_pbd1)

Executing: pma_pbd = geomSize(pma_pbd5 1.7)

Executing: drc(geomAnd(pma_pbd nbd) pbd (sep < 2.6) "S3HPHN : Minimum HVPWELL spacing to...

Executing: pma_s1 = geomSize(pmmagate 4.0)

Executing: pma_nbdtie = geomAnd(geomAnd(pma_s1 ndiffa) nbd)

Executing: pma_nbdtie_s = geomSize(pma_nbdtie 3.3)

Executing: pmmagate_edge = geomGetEdge(pmmagate outside pbd)

Executing: err_S1DNGA = geomGetEdge(pmmagate_edge outside pma_nbdtie_s)
	   errorLayer(err_S1DNGA "S1DNGA : Maximum NDIFF spacing to GATE (at channel end) = 3.3")

Executing: drc(nbd pmmagate (enc < 2.7) "E1HNGA : Minimum HVNWELL extension beyond GATE ...

Executing: drc(pbd_pma ndiffa (sep < 2.6) "S3HPDN : Minimum SOURCE / DRAIN HVPWELL spaci...

Executing: hvnd_nmma = geomAnd(ndiffa_gxh nbd_nma)

Executing: hvpd_pmma = geomAnd(pdiffa_gxh pbd_pma)

Executing: drc(hvnd_nmma nmmagate (sep < 0.6) "S4DF : Fixed SOURCE / DRAIN-EDGE-STI leng...

Executing: s4_dn11 = geomSize(geomGetEdge(nmmagate inside nbd) 0.6)

Executing: s4_dn1 = geomAndNot(s4_dn11 geomCoincident(s4_dn11 nbd))

Executing: s4_dn2 = geomSize(geomGetEdge(s4_dn1 outside ndiffa) 0.001)

Executing: err_S4DF = geomAndNot(s4_dn2 geomStraddle(s4_dn2 poly))
	   errorLayer(err_S4DF "S4DF : Fixed SOURCE / DRAIN-EDGE-STI length = 0.6")

Executing: drc(hvpd_pmma pmmagate (sep < 0.6) "S5DF : Fixed SOURCE / DRAIN-EDGE-STI leng...

Executing: s5_dp11 = geomSize(geomGetEdge(pmmagate inside pbd) 0.6)

Executing: s5_dp1 = geomAndNot(s5_dp11 geomCoincident(s5_dp11 pbd))

Executing: s5_dp2 = geomSize(geomGetEdge(s5_dp1 outside pdiffa) 0.001)

Executing: err_S5DF = geomAndNot(s5_dp2 geomStraddle(s5_dp2 poly))
	   errorLayer(err_S5DF "S5DF : Fixed SOURCE / DRAIN-EDGE-STI length = 0.6")

Executing: drc(nbd_nma nmmagate (ovlp < 0.2) "O1HNGA : Fixed HVNWELL overlap of GATE = 0...

Executing: nmmagate_s = geomSize(nmmagate -0.2)

Executing: err_O1HNGA = geomAnd(nmmagate_s nbd_nma)
	   errorLayer(err_O1HNGA "O1HNGA : Fixed HVNWELL overlap of GATE = 0.2")

Executing: drc(pbd_pma pmmagate (ovlp < 0.2) "O1HPGA : Fixed HVPWELL overlap of GATE = 0...

Executing: pmmagate_s = geomSize(pmmagate -0.2)

Executing: err_O1HPGA = geomAnd(pmmagate_s pbd_pma)
	   errorLayer(err_O1HPGA "O1HPGA : Fixed HVPWELL overlap of GATE = 0.2")

Executing: drc(poly hvnd_nmma (sep < 0.3) "S1P1DN : Minimum POLY1 spacing to SOURCE / DR...

Executing: drc(poly nmmagate (enc < 0.3) "E1P1DN : Minimum POLY1 extension beyond GATE =...

Executing: drc(poly hvpd_pmma (sep < 0.3) "S1P1DP : Minimum POLY1 spacing to SOURCE / DR...

Executing: drc(poly pmmagate (enc < 0.3) "E1P1DP : Minimum POLY1 extension beyond GATE =...

Executing: err_B1DNGH = geomAndNot(geomAnd(nsd nbd_nma) gxh)
	   errorLayer(err_B1DNGH "B1DNGH : NDIFF without HVGOX is not allowed")

Executing: err_B1DPGH = geomAndNot(geomAnd(psd pbd_pma) gxh)
	   errorLayer(err_B1DPGH "B1DPGH : PDIFF without HVGOX is not allowed")

Executing: err_B3WM = geomAnd(geomOr(pmmagate pbd_pma) dnwellmvdg)
	   errorLayer(err_B3WM "B3WM : pmma inside DNWELLMV is not allowed")

Executing: ped_edge = geomGetEdge(geomAnd(ped_ch ped) butting pdd)

Executing: err_W10GAa = geomGetLength(ped_edge (keep < 5.0) contiguous)
	   errorLayer(err_W10GAa "W10GA : Minimum linear cell width = 5.0")

Executing: ped_ch_ok = drc(ped_ch (width == 0.94))

Executing: err_W9GA = geomAndNot(ped_ch ped_ch_ok)
	   errorLayer(err_W9GA "W9GA : Fixed CHANNEL length = 0.94")

Executing: ped2_edge = geomGetEdge(geomAnd(ped_ch ped2) butting pdd)

Executing: err_W10GA = geomGetLength(ped2_edge (keep < 5.0) contiguous)
	   errorLayer(err_W10GA "W10GA : Minimum linear cell width = 5.0")

Executing: nedigate1 = geomAnd(nedi nedi0)

Executing: nedigate_ok = drc(nedigate1 (width == 0.65))

Executing: err_W7GA = geomAndNot(nedigate1 nedigate_ok)
	   errorLayer(err_W7GA "W7GA : Fixed CHANNEL length = 0.65")

Executing: nediagate1 = geomAnd(nedia nedia0)

Executing: nediagate_ok = drc(nediagate1 (width == 1.25))

Executing: err_W11GA = geomAndNot(nediagate1 nediagate_ok)
	   errorLayer(err_W11GA "W11GA : Fixed CHANNEL length = 1.25")

Executing: nedigate_edge = geomGetEdge(nedigate1 butting pbd)

Executing: err_W8GAa = geomGetLength(nedigate_edge (keep < 5.0) contiguous)
	   errorLayer(err_W8GAa "W8GA : Minimum linear cell width = 5.0")

Executing: nediagate_edge = geomGetEdge(nediagate1 butting pbd)

Executing: err_W8GAb = geomGetLength(nediagate_edge (keep < 5.0) contiguous)
	   errorLayer(err_W8GAb "W8GA : Minimum linear cell width = 5.0")

Executing: N_HW_dpho = geomOr(geomAnd(dphocd_a hnw) geomAnd(davl_ex3 hnw))
	   errorLayer(N_HW_dpho "N_HW : Predefined area must not have HNW")

Executing: N_WD_dpho = geomOr(geomAnd(dphocd_a dnwelldg) geomAnd(davl_ex3 dnwelldg))
	   errorLayer(N_WD_dpho "N_WD : Predefined area must not have DNWELL")

Executing: N_WM_dpho = geomOr(geomAnd(dphocd_a dnwellmvdg) geomAnd(davl_ex3 dnwellmvdg))
	   errorLayer(N_WM_dpho "N_WM : Predefined area must not have DNWELLMV")

Executing: N_HN_dpho = geomOr(geomAnd(dphocd_a nbd) geomAnd(davl_ex3 nbd))
	   errorLayer(N_HN_dpho "N_HN : Predefined area must not have HVNWELL")

Executing: N_HP_dpho = geomOr(geomAnd(dphocd_a pbd) geomAnd(davl_ex3 pbd))
	   errorLayer(N_HP_dpho "N_HP : Predefined area must not have HVPWELL")

Executing: N_ND_dpho = geomOr(geomAnd(dphocd_a ndf) geomAnd(davl_ex3 ndf))
	   errorLayer(N_ND_dpho "N_ND : Predefined area must not have NDF")

Executing: N_DL_dpho = geomOr(geomAnd(dphocd_a depl) geomAnd(davl_ex3 depl))
	   errorLayer(N_DL_dpho "N_DL : Predefined area must not have DEPL")

Executing: M_NW_dpho = geomOr(geomAndNot(dpho_nw nwell) geomAndNot(dpho_nw_2 nwell))
	   errorLayer(M_NW_dpho "M_NW : Predefined area must have NWELL")

Executing: N_NW_dpho = geomAndNot(geomAnd(dpho_uvnw nwell) geomOr(dpho_nw dpho_nw_3))
	   errorLayer(N_NW_dpho "N_NW : Predefined area must not have NWELL")

Executing: N_NW_aml = geomAnd(davl_e31 nwell)
	   errorLayer(N_NW_aml "N_NW : Predefined area must not have NWELL")

Executing: M_PB_dpho = geomAndNot(geomSize(dpho_pb -0.004) pwblk)
	   errorLayer(M_PB_dpho "M_PB : Predefined area must have PWBLK")

Executing: N_PB_dpho = geomAndNot(geomAnd(dphocd_a pwblk) geomSize(dpho_pb 0.004))
	   errorLayer(N_PB_dpho "N_PB : Predefined area must not have PWBLK")

Executing: M_MV_dpho = geomOr(geomAndNot(dpho_mv mv) geomAndNot(davl_mv mv))
	   errorLayer(M_MV_dpho "M_PB : Predefined area must have MV")

Executing: M_DF_dpho = geomAndNot(dpho_uv_3 diff)
	   errorLayer(M_DF_dpho "M_DF : Predefined area must have DIFF")

Executing: M_DN_dpho = geomAndNot(dpho_dn ndiffa)
	   errorLayer(M_DN_dpho "M_DN : Predefined area must have NDIFF")

Executing: N_DN_dpho = geomAndNot(geomAnd(dphocd_a ndiffa) geomOr(geomSize(dpho_dn 0.008...
	   errorLayer(N_DN_dpho "N_DN : Predefined area must not have NDIFF")

Executing: M_DP_dpho = geomAndNot(dpho_dp pdiffa)
	   errorLayer(M_DP_dpho "M_DP : Predefined area must have PDIFF")

Executing: N_DP_dpho = geomAndNot(geomAnd(geomAndNot(dpho_dp_n geomSize(dpho_dp 0.008)) ...
	   errorLayer(N_DP_dpho "N_DP : Predefined area must not have PDIFF")

Executing: M_P1_dpho_1 = geomAndNot(geomSize(geomAndNot(dpho_p1_1 dpho_uv_1) -0.004) poly)

Executing: M_P1_dpho_2 = geomAndNot(geomSize(geomAndNot(dpho_p1_2 dpho_uv_2) -0.004) poly)

Executing: M_P1_dpho = geomOr(M_P1_dpho_1 M_P1_dpho_2)
	   errorLayer(M_P1_dpho "M_P1 : Predefined area must have POLY1")

Executing: N_P1_dpho_1 = geomAndNot(geomAnd(dphod_a poly) geomAndNot(dpho_p1_3 geomSize(...

Executing: N_P1_dpho_2 = geomAndNot(geomAnd(dphoc_a poly) geomAndNot(dpho_p1_4 geomSize(...

Executing: N_P1_dpho = geomOr(N_P1_dpho_1 N_P1_dpho_2)
	   errorLayer(N_P1_dpho "N_P1 : Predefined area must not have POLY1")

Executing: M_IN_dpho = geomAndNot(geomAnd(dpho_uv_2 dphocfp) nimp)
	   errorLayer(M_IN_dpho "M_IN : Predefined area must have NIMP")

Executing: N_IN_davlb = geomAnd(davlb_cdf nimp)
	   errorLayer(N_IN_davlb "N_IN : Predefined area must not have NIMP")

Executing: M_IP_dpho = geomAndNot(geomAnd(dpho_uv_2 dphodfp) pimp)
	   errorLayer(M_IP_dpho "M_IP : Predefined area must have PIMP")

Executing: N_IP_davlb = geomAnd(davlb_cdf pimp)
	   errorLayer(N_IP_davlb "N_IP : Predefined area must not have PIMP")

Executing: M_SB_dpho = geomAndNot(geomSize(dpho_sb_3 -0.004) sab)
	   errorLayer(M_SB_dpho "M_SB : Predefined area must have SBLK")

Executing: N_SB_dpho = geomAnd(geomAndNot(dphocd_a geomSize(dpho_sb_3 0.004)) sab)
	   errorLayer(N_SB_dpho "N_SB : Predefined area must not have SBLK")

Executing: N_SB_aml = geomAnd(geomAndNot(davl_ex3 geomOr(davl_a13 davlb_ex5)) sab)
	   errorLayer(N_SB_aml "N_SB : Predefined area must not have SBLK")

Executing: M_UV_dpho = geomAndNot(dpho_uv_4 uvwin)
	   errorLayer(M_UV_dpho "M_UV : Predefined area must have UVWIN")

Executing: N_UV_aml = geomOr(geomAnd(davla_ex3 uvwin) geomAnd(geomAndNot(davlb_ex3 davlb...
	   errorLayer(N_UV_aml "N_UV : Predefined area must not have UVWIN")

Executing: N_OA_aml = geomAnd(davl_ex3 anodop)
	   errorLayer(N_OA_aml "N_OA : Predefined area must not have ANODOP")

Executing: N_GH_dpho = geomOr(geomAnd(dphocd_a gxh) geomAnd(davl_ex3 gxh))
	   errorLayer(N_GH_dpho "N_GH : Predefined area must not have HVGOX")

Executing: N_LV_dpho = geomOr(geomAnd(dphopin3 lvt) geomAnd(davl_ex3 lvt))
	   errorLayer(N_LV_dpho "N_LV : Predefined area must not have LVT")

Executing: N_SV_dpho = geomOr(geomAnd(dphopin3 svt) geomAnd(davl_ex3 svt))
	   errorLayer(N_SV_dpho "N_SV : Predefined area must not have SVT")

Executing: N_UL_dpho = geomOr(geomAnd(dphopin3 uln) geomAnd(davl_ex3 uln))
	   errorLayer(N_UL_dpho "N_UL : Predefined area must not have ULN")

Executing: N_LD_dpho = geomOr(geomAnd(dphopin3 lndev) geomAnd(davl_ex3 lndev))
	   errorLayer(N_LD_dpho "N_LD : Predefined area must not have LNDEV")

Executing: N_NU_dpho = geomOr(geomAnd(dphopin3 bnimp) geomAnd(davl_ex3 bnimp))
	   errorLayer(N_NU_dpho "N_NU : Predefined area must not have BNIMP")

Executing: N_HL_aml = geomAnd(davl_ex3 hvdepl)
	   errorLayer(N_HL_aml "N_HL : Predefined area must not have HVDEPL")

Executing: err_N_M1_dpho = geomAnd(dpho_uv_4 met1)

Executing: err_N_M1b = geomAnd(locked_m1n met1dg)

Executing: err_N_M1 = geomOr(err_N_M1_dpho err_N_M1b)
	   errorLayer(err_N_M1 "N_M1 : Predefined area must not have MET1")

Executing: M_M2_dpho = geomAndNot(geomAndNot(dphocd_a met2) dpho_uv_5)
	   errorLayer(M_M2_dpho "M_M2 : Predefined area must have MET2")

Executing: err_N_M2_dpho = geomAndNot(geomAnd(dpho_uv_4 met2) geomOr(dphoc0 dphod0))

Executing: err_N_M2b = geomAnd(locked_m2n met2dg)

Executing: err_N_M2 = geomOr(err_N_M2_dpho err_N_M2b)
	   errorLayer(err_N_M2 "N_M2 : Predefined area must not have MET2")

Executing: err_N_M3 = geomAnd(locked_m3n met3dg)
	   errorLayer(err_N_M3 "N_M3 : Predefined area must not have MET3")

Executing: qpvhbsp6 = geomSize(geomSize(qpvhbscr -3.345) 3.345)

Executing: qpvhbsp7 = geomSize(geomSize(qpvhbsp6 3.345) -3.345)

Executing: qpvhbs_emr = geomGetRectangle(qpvhbsp7 (width == 6.7))

Executing: qpvhbs_em3 = drc(qpvhbs_emr (width < 1.48) only_perp)

Executing: qpvhbs_hp0 = geomAndNot(qpvhbs_emr qpvhbs_em3)

Executing: qpvhbs_em1 = geomGetRectangle(qpvhbs_emr ((12 <= length) <= 150) (width == 6.7))

Executing: qpvhbs_em2 = drc(qpvhbs_em1 (width < 1.48) only_perp)

Executing: qpvhbs_hp1 = geomAndNot(qpvhbs_hp0 geomAndNot(qpvhbs_em1 qpvhbs_em2))

Executing: qpvhbs_emq = geomGetRectangle(qpvhbs_emr (length == 6.7) (width == 6.7) ignore)

Executing: qpvhbs_p31 = geomSize(geomGetLength(qpvhbs_emq (keep == 6.7)) 0.75)

Executing: qpvhbs_p32 = geomOr(qpvhbs_emr qpvhbs_p31)

Executing: qpvhbsh21 = geomSize(qpvhbs_p32 7.86)

Executing: qpvhbsh22 = drc(qpvhbsh21 (width < 2.315) only_perp)

Executing: qpvhbsh2 = geomAndNot(qpvhbsh21 qpvhbsh22)

Executing: qpvhbs_p33 = geomSize(geomGetLength(qpvhbs_emq (keep == 6.7)) 0.5)

Executing: qpvhbs_p34 = geomOr(qpvhbs_emr qpvhbs_p33)

Executing: qpvhbs_hn1 = geomSize(qpvhbs_p34 1.5)

Executing: qpvhbs_hn2 = drc(qpvhbs_hn1 (width < 2.19) only_perp)

Executing: qpvhbs_hn3 = geomAndNot(qpvhbs_hn1 qpvhbs_hn2)

Executing: qpvhbs_hn4 = geomSize(qpvhbs_p32 5.07)

Executing: qpvhbs_hn5 = drc(qpvhbs_hn4 (width < 0.655) only_perp)

Executing: qpvhbs_hn6 = geomAndNot(qpvhbs_hn4 qpvhbs_hn5)

Executing: qpvhbs_hn = geomAndNot(qpvhbs_hn6 qpvhbs_hn3)

Executing: qpvhbs_dn1 = geomSize(qpvhbs_emr -1.5)

Executing: qpvhbs_dn2 = drc(qpvhbs_dn1 (width < 0.63) only_perp)

Executing: qpvhbs_dn3 = geomSize(qpvhbs_emr -2.58)

Executing: qpvhbs_dn4 = geomAndNot(geomAndNot(qpvhbs_dn1 qpvhbs_dn2) qpvhbs_dn3)

Executing: qpvhbs_dn5 = geomSize(qpvhbs_p32 4.86)

Executing: qpvhbs_dn6 = drc(qpvhbs_dn5 (width < 0.565) only_perp)

Executing: qpvhbs_dn7 = geomSize(qpvhbs_p32 3.64)

Executing: qpvhbs_dn8 = drc(qpvhbs_dn7 (width < 3.45) only_perp)

Executing: qpvhbs_dn9 = geomAndNot(geomAndNot(qpvhbs_dn5 qpvhbs_dn6) geomAndNot(qpvhbs_d...

Executing: qpvhbs_dn = geomOr(qpvhbs_dn4 qpvhbs_dn9)

Executing: qpvhbs_dp1 = geomSize(qpvhbs_emr -3.14)

Executing: qpvhbs_dp2 = geomSize(qpvhbs_p32 3.08)

Executing: qpvhbs_dp3 = drc(qpvhbs_dp2 (width < 3.16) only_perp)

Executing: qpvhbs_dp4 = geomSize(qpvhbs_p34 2)

Executing: qpvhbs_dp5 = drc(qpvhbs_dp4 (width < 2.45) only_perp)

Executing: qpvhbs_dp6 = geomAndNot(geomAndNot(qpvhbs_dp2 qpvhbs_dp3) geomAndNot(qpvhbs_d...

Executing: qpvhbs_dp = geomOr(qpvhbs_dp1 qpvhbs_dp6)

Executing: qpvhbs_s11 = geomSize(qpvhbs_emr -1.28)

Executing: qpvhbs_s12 = drc(qpvhbs_s11 (width < 0.73) only_perp)

Executing: qpvhbs_s13 = geomSize(qpvhbs_emr -2.02)

Executing: qpvhbs_s14 = drc(qpvhbs_s13 (width < 0.33) only_perp)

Executing: qpvhbs_sb1 = geomAndNot(geomAndNot(qpvhbs_s11 qpvhbs_s12) geomAndNot(qpvhbs_s...

Executing: qpvhbs_s21 = geomSize(qpvhbs_p32 2.52)

Executing: qpvhbs_s22 = drc(qpvhbs_s21 (width < 3) only_perp)

Executing: qpvhbs_s23 = geomSize(qpvhbs_p34 1.78)

Executing: qpvhbs_s24 = drc(qpvhbs_s23 (width < 2.51) only_perp)

Executing: qpvhbs_sb2 = geomAndNot(geomAndNot(qpvhbs_s21 qpvhbs_s22) geomAndNot(qpvhbs_s...

Executing: qpvhbs_s31 = geomSize(qpvhbs_p32 4.64)

Executing: qpvhbs_s32 = drc(qpvhbs_s31 (width < 0.465) only_perp)

Executing: qpvhbs_s33 = geomSize(qpvhbs_s31 -0.44)

Executing: qpvhbs_s34 = drc(qpvhbs_s33 (width < 0.465) only_perp)

Executing: qpvhbs_sb3 = geomAndNot(geomAndNot(qpvhbs_s31 qpvhbs_s32) geomAndNot(qpvhbs_s...

Executing: qpvhbs_sb = geomOr(qpvhbs_sb1 qpvhbs_sb2 qpvhbs_sb3)

Executing: M_HW_qpvhb = geomAndNot(qpvhbsh2 hnw)
	   errorLayer(M_HW_qpvhb "M_HW : Predefined area must have HNW")

Executing: N_HW_qpvhb = geomGetEdge(qpvhbsh2 inside hnw)
	   errorLayer(N_HW_qpvhb "N_HW : Predefined area must not have HNW")

Executing: M_HN_qpvhb = geomAndNot(qpvhbs_hn nbd)
	   errorLayer(M_HN_qpvhb "M_HN : Predefined area must have HVNWELL")

Executing: N_HN_qpvhb = geomAndNot(geomAnd(qpvhbsh1 nbd) qpvhbs_hn)
	   errorLayer(N_HN_qpvhb "N_HN : Predefined area must not have HVNWELL")

Executing: G_HP_qpvhb = geomOr(geomOutside(qpvhbscr qpvhbs_hp0) qpvhbs_hp1)
	   errorLayer(G_HP_qpvhb "G_HP : Predefined geometry of HVPWELL violated")

Executing: M_HP_qpvhb = geomAndNot(qpvhbs_hp0 pbd)
	   errorLayer(M_HP_qpvhb "M_HP : Predefined area must have HVPWELL")

Executing: N_HP_qpvhb = geomAndNot(geomAnd(qpvhbsh1 pbd) qpvhbs_hp0)
	   errorLayer(N_HP_qpvhb "N_HP : Predefined area must not have HVPWELL")

Executing: N_ND_qpvhb = geomAnd(qpvhbsh1 ndf)
	   errorLayer(N_ND_qpvhb "N_ND : Predefined area must not have NDF")

Executing: N_HL_qpvhb = geomAnd(qpvhbsh1 hvdepl)
	   errorLayer(N_HL_qpvhb "N_HL : Predefined area must not have HVDEPL")

Executing: M_DN_qpvhb = geomAndNot(qpvhbs_dn ndiffa)
	   errorLayer(M_DN_qpvhb "M_DN : Predefined area must have NDIFF")

Executing: N_DN_qpvhb = geomAndNot(geomAnd(qpvhbsh1 ndiffa) qpvhbs_dn)
	   errorLayer(N_DN_qpvhb "N_DN : Predefined area must not have NDIFF")

Executing: M_DP_qpvhb = geomAndNot(qpvhbs_dp pdiffa)
	   errorLayer(M_DP_qpvhb "M_DP : Predefined area must have PDIFF")

Executing: N_DP_qpvhb = geomAndNot(geomAnd(qpvhbsh1 pdiffa) qpvhbs_dp)
	   errorLayer(N_DP_qpvhb "N_DP : Predefined area must not have PDIFF")

Executing: M_SB_qpvhb = geomAndNot(qpvhbs_sb sab)
	   errorLayer(M_SB_qpvhb "M_SB : Predefined area must have SBLK")

Executing: N_SB_qpvhb = geomAndNot(geomAnd(qpvhbsh1 sab) qpvhbs_sb)
	   errorLayer(N_SB_qpvhb "N_SB : Predefined area must not have SBLK")

Executing: err_B1YD = geomAnd(diff_dy diff_dg)
	   errorLayer(err_B1YD "B1YD : DIFFDUMMY overlap of DIFF is not allowed")

Executing: err_B2YD = geomAnd(diff_dy implant)
	   errorLayer(err_B2YD "B2YD : DIFFDUMMY overlap of NIMP or PIMP is not allowed")

Executing: err_B3YD = geomAnd(diff_dy cont)
	   errorLayer(err_B3YD "B3YD : DIFFDUMMY overlap of CONT is not allowed")

Executing: err_B5YD = geomAnd(diff_dy sab)
	   errorLayer(err_B5YD "B5YD : DIFFDUMMY overlap of SBLK is not allowed")

Executing: err_B6YD = geomAnd(diff_dy hvdepl)
	   errorLayer(err_B6YD "B6YD : DIFFDUMMY overlap of HVDEPL is not allowed")

Executing: err_B7YD = geomAnd(diff_dy phodef)
	   errorLayer(err_B7YD "B7YD : DIFFDUMMY overlap of PHODEF is not allowed")

Executing: err_W1YD = drc(diff_dy (width < 0.4))
	   errorLayer(err_W1YD "W1YD : Minimum DIFFDUMMY width = 0.4")

Executing: err_S1YD = drc(diff_dy (sepNotch < 0.5))
	   errorLayer(err_S1YD "S1YD : Minimum DIFFDUMMY spacing/notch = 0.5")

Executing: err_S1YDDF = drc(diff_dy diff_dg (sep < 3.0))
	   errorLayer(err_S1YDDF "S1YDDF : Minimum DIFFDUMMY spacing to DIFF = 3.0")

Executing: err_S1YDIN = drc(diff_dy nimp (sep < 0.3))
	   errorLayer(err_S1YDIN "S1YDIN : Minimum DIFFDUMMY spacing to NIMP = 0.3")

Executing: err_S1YDIP = drc(diff_dy pimp (sep < 0.3))
	   errorLayer(err_S1YDIP "S1YDIP : Minimum DIFFDUMMY spacing to PIMP = 0.3")

Executing: err_S1YDP1 = drc(diff_dy polydg (sep < 3.0))
	   errorLayer(err_S1YDP1 "S1YDP1 : Minimum DIFFDUMMY spacing to POLY1 = 3.0")

Executing: err_S1YDSB = drc(diff_dy sab (sep < 3.0))
	   errorLayer(err_S1YDSB "S1YDSB : Minimum DIFFDUMMY spacing to SBLK = 3.0")

Executing: err_S1YDHL = drc(diff_dy hvdepl (sep < 5.0))
	   errorLayer(err_S1YDHL "S1YDHL : Minimum DIFFDUMMY spacing to HVDEPL = 5.0")

Executing: err_S1YDWD = drc(diff_dy dnwelldg (sep < 10.0))
	   errorLayer(err_S1YDWD "S1YDWD : Minimum DIFFDUMMY spacing to DNWELL = 10.0")

Executing: err_S1YDHW = drc(diff_dy hnw (sep < 10.0))
	   errorLayer(err_S1YDHW "S1YDHW : Minimum DIFFDUMMY spacing to HNW = 10.0")

Executing: err_S1YDWM = drc(diff_dy dnwellmv (sep < 5.0))
	   errorLayer(err_S1YDWM "S1YDWM : Minimum DIFFDUMMY spacing to DNWELLMV = 5.0")

Executing: err_S1YDPI = drc(diff_dy apwell (sep < 5.0))
	   errorLayer(err_S1YDPI "S1YDPI : Minimum DIFFDUMMY spacing to PW4DMY = 5.0")

Executing: err_S1YDNW = drc(diff_dy anwell3 (sep < 5.0))
	   errorLayer(err_S1YDNW "S1YDNW : Minimum DIFFDUMMY spacing to NW4DMY = 5.0")

Executing: err_E1YDWD = drc(dnwelldg diff_dy (enc < 10.0))
	   errorLayer(err_E1YDWD "E1YDWD : Minimum DNWELL enclosure of DIFFDUMMY = 10.0")

Executing: err_E1YDHW = drc(hnw diff_dy (enc < 10.0))
	   errorLayer(err_E1YDHW "E1YDHW : Minimum HNW enclosure of DIFFDUMMY = 10.0")

Executing: err_E1YDWM = drc(dnwellmv diff_dy (enc < 5.0))
	   errorLayer(err_E1YDWM "E1YDWM : Minimum DNWELLMV enclosure of DIFFDUMMY = 5.0")

Executing: err_E1YDPI = drc(apwell diff_dy (enc < 5.0))
	   errorLayer(err_E1YDPI "E1YDPI : Minimum PW4DMY enclosure of DIFFDUMMY = 5.0")

Executing: err_E1YDNW = drc(anwell3 diff_dy (enc < 5.0))
	   errorLayer(err_E1YDNW "E1YDNW : Minimum NW4DMY enclosure of DIFFDUMMY = 5.0")

Executing: err_S10YD = drc(diff_dy lock (sep < 3.6))
	   errorLayer(err_S10YD "S10YD : Minimum DIFFDUMMY spacing to LOCKED = 3.6")

Executing: err_S11YD = drc(diff_dy lock1 (sep < 3.6))
	   errorLayer(err_S11YD "S11YD : Minimum DIFFDUMMY spacing to LOCKED1 = 3.6")

Executing: err_S12YD = drc(diff_dy lock2 (sep < 3.6))
	   errorLayer(err_S12YD "S12YD : Minimum DIFFDUMMY spacing to LOCKED2 = 3.6")

Executing: err_S13YD = drc(diff_dy lock3 (sep < 3.6))
	   errorLayer(err_S13YD "S13YD : Minimum DIFFDUMMY spacing to LOCKED3 = 3.6")

Executing: err_S14YD = drc(diff_dy lock4 (sep < 3.6))
	   errorLayer(err_S14YD "S14YD : Minimum DIFFDUMMY spacing to LOCKED4 = 3.6")

Executing: err_A1YD = drc(diff_dy (area < 1.2))
	   errorLayer(err_A1YD "A1YD : Minimum DIFFDUMMY area = 1.2")

Executing: err_B1YP = geomGetNonRectangle(poly_dy)
	   errorLayer(err_B1YP "B1YP : Only rectangular P1DUMMY is allowed")

Executing: err_B2YP = geomAnd(poly_dy polydg)
	   errorLayer(err_B2YP "B2YP : P1DUMMY overlap of POLY1 is not allowed")

Executing: err_B3YP = geomAnd(poly_dy cont)
	   errorLayer(err_B3YP "B3YP : P1DUMMY overlap of CONT is not allowed")

Executing: err_B5YP = geomAnd(poly_dy sab)
	   errorLayer(err_B5YP "B5YP : P1DUMMY overlap of SBLK is not allowed")

Executing: err_B6YP = geomAnd(poly_dy geomOr(hres mres))
	   errorLayer(err_B6YP "B6YP : P1DUMMY overlap of MRES or HRES is not allowed")

Executing: err_B7YP = geomAnd(poly_dy hvdepl)
	   errorLayer(err_B7YP "B7YP : P1DUMMY overlap of HVDEPL is not allowed")

Executing: err_B8YP = geomAnd(poly_dy phodef)
	   errorLayer(err_B8YP "B8YP : P1DUMMY overlap of PHODEF is not allowed")

Executing: err_W1YP = drc(poly_dy (width < 1.0))
	   errorLayer(err_W1YP "W1YP : Minimum P1DUMMY width = 1.0")

Executing: err_S1YP = drc(poly_dy (sep < 1.0))
	   errorLayer(err_S1YP "S1YP : Minimum P1DUMMY spacing = 1.0")

Executing: err_S1YPP1 = drc(poly_dy polydg (sep < 3.0))
	   errorLayer(err_S1YPP1 "S1YPP1 : Minimum P1DUMMY spacing to POLY1 = 3.0")

Executing: err_S1YPDF = drc(poly_dy diff_dg (sep < 3.0))
	   errorLayer(err_S1YPDF "S1YPDF : Minimum P1DUMMY spacing to DIFF = 3.0")

Executing: err_S1YPYD = drc(poly_dy diff_dy (sep < 0.4))
	   errorLayer(err_S1YPYD "S1YPYD : Minimum P1DUMMY spacing to DIFFDUMMY = 0.4")

Executing: err_S1YPSB = drc(poly_dy sab (sep < 3.0))
	   errorLayer(err_S1YPSB "S1YPSB : Minimum P1DUMMY spacing to SBLK = 3.0")

Executing: err_S1YPHL = drc(poly_dy hvdepl (sep < 5.0))
	   errorLayer(err_S1YPHL "S1YPHL : Minimum P1DUMMY spacing to HVDEPL = 5.0")

Executing: err_S1YPWD = drc(poly_dy dnwelldg (sep < 10.0))
	   errorLayer(err_S1YPWD "S1YPWD : Minimum P1DUMMY spacing to DNWELL = 10.0")

Executing: err_S1YPHW = drc(poly_dy hnw (sep < 10.0))
	   errorLayer(err_S1YPHW "S1YPHW : Minimum P1DUMMY spacing to HNW = 10.0")

Executing: err_S1YPWM = drc(poly_dy dnwellmv (sep < 5.0))
	   errorLayer(err_S1YPWM "S1YPWM : Minimum P1DUMMY spacing to DNWELLMV = 5.0")

Executing: err_S1YPPI = drc(poly_dy apwell (sep < 5.0))
	   errorLayer(err_S1YPPI "S1YPPI : Minimum P1DUMMY spacing to PW4DMY = 5.0")

Executing: err_S1YPNW = drc(poly_dy anwell3 (sep < 5.0))
	   errorLayer(err_S1YPNW "S1YPNW : Minimum P1DUMMY spacing to NW4DMY = 5.0")

Executing: err_E1YPWD = drc(dnwelldg poly_dy (enc < 10.0))
	   errorLayer(err_E1YPWD "E1YPWD : Minimum DNWELL enclosure of P1DUMMY = 10.0")

Executing: err_E1YPHW = drc(hnw poly_dy (enc < 10.0))
	   errorLayer(err_E1YPHW "E1YPHW : Minimum HNW enclosure of P1DUMMY = 10.0")

Executing: err_E1YPWM = drc(dnwellmv poly_dy (enc < 5.0))
	   errorLayer(err_E1YPWM "E1YPWM : Minimum DNWELLMV enclosure of P1DUMMY = 5.0")

Executing: err_E1YPPI = drc(apwell poly_dy (enc < 5.0))
	   errorLayer(err_E1YPPI "E1YPPI : Minimum PW4DMY enclosure of P1DUMMY = 5.0")

Executing: err_E1YPNW = drc(anwell3 poly_dy (enc < 5.0))
	   errorLayer(err_E1YPNW "E1YPNW : Minimum NW4DMY enclosure of P1DUMMY = 5.0")

Executing: err_S10YP = drc(poly_dy lock (sep < 3.6))
	   errorLayer(err_S10YP "S10YP : Minimum P1DUMMY spacing to LOCKED = 3.6")

Executing: err_S11YP = drc(poly_dy lock1 (sep < 3.6))
	   errorLayer(err_S11YP "S11YP : Minimum P1DUMMY spacing to LOCKED1 = 3.6")

Executing: err_S12YP = drc(poly_dy lock2 (sep < 3.6))
	   errorLayer(err_S12YP "S12YP : Minimum P1DUMMY spacing to LOCKED2 = 3.6")

Executing: err_S13YP = drc(poly_dy lock3 (sep < 3.6))
	   errorLayer(err_S13YP "S13YP : Minimum P1DUMMY spacing to LOCKED3 = 3.6")

Executing: err_S14YP = drc(poly_dy lock4 (sep < 3.6))
	   errorLayer(err_S14YP "S14YP : Minimum P1DUMMY spacing to LOCKED4 = 3.6")

Executing: err_B1Y1 = geomGetNonRectangle(met1_dy)
	   errorLayer(err_B1Y1 "B1Y1 : Only rectangular M1DUMMY is allowed")

Executing: err_B2Y1 = geomAnd(met1_dy met1dg)
	   errorLayer(err_B2Y1 "B2Y1 : M1DUMMY overlap of MET1 is not allowed")

Executing: err_B3Y1 = geomAnd(met1_dy geomOr(cont via1))
	   errorLayer(err_B3Y1 "B3Y1 : M1DUMMY overlap of CONT or VIA1 is not allowed")

Executing: err_B4Y1 = geomAnd(met1_dy hres)
	   errorLayer(err_B4Y1 "B4Y1 : M1DUMMY overlap of HRES is not allowed")

Executing: err_W1Y1 = drc(met1_dy (width < 2.0))
	   errorLayer(err_W1Y1 "W1Y1 : Minimum M1DUMMY width = 2.0")

Executing: err_W2Y1 = geomGetLength(met1_dy (keep > 20.0))
	   errorLayer(err_W2Y1 "W2Y1 : Maximum M1DUMMY edge length = 20.0")

Executing: err_S1Y1 = drc(met1_dy (sep < 2.0))
	   errorLayer(err_S1Y1 "S1Y1 : Minimum M1DUMMY spacing = 2.0")

Executing: err_S1Y1M1 = drc(met1_dy met1dg (sep < 4.0))
	   errorLayer(err_S1Y1M1 "S1Y1M1 : Minimum M1DUMMY spacing to MET1 = 4.0")

Executing: err_S10Y1 = drc(met1_dy lock (sep < 4.0))
	   errorLayer(err_S10Y1 "S10Y1 : Minimum M1DUMMY spacing to LOCKED = 4.0")

Executing: err_S11Y1 = drc(met1_dy lock1 (sep < 4.0))
	   errorLayer(err_S11Y1 "S11Y1 : Minimum M1DUMMY spacing to LOCKED1 = 4.0")

Executing: err_S12Y1 = drc(met1_dy lock2 (sep < 4.0))
	   errorLayer(err_S12Y1 "S12Y1 : Minimum M1DUMMY spacing to LOCKED2 = 4.0")

Executing: err_S13Y1 = drc(met1_dy lock3 (sep < 4.0))
	   errorLayer(err_S13Y1 "S13Y1 : Minimum M1DUMMY spacing to LOCKED3 = 4.0")

Executing: err_S14Y1 = drc(met1_dy lock4 (sep < 4.0))
	   errorLayer(err_S14Y1 "S14Y1 : Minimum M1DUMMY spacing to LOCKED4 = 4.0")

Executing: err_S1Y1HR = drc(met1_dy hres (sep < 5.0))
	   errorLayer(err_S1Y1HR "S1Y1HR : Minimum M1DUMMY spacing to HRES = 5.0")

Executing: err_B1Y2 = geomGetNonRectangle(met2_dy)
	   errorLayer(err_B1Y2 "B1Y2 : Only rectangular M2DUMMY is allowed")

Executing: err_B2Y2 = geomAnd(met2_dy met2dg)
	   errorLayer(err_B2Y2 "B2Y2 : M2DUMMY overlap of MET2 is not allowed")

Executing: err_B3Y2V1 = geomAnd(met2_dy via1)
	   errorLayer(err_B3Y2V1 "B3Y2V1 : M2DUMMY overlap of VIA1 is not allowed")

Executing: err_B3Y2V2 = geomAnd(met2_dy via2)
	   errorLayer(err_B3Y2V2 "B3Y2V2 : M2DUMMY overlap of VIA2 is not allowed")

Executing: err_W1Y2 = drc(met2_dy (width < 2.0))
	   errorLayer(err_W1Y2 "W1Y2 : Minimum M2DUMMY width = 2.0")

Executing: err_W2Y2 = geomGetLength(met2_dy (keep > 20.0))
	   errorLayer(err_W2Y2 "W2Y2 : Maximum M2DUMMY edge length = 20.0")

Executing: err_S1Y2 = drc(met2_dy (sep < 2.0))
	   errorLayer(err_S1Y2 "S1Y2 : Minimum M2DUMMY spacing = 2.0")

Executing: err_S1Y2M2 = drc(met2_dy met2dg (sep < 4.0))
	   errorLayer(err_S1Y2M2 "S1Y2M2 : Minimum M2DUMMY spacing to MET2 = 4.0")

Executing: err_S10Y2 = drc(met2_dy lock (sep < 4.0))
	   errorLayer(err_S10Y2 "S10Y2 : Minimum M2DUMMY spacing to LOCKED = 4.0")

Executing: err_S11Y2 = drc(met2_dy lock1 (sep < 4.0))
	   errorLayer(err_S11Y2 "S11Y2 : Minimum M2DUMMY spacing to LOCKED1 = 4.0")

Executing: err_S12Y2 = drc(met2_dy lock2 (sep < 4.0))
	   errorLayer(err_S12Y2 "S12Y2 : Minimum M2DUMMY spacing to LOCKED2 = 4.0")

Executing: err_S13Y2 = drc(met2_dy lock3 (sep < 4.0))
	   errorLayer(err_S13Y2 "S13Y2 : Minimum M2DUMMY spacing to LOCKED3 = 4.0")

Executing: err_S14Y2 = drc(met2_dy lock4 (sep < 4.0))
	   errorLayer(err_S14Y2 "S14Y2 : Minimum M2DUMMY spacing to LOCKED4 = 4.0")

Executing: err_B1Y3 = geomGetNonRectangle(met3_dy)
	   errorLayer(err_B1Y3 "B1Y3 : Only rectangular M3DUMMY is allowed")

Executing: err_B2Y3 = geomAnd(met3_dy met3dg)
	   errorLayer(err_B2Y3 "B2Y3 : M3DUMMY overlap of MET3 is not allowed")

Executing: err_B3Y3V2 = geomAnd(met3_dy via2)
	   errorLayer(err_B3Y3V2 "B3Y3V2 : M3DUMMY overlap of VIA2 is not allowed")

Executing: err_B3Y3V3 = geomAnd(met3_dy via3)
	   errorLayer(err_B3Y3V3 "B3Y3V3 : M3DUMMY overlap of VIA3 is not allowed")

Executing: err_W1Y3 = drc(met3_dy (width < 2.0))
	   errorLayer(err_W1Y3 "W1Y3 : Minimum M3DUMMY width = 2.0")

Executing: err_W2Y3 = geomGetLength(met3_dy (keep > 20.0))
	   errorLayer(err_W2Y3 "W2Y3 : Maximum M3DUMMY edge length = 20.0")

Executing: err_S1Y3 = drc(met3_dy (sep < 2.0))
	   errorLayer(err_S1Y3 "S1Y3 : Minimum M3DUMMY spacing = 2.0")

Executing: err_S1Y3M3 = drc(met3_dy met3dg (sep < 4.0))
	   errorLayer(err_S1Y3M3 "S1Y3M3 : Minimum M3DUMMY spacing to MET3 = 4.0")

Executing: err_S10Y3 = drc(met3_dy lock (sep < 4.0))
	   errorLayer(err_S10Y3 "S10Y3 : Minimum M3DUMMY spacing to LOCKED = 4.0")

Executing: err_S11Y3 = drc(met3_dy lock1 (sep < 4.0))
	   errorLayer(err_S11Y3 "S11Y3 : Minimum M3DUMMY spacing to LOCKED1 = 4.0")

Executing: err_S12Y3 = drc(met3_dy lock2 (sep < 4.0))
	   errorLayer(err_S12Y3 "S12Y3 : Minimum M3DUMMY spacing to LOCKED2 = 4.0")

Executing: err_S13Y3 = drc(met3_dy lock3 (sep < 4.0))
	   errorLayer(err_S13Y3 "S13Y3 : Minimum M3DUMMY spacing to LOCKED3 = 4.0")

Executing: err_B1Y4 = geomGetNonRectangle(met4_dy)
	   errorLayer(err_B1Y4 "B1Y4 : Only rectangular M4DUMMY is allowed")

Executing: err_B2Y4 = geomAnd(met4_dy met4dg)
	   errorLayer(err_B2Y4 "B2Y4 : M4DUMMY overlap of MET4 is not allowed")

Executing: err_B3Y4V3 = geomAnd(met4_dy via3)
	   errorLayer(err_B3Y4V3 "B3Y4V3 : M4DUMMY overlap of VIA3 is not allowed")

Executing: err_B3Y4VT = geomAnd(met4_dy vtp)
	   errorLayer(err_B3Y4VT "B3Y4VT : M4DUMMY overlap of VIATP is not allowed")

Executing: err_W1Y4 = drc(met4_dy (width < 2.0))
	   errorLayer(err_W1Y4 "W1Y4 : Minimum M4DUMMY width = 2.0")

Executing: err_W2Y4 = geomGetLength(met4_dy (keep > 20.0))
	   errorLayer(err_W2Y4 "W2Y4 : Maximum M4DUMMY edge length = 20.0")

Executing: err_S1Y4 = drc(met4_dy (sep < 2.0))
	   errorLayer(err_S1Y4 "S1Y4 : Minimum M4DUMMY spacing = 2.0")

Executing: err_S1Y4M4 = drc(met4_dy met4dg (sep < 4.0))
	   errorLayer(err_S1Y4M4 "S1Y4M4 : Minimum M4DUMMY spacing to MET4 = 4.0")

Executing: err_S10Y4 = drc(met4_dy lock (sep < 4.0))
	   errorLayer(err_S10Y4 "S10Y4 : Minimum M4DUMMY spacing to LOCKED = 4.0")

Executing: err_S11Y4 = drc(met4_dy lock1 (sep < 4.0))
	   errorLayer(err_S11Y4 "S11Y4 : Minimum M4DUMMY spacing to LOCKED1 = 4.0")

Executing: err_S12Y4 = drc(met4_dy lock2 (sep < 4.0))
	   errorLayer(err_S12Y4 "S12Y4 : Minimum M4DUMMY spacing to LOCKED2 = 4.0")

Executing: err_B1YT = geomGetNonRectangle(mtp_dy)
	   errorLayer(err_B1YT "B1YT : Only rectangular MTPDUMMY is allowed")

Executing: err_B2YT = geomAnd(mtp_dy mtpdg)
	   errorLayer(err_B2YT "B2YT : MTPDUMMY overlap of METTP is not allowed")

Executing: err_B3YTVT = geomAnd(mtp_dy vtp)
	   errorLayer(err_B3YTVT "B3YTVT : MTPDUMMY overlap of VIATP is not allowed")

Executing: err_B3YTVL = geomAnd(mtp_dy vtpl)
	   errorLayer(err_B3YTVL "B3YTVL : MTPDUMMY overlap of VIATPL is not allowed")

Executing: err_W1YT = drc(mtp_dy (width < 2.0))
	   errorLayer(err_W1YT "W1YT : Minimum MTPDUMMY width = 2.0")

Executing: err_W2YT = geomGetLength(mtp_dy (keep > 20.0))
	   errorLayer(err_W2YT "W2YT : Maximum MTPDUMMY edge length = 20.0")

Executing: err_S1YT = drc(mtp_dy (sep < 2.0))
	   errorLayer(err_S1YT "S1YT : Minimum MTPDUMMY spacing = 2.0")

Executing: err_S1YTMT = drc(mtp_dy mtpdg (sep < 2.0))
	   errorLayer(err_S1YTMT "S1YTMT : Minimum MTPDUMMY spacing to METTP = 2.0")

Executing: err_S1YTPA = drc(mtp_dy pad (sep < 5.0))
	   errorLayer(err_S1YTPA "S1YTPA : Minimum MTPDUMMY spacing to PAD = 5.0")

Executing: err_S10YT = drc(mtp_dy lock (sep < 2.0))
	   errorLayer(err_S10YT "S10YT : Minimum MTPDUMMY spacing to LOCKED = 2.0")

Executing: err_S11YT = drc(mtp_dy lock1 (sep < 2.0))
	   errorLayer(err_S11YT "S11YT : Minimum MTPDUMMY spacing to LOCKED1 = 2.0")

Executing: err_B1YL = geomGetNonRectangle(mtpl_dy)
	   errorLayer(err_B1YL "B1YL : Only rectangular MTPLDUMMY is allowed")

Executing: err_B2YL = geomAnd(mtpl_dy mtpldg)
	   errorLayer(err_B2YL "B2YL : MTPLDUMMY overlap of METTPL is not allowed")

Executing: err_B3YLVL = geomAnd(mtpl_dy vtpl)
	   errorLayer(err_B3YLVL "B3YLVL : MTPLDUMMY overlap of VIATPL is not allowed")

Executing: err_W1YL = drc(mtpl_dy (width < 5.0))
	   errorLayer(err_W1YL "W1YL : Minimum MTPLDUMMY width = 5.0")

Executing: err_W2YL = geomGetLength(mtpl_dy (keep > 20.0))
	   errorLayer(err_W2YL "W2YL : Maximum MTPLDUMMY edge length = 20.0")

Executing: err_S1YL = drc(mtpl_dy (sep < 5.0))
	   errorLayer(err_S1YL "S1YL : Minimum MTPLDUMMY spacing = 5.0")

Executing: err_S1YLML = drc(mtpl_dy mtpldg (sep < 5.0))
	   errorLayer(err_S1YLML "S1YLML : Minimum MTPLDUMMY spacing to METTPL = 5.0")

Executing: err_S10YL = drc(mtpl_dy lock (sep < 5.0))
	   errorLayer(err_S10YL "S10YL : Minimum MTPLDUMMY spacing to LOCKED = 5.0")

Executing: polytrm_dg = geomAnd(polytrm polydg)

Executing: geomStamp(polytrm_dg polytrm)

Executing: met1trm_dg = geomAnd(met1trm met1dg)

Executing: geomStamp(met1trm_dg met1trm)

Executing: met2trm_dg = geomAnd(met2trm met2dg)

Executing: geomStamp(met2trm_dg met2trm)

Executing: nsd_dg = geomOr(nsd ptiec isoptiec bndiff catdiff)

Executing: geomStamp(nsd_dg catdiff)

Executing: psd_dg = geomOr(psd ntiec anodiff)

Executing: geomStamp(psd_dg psd)

Executing: nd_v60 = geomGetTexted(nsd_dg hvdiff_l "tag_60v" "TAG_60V")

Executing: nd_v25 = geomGetTexted(nsd_dg hvdiff_l "tag_25v" "TAG_25V")

Executing: pd_v60 = geomGetTexted(psd_dg hvdiff_l "tag_60v" "TAG_60V")

Executing: pd_v25 = geomGetTexted(psd_dg hvdiff_l "tag_25v" "TAG_25V")

Executing: p1_v60 = geomGetTexted(polytrm_dg hvpoly_l "tag_60v" "TAG_60V")

Executing: p1_v25 = geomGetTexted(polytrm_dg hvpoly_l "tag_25v" "TAG_25V")

Executing: m1_v60 = geomGetTexted(met1trm_dg hvmet1_l "tag_60v" "TAG_60V")

Executing: m1_v25 = geomGetTexted(met1trm_dg hvmet1_l "tag_25v" "TAG_25V")

Executing: m2_v60 = geomGetTexted(met2trm_dg hvmet2_l "tag_60v" "TAG_60V")

Executing: m2_v25 = geomGetTexted(met2trm_dg hvmet2_l "tag_25v" "TAG_25V")

Executing: met3trm_dg = geomAnd(met3trm met3dg)

Executing: geomStamp(met3trm_dg met3trm)

Executing: m3_v60 = geomGetTexted(met3trm_dg hvmet3_l "tag_60v" "TAG_60V")

Executing: m3_v25 = geomGetTexted(met3trm_dg hvmet3_l "tag_25v" "TAG_25V")

Executing: met4trm_dg = geomAnd(met4trm met4dg)

Executing: geomStamp(met4trm_dg met4trm)

Executing: m4_v60 = geomGetTexted(met4trm_dg hvmet4_l "tag_60v" "TAG_60V")

Executing: m4_v25 = geomGetTexted(met4trm_dg hvmet4_l "tag_25v" "TAG_25V")

Executing: mtptrm_dg = geomAnd(mtptrm mtpdg)

Executing: geomStamp(mtptrm_dg mtptrm)

Executing: mt_v60 = geomGetTexted(mtptrm_dg hvmtp_l "tag_60v" "TAG_60V")

Executing: mt_v25 = geomGetTexted(mtptrm_dg hvmtp_l "tag_25v" "TAG_25V")

Executing: mtpltrm_dg = geomAnd(mtpltrm mtpldg)

Executing: geomStamp(mtpltrm_dg mtpltrm)

Executing: mtl_v60 = geomGetTexted(mtpltrm_dg hvmtpl_l "tag_60v" "TAG_60V")

Executing: mtl_v25 = geomGetTexted(mtpltrm_dg hvmtpl_l "tag_25v" "TAG_25V")

Executing: v60_pnd = geomNodeRelate(polytrm_dg nd_v60 conn)

Executing: v60_ppd = geomNodeRelate(polytrm_dg pd_v60 conn)

Executing: v60_p11 = geomNodeRelate(polytrm_dg p1_v60 conn)

Executing: v60_p1m1 = geomNodeRelate(polytrm_dg m1_v60 conn)

Executing: v60_p1m2 = geomNodeRelate(polytrm_dg m2_v60 conn)

Executing: v60_met1nd = geomNodeRelate(met1trm_dg nd_v60 conn)

Executing: v60_met1pd = geomNodeRelate(met1trm_dg pd_v60 conn)

Executing: v60_met1p1 = geomNodeRelate(met1trm_dg p1_v60 conn)

Executing: v60_met11 = geomNodeRelate(met1trm_dg m1_v60 conn)

Executing: v60_met12 = geomNodeRelate(met1trm_dg m2_v60 conn)

Executing: v60_met2nd = geomNodeRelate(met2trm_dg nd_v60 conn)

Executing: v60_met2pd = geomNodeRelate(met2trm_dg pd_v60 conn)

Executing: v60_met2p1 = geomNodeRelate(met2trm_dg p1_v60 conn)

Executing: v60_met21 = geomNodeRelate(met2trm_dg m1_v60 conn)

Executing: v60_met22 = geomNodeRelate(met2trm_dg m2_v60 conn)

Executing: v60_p1m3 = geomNodeRelate(polytrm_dg m3_v60 conn)

Executing: v60_met13 = geomNodeRelate(met1trm_dg m3_v60 conn)

Executing: v60_met23 = geomNodeRelate(met2trm_dg m3_v60 conn)

Executing: v60_met3nd = geomNodeRelate(met3trm_dg nd_v60 conn)

Executing: v60_met3pd = geomNodeRelate(met3trm_dg pd_v60 conn)

Executing: v60_met3p1 = geomNodeRelate(met3trm_dg p1_v60 conn)

Executing: v60_met31 = geomNodeRelate(met3trm_dg m1_v60 conn)

Executing: v60_met32 = geomNodeRelate(met3trm_dg m2_v60 conn)

Executing: v60_met33 = geomNodeRelate(met3trm_dg m3_v60 conn)

Executing: v60_p1m4 = geomNodeRelate(polytrm_dg m4_v60 conn)

Executing: v60_met14 = geomNodeRelate(met1trm_dg m4_v60 conn)

Executing: v60_met24 = geomNodeRelate(met2trm_dg m4_v60 conn)

Executing: v60_met34 = geomNodeRelate(met3trm_dg m4_v60 conn)

Executing: v60_met4nd = geomNodeRelate(met4trm_dg nd_v60 conn)

Executing: v60_met4pd = geomNodeRelate(met4trm_dg pd_v60 conn)

Executing: v60_met4p1 = geomNodeRelate(met4trm_dg p1_v60 conn)

Executing: v60_met41 = geomNodeRelate(met4trm_dg m1_v60 conn)

Executing: v60_met42 = geomNodeRelate(met4trm_dg m2_v60 conn)

Executing: v60_met43 = geomNodeRelate(met4trm_dg m3_v60 conn)

Executing: v60_met44 = geomNodeRelate(met4trm_dg m4_v60 conn)

Executing: v60_p1mt = geomNodeRelate(polytrm_dg mt_v60 conn)

Executing: v60_met1t = geomNodeRelate(met1trm_dg mt_v60 conn)

Executing: v60_met2t = geomNodeRelate(met2trm_dg mt_v60 conn)

Executing: v60_mtpnd = geomNodeRelate(mtptrm_dg nd_v60 conn)

Executing: v60_mtppd = geomNodeRelate(mtptrm_dg pd_v60 conn)

Executing: v60_mtp1 = geomNodeRelate(mtptrm_dg p1_v60 conn)

Executing: v60_mt1 = geomNodeRelate(mtptrm_dg m1_v60 conn)

Executing: v60_mt2 = geomNodeRelate(mtptrm_dg m2_v60 conn)

Executing: v60_mtt = geomNodeRelate(mtptrm_dg mt_v60 conn)

Executing: v60_met3t = geomNodeRelate(met3trm_dg mt_v60 conn)

Executing: v60_mt3 = geomNodeRelate(mtptrm_dg m3_v60 conn)

Executing: v60_met4t = geomNodeRelate(met4trm_dg mt_v60 conn)

Executing: v60_mt4 = geomNodeRelate(mtptrm_dg m4_v60 conn)

Executing: v60_p1ml = geomNodeRelate(polytrm_dg mtl_v60 conn)

Executing: v60_met1l = geomNodeRelate(met1trm_dg mtl_v60 conn)

Executing: v60_met2l = geomNodeRelate(met2trm_dg mtl_v60 conn)

Executing: v60_mlnd = geomNodeRelate(mtpltrm_dg nd_v60 conn)

Executing: v60_mlpd = geomNodeRelate(mtpltrm_dg pd_v60 conn)

Executing: v60_mlp1 = geomNodeRelate(mtpltrm_dg p1_v60 conn)

Executing: v60_ml1 = geomNodeRelate(mtpltrm_dg m1_v60 conn)

Executing: v60_ml2 = geomNodeRelate(mtpltrm_dg m2_v60 conn)

Executing: v60_mll = geomNodeRelate(mtpltrm_dg mtl_v60 conn)

Executing: v60_met3l = geomNodeRelate(met3trm_dg mtl_v60 conn)

Executing: v60_ml3 = geomNodeRelate(mtpltrm_dg m3_v60 conn)

Executing: v60_met4l = geomNodeRelate(met4trm_dg mtl_v60 conn)

Executing: v60_ml4 = geomNodeRelate(mtpltrm_dg m4_v60 conn)

Executing: v60_mettl = geomNodeRelate(mtptrm_dg mtl_v60 conn)

Executing: v60_mlt = geomNodeRelate(mtpltrm_dg mt_v60 conn)

Executing: v60_p1 = geomOr(v60_pnd v60_ppd v60_p11 v60_p1m1 v60_p1m2 v60_p1m3 v60_p1m4 v...

Executing: v60_met1 = geomOr(v60_met1nd v60_met1pd v60_met1p1 v60_met11 v60_met12 v60_me...

Executing: v60_met2 = geomOr(v60_met2nd v60_met2pd v60_met2p1 v60_met21 v60_met22 v60_me...

Executing: v60_met3 = geomOr(v60_met3nd v60_met3pd v60_met3p1 v60_met31 v60_met32 v60_me...

Executing: v60_met4 = geomOr(v60_met4nd v60_met4pd v60_met4p1 v60_met41 v60_met42 v60_me...

Executing: v60_mtp = geomOr(v60_mtpnd v60_mtppd v60_mtp1 v60_mt1 v60_mt2 v60_mt3 v60_mt3...

Executing: v60_ml = geomOr(v60_mlnd v60_mlpd v60_mll v60_mlp1 v60_ml1 v60_ml2 v60_ml3 v6...

Executing: v60_met = geomOr(v60_p1 v60_met1 v60_met2 v60_met3 v60_met4 v60_mtp v60_ml)

Executing: v25_pnd = geomNodeRelate(polytrm_dg nd_v25 conn)

Executing: v25_ppd = geomNodeRelate(polytrm_dg pd_v25 conn)

Executing: v25_p11 = geomNodeRelate(polytrm_dg p1_v25 conn)

Executing: v25_p1m1 = geomNodeRelate(polytrm_dg m1_v25 conn)

Executing: v25_p1m2 = geomNodeRelate(polytrm_dg m2_v25 conn)

Executing: v25_met1nd = geomNodeRelate(met1trm_dg nd_v25 conn)

Executing: v25_met1pd = geomNodeRelate(met1trm_dg pd_v25 conn)

Executing: v25_met1p1 = geomNodeRelate(met1trm_dg p1_v25 conn)

Executing: v25_met11 = geomNodeRelate(met1trm_dg m1_v25 conn)

Executing: v25_met12 = geomNodeRelate(met1trm_dg m2_v25 conn)

Executing: v25_met2nd = geomNodeRelate(met2trm_dg nd_v25 conn)

Executing: v25_met2pd = geomNodeRelate(met2trm_dg pd_v25 conn)

Executing: v25_met2p1 = geomNodeRelate(met2trm_dg p1_v25 conn)

Executing: v25_met21 = geomNodeRelate(met2trm_dg m1_v25 conn)

Executing: v25_met22 = geomNodeRelate(met2trm_dg m2_v25 conn)

Executing: v25_p1m3 = geomNodeRelate(polytrm_dg m3_v25 conn)

Executing: v25_met13 = geomNodeRelate(met1trm_dg m3_v25 conn)

Executing: v25_met23 = geomNodeRelate(met2trm_dg m3_v25 conn)

Executing: v25_met3nd = geomNodeRelate(met3trm_dg nd_v25 conn)

Executing: v25_met3pd = geomNodeRelate(met3trm_dg pd_v25 conn)

Executing: v25_met3p1 = geomNodeRelate(met3trm_dg p1_v25 conn)

Executing: v25_met31 = geomNodeRelate(met3trm_dg m1_v25 conn)

Executing: v25_met32 = geomNodeRelate(met3trm_dg m2_v25 conn)

Executing: v25_met33 = geomNodeRelate(met3trm_dg m3_v25 conn)

Executing: v25_p1m4 = geomNodeRelate(polytrm_dg m4_v25 conn)

Executing: v25_met14 = geomNodeRelate(met1trm_dg m4_v25 conn)

Executing: v25_met24 = geomNodeRelate(met2trm_dg m4_v25 conn)

Executing: v25_met34 = geomNodeRelate(met3trm_dg m4_v25 conn)

Executing: v25_met4nd = geomNodeRelate(met4trm_dg nd_v25 conn)

Executing: v25_met4pd = geomNodeRelate(met4trm_dg pd_v25 conn)

Executing: v25_met4p1 = geomNodeRelate(met4trm_dg p1_v25 conn)

Executing: v25_met41 = geomNodeRelate(met4trm_dg m1_v25 conn)

Executing: v25_met42 = geomNodeRelate(met4trm_dg m2_v25 conn)

Executing: v25_met43 = geomNodeRelate(met4trm_dg m3_v25 conn)

Executing: v25_met44 = geomNodeRelate(met4trm_dg m4_v25 conn)

Executing: v25_p1mt = geomNodeRelate(polytrm_dg mt_v25 conn)

Executing: v25_met1t = geomNodeRelate(met1trm_dg mt_v25 conn)

Executing: v25_met2t = geomNodeRelate(met2trm_dg mt_v25 conn)

Executing: v25_mtpnd = geomNodeRelate(mtptrm_dg nd_v25 conn)

Executing: v25_mtppd = geomNodeRelate(mtptrm_dg pd_v25 conn)

Executing: v25_mtp1 = geomNodeRelate(mtptrm_dg p1_v25 conn)

Executing: v25_mt1 = geomNodeRelate(mtptrm_dg m1_v25 conn)

Executing: v25_mt2 = geomNodeRelate(mtptrm_dg m2_v25 conn)

Executing: v25_mtt = geomNodeRelate(mtptrm_dg mt_v25 conn)

Executing: v25_met3t = geomNodeRelate(met3trm_dg mt_v25 conn)

Executing: v25_mt3 = geomNodeRelate(mtptrm_dg m3_v25 conn)

Executing: v25_met4t = geomNodeRelate(met4trm_dg mt_v25 conn)

Executing: v25_mt4 = geomNodeRelate(mtptrm_dg m4_v25 conn)

Executing: v25_p1ml = geomNodeRelate(polytrm_dg mtl_v25 conn)

Executing: v25_met1l = geomNodeRelate(met1trm_dg mtl_v25 conn)

Executing: v25_met2l = geomNodeRelate(met2trm_dg mtl_v25 conn)

Executing: v25_mlnd = geomNodeRelate(mtpltrm_dg nd_v25 conn)

Executing: v25_mlpd = geomNodeRelate(mtpltrm_dg pd_v25 conn)

Executing: v25_mlp1 = geomNodeRelate(mtpltrm_dg p1_v25 conn)

Executing: v25_ml1 = geomNodeRelate(mtpltrm_dg m1_v25 conn)

Executing: v25_ml2 = geomNodeRelate(mtpltrm_dg m2_v25 conn)

Executing: v25_mll = geomNodeRelate(mtpltrm_dg mtl_v25 conn)

Executing: v25_met3l = geomNodeRelate(met3trm_dg mtl_v25 conn)

Executing: v25_ml3 = geomNodeRelate(mtpltrm_dg m3_v25 conn)

Executing: v25_met4l = geomNodeRelate(met4trm_dg mtl_v25 conn)

Executing: v25_ml4 = geomNodeRelate(mtpltrm_dg m4_v25 conn)

Executing: v25_mettl = geomNodeRelate(mtptrm_dg mtl_v25 conn)

Executing: v25_mlt = geomNodeRelate(mtpltrm_dg mt_v25 conn)

Executing: v25_p1 = geomOr(v25_pnd v25_ppd v25_p11 v25_p1m1 v25_p1m2 v25_p1m3 v25_p1m4 v...

Executing: v25_met1 = geomOr(v25_met1nd v25_met1pd v25_met1p1 v25_met11 v25_met12 v25_me...

Executing: v25_met2 = geomOr(v25_met2nd v25_met2pd v25_met2p1 v25_met21 v25_met22 v25_me...

Executing: v25_met3 = geomOr(v25_met3nd v25_met3pd v25_met3p1 v25_met31 v25_met32 v25_me...

Executing: v25_met4 = geomOr(v25_met4nd v25_met4pd v25_met4p1 v25_met41 v25_met42 v25_me...

Executing: v25_mtp = geomOr(v25_mtpnd v25_mtppd v25_mtp1 v25_mt1 v25_mt2 v25_mt3 v25_mt3...

Executing: v25_ml = geomOr(v25_mlnd v25_mlpd v25_mll v25_mlp1 v25_ml1 v25_ml2 v25_ml3 v2...

Executing: v25_met = geomOr(v25_p1 v25_met1 v25_met2 v25_met3 v25_met4 v25_mtp v25_ml)

Executing: geomStamp(v25_p1 polytrm_dg)

Executing: geomStamp(v25_met1 met1trm_dg)

Executing: geomStamp(v25_met2 met2trm_dg)

Executing: poly_v25 = geomOverlap(polytrm_dg v25_p1 sameNet)

Executing: met1_v25 = geomOverlap(met1trm_dg v25_met1 sameNet)

Executing: met2_v25 = geomOverlap(met2trm_dg v25_met2 sameNet)

Executing: met1res_v25 = geomButting(met1res met1_v25)

Executing: met1_v25r = geomOr(met1_v25 met1res_v25)

Executing: met2res_v25 = geomButting(met2res met2_v25)

Executing: met2_v25r = geomOr(met2_v25 met2res_v25)

Executing: geomStamp(v25_met3 met3trm_dg)

Executing: met3_v25 = geomOverlap(met3trm_dg v25_met3 sameNet)

Executing: met3res_v25 = geomButting(met3res met3_v25)

Executing: met3_v25r = geomOr(met3_v25 met3res_v25)

Executing: geomStamp(v25_met4 met4trm_dg)

Executing: met4_v25 = geomOverlap(met4trm_dg v25_met4 sameNet)

Executing: met4res_v25 = geomButting(met4res met4_v25)

Executing: met4_v25r = geomOr(met4_v25 met4res_v25)

Executing: geomStamp(v25_mtp mtptrm_dg)

Executing: mtp_v25 = geomOverlap(mtptrm_dg v25_mtp sameNet)

Executing: mtpres_v25 = geomButting(mtpres mtp_v25)

Executing: mtp_v25r = geomOr(mtp_v25 mtpres_v25)

Executing: geomStamp(v60_p1 polytrm_dg)

Executing: geomStamp(v60_met1 met1trm_dg)

Executing: geomStamp(v60_met2 met2trm_dg)

Executing: poly_v60 = geomOverlap(polytrm_dg v60_p1 sameNet)

Executing: met1_v60 = geomOverlap(met1trm_dg v60_met1 sameNet)

Executing: met2_v60 = geomOverlap(met2trm_dg v60_met2 sameNet)

Executing: met1res_v60 = geomButting(met1res met1_v60)

Executing: met1_v60r = geomOr(met1_v60 met1res_v60)

Executing: met2res_v60 = geomButting(met2res met2_v60)

Executing: met2_v60r = geomOr(met2_v60 met2res_v60)

Executing: geomStamp(v60_met3 met3trm_dg)

Executing: met3_v60 = geomOverlap(met3trm_dg v60_met3 sameNet)

Executing: met3res_v60 = geomButting(met3res met3_v60)

Executing: met3_v60r = geomOr(met3_v60 met3res_v60)

Executing: geomStamp(v60_met4 met4trm_dg)

Executing: met4_v60 = geomOverlap(met4trm_dg v60_met4 sameNet)

Executing: met4res_v60 = geomButting(met4res met4_v60)

Executing: met4_v60r = geomOr(met4_v60 met4res_v60)

Executing: geomStamp(v60_mtp mtptrm_dg)

Executing: mtp_v60 = geomOverlap(mtptrm_dg v60_mtp sameNet)

Executing: mtpres_v60 = geomButting(mtpres mtp_v60)

Executing: mtp_v60r = geomOr(mtp_v60 mtpres_v60)

Executing: met1trm0 = geomAndNot(geomOr(met1trm_dg met1res) met1_v60r)

Executing: met1trml = geomAndNot(met1trm_dg geomOr(v60_met1 v25_met1))

Executing: met2trm0 = geomAndNot(geomOr(met2trm_dg met2res) met2_v60r)

Executing: met2trml = geomAndNot(met2trm_dg geomOr(v60_met2 v25_met2))

Executing: met3trm0 = geomAndNot(geomOr(met3trm_dg met3res) met3_v60r)

Executing: met3trml = geomAndNot(met3trm_dg geomOr(v60_met3 v25_met3))

Executing: met4trm0 = geomAndNot(geomOr(met4trm_dg met4res) met4_v60r)

Executing: met4trml = geomAndNot(met4trm_dg geomOr(v60_met4 v25_met4))

Executing: mtptrm0 = geomAndNot(geomOr(mtptrm_dg mtpres) mtp_v60r)

Executing: mtptrml = geomAndNot(mtptrm_dg geomOr(v60_mtp v25_mtp))

Executing: mtpltrml = geomAndNot(mtpltrm_dg geomOr(v60_ml v25_ml))

Executing: poly_res = geomCat(polyres_n polyres_p polyres_ps polyres_ho rpp1k1 pfuse)

Executing: poly_res_v60 = geomButting(poly_res poly_v60)

Executing: poly_res_v25 = geomButting(poly_res poly_v25)

Executing: poly_v60r = geomOr(poly_v60 poly_res_v60)

Executing: poly_v25r = geomOr(poly_v25 poly_res_v25)

Executing: val_p1_a = geomOr(v25_p1 v60_p1)

Executing: poly_vn0 = geomAndNot(geomOr(polytrm_dg poly_res) poly_v60r)

Executing: poly_vn1_1 = geomOr(poly_vn0 poly_v25r)

Executing: diffn_v60 = geomNodeRelate(nsd_dg v60_met1 conn)

Executing: diffp_v60 = geomNodeRelate(psd_dg v60_met1 conn)

Executing: diffn_v25 = geomNodeRelate(nsd_dg v25_met1 conn)

Executing: diffp_v25 = geomNodeRelate(psd_dg v25_met1 conn)

Executing: ndifres_v60 = geomButting(ndifres diffn_v60)

Executing: ndifres_v25 = geomButting(ndifres diffn_v25)

Executing: diffn_v60r = geomOr(diffn_v60 ndifres_v60)

Executing: diffn_v25r = geomOr(diffn_v25 ndifres_v25)

Executing: pdifres_v60 = geomButting(pdifres diffp_v60)

Executing: pdifres_v25 = geomButting(pdifres diffp_v25)

Executing: diffp_v60r = geomOr(diffp_v60 pdifres_v60)

Executing: diffp_v25r = geomOr(diffp_v25 pdifres_v25)

Executing: diff_v60r = geomOr(diffn_v60r diffp_v60r)

Executing: diff_v25r = geomOr(diffn_v25r diffp_v25r)

Executing: val_diffn_a = geomOr(diffn_v60 diffn_v25)

Executing: val_diffp_a = geomOr(diffp_v60 diffp_v25)

Executing: diffnl = geomAndNot(nsd_dg val_diffn_a)

Executing: diffpl = geomAndNot(psd_dg val_diffp_a)

Executing: val_diffr = geomOr(diff_v60r)

Executing: diff_vn0 = geomAndNot(geomOr(geomOr(psd_dg rdp_a) geomOr(nsd_dg rdn_a)) val_d...

Executing: diff_vn1_1 = geomOr(diff_vn0 diff_v25r)

Executing: err_rdnterm = geomGetEdge(diffnl butting geomButting(ndifres val_diffn_a (kee...
	   errorLayer(err_rdnterm "Q1M1 : Resistor terminal net without VLABEL")

Executing: err_rdpterm = geomGetEdge(diffpl butting geomButting(pdifres val_diffp_a (kee...
	   errorLayer(err_rdpterm "Q1M1 : Resistor terminal net without VLABEL")

Executing: rnw_term = geomButting(nwgtrm resnwell1)

Executing: val_rnw_term = geomStraddle(rnw_term val_diffn_a)

Executing: err_rnwterm = geomGetEdge(geomAndNot(rnw_term val_rnw_term) butting geomButti...
	   errorLayer(err_rnwterm "Q1M1 : Resistor terminal net without VLABEL")

Executing: rdnw_term = geomButting(dnwellmvtrm resdnwellmv)

Executing: val_rdnw_term = geomStraddle(rdnw_term val_diffn_a)

Executing: err_rdnwterm = geomGetEdge(geomAndNot(rdnw_term val_rdnw_term) butting geomBu...
	   errorLayer(err_rdnwterm "Q1M1 : Resistor terminal net without VLABEL")

Executing: polyres_v = geomButting(poly_res val_p1_a (keep == 1))

Executing: geomGetEdge(polyres_v butting polytrm_dg outside val_p1_a)

Executing: err_rm1term = geomGetEdge(met1trml butting geomButting(met1res geomOr(v60_met...
	   errorLayer(err_rm1term "Q1M1 : Resistor terminal net without VLABEL")

Executing: err_rm2term = geomGetEdge(met2trml butting geomButting(met2res geomOr(v60_met...
	   errorLayer(err_rm2term "Q1M2 : Resistor terminal net without VLABEL")

Executing: err_rm3term = geomGetEdge(met3trml butting geomButting(met3res geomOr(v60_met...
	   errorLayer(err_rm3term "Q1M3 : Resistor terminal net without VLABEL")

Executing: err_rm4term = geomGetEdge(met4trml butting geomButting(met4res geomOr(v60_met...
	   errorLayer(err_rm4term "Q1M4 : Resistor terminal net without VLABEL")

Executing: err_rmtterm = geomGetEdge(mtptrml butting geomButting(mtpres geomOr(v60_met v...
	   errorLayer(err_rmtterm "Q1MT : Resistor terminal net without VLABEL")

Executing: err_rmlterm = geomGetEdge(mtpltrml butting geomButting(mtplres geomOr(v60_met...
	   errorLayer(err_rmlterm "Q1ML : Resistor terminal net without VLABEL")

Executing: err_S3P1a = drc(poly_v60r poly_vn1_1 ((0 < sep) < 0.5) shielded)

Executing: err_S3P1 = geomAndNot(err_S3P1a geomOr(drc(polytrm (sep < 0.5) sameNet) drc(p...
	   errorLayer(err_S3P1 "S3P1 : Minimum POLY1 spacing for different voltage class = 0.5")

Executing: err_S5P1DFa = drc(poly_v60r diff_vn1_1 ((0 < sep) < 0.5) shielded)

Executing: err_S5P1DFb = drc(diff_v60r poly_vn1_1 ((0 < sep) < 0.5) shielded)

Executing: err_S5P1DF = geomAndNot(geomOr(err_S5P1DFa err_S5P1DFb) geomOr(drc(polytrm ns...
	   errorLayer(err_S5P1DF "S5P1DF : Minimum POLY1 spacing to DIFF for different voltage class = 0.5")

Executing: met1trm1 = geomOr(met1trm0 met1_v25r)

Executing: met1_check = geomAndNot(met1trm davl_ex1)

Executing: err_S4M1a = geomOr(drc(met1_v60r met1trm1 ((0 < sep) < 0.38)) drc(met1_v60r m...

Executing: err_S4M1 = geomAndNot(err_S4M1a geomOr(drc(met1trm (sep < 0.38) sameNet) drc(...
	   errorLayer(err_S4M1 "S4M1 : Minimum MET1 spacing for different voltage class = 0.38")

Executing: met2trm1 = geomOr(met2trm0 met2_v25r)

Executing: err_S4M2a = geomOr(drc(met2_v60r met2trm1 ((0 < sep) < 0.4)) drc(met2_v60r me...

Executing: err_S4M2 = geomAndNot(err_S4M2a geomOr(drc(met2trm (sep < 0.4) sameNet) drc(m...
	   errorLayer(err_S4M2 "S4M2 : Minimum MET2 spacing for different voltage class = 0.4")

Executing: met3trm1 = geomOr(met3trm0 met3_v25r)

Executing: err_S4M3a = geomOr(drc(met3_v60r met3trm1 ((0 < sep) < 0.4)) drc(met3_v60r me...

Executing: err_S4M3 = geomAndNot(err_S4M3a geomOr(drc(met3trm (sep < 0.4) sameNet) drc(m...
	   errorLayer(err_S4M3 "S4M3 : Minimum MET3 spacing for different voltage class = 0.4")

Executing: met4trm1 = geomOr(met4trm0 met4_v25r)

Executing: err_S4M4a = geomOr(drc(met4_v60r met4trm1 ((0 < sep) < 0.4)) drc(met4_v60r me...

Executing: err_S4M4 = geomAndNot(err_S4M4a geomOr(drc(met4trm (sep < 0.4) sameNet) drc(m...
	   errorLayer(err_S4M4 "S4M4 : Minimum MET4 spacing for different voltage class = 0.4")

Executing: mtptrm1 = geomOr(mtptrm0 mtp_v25r)

Executing: err_S4MTa = geomOr(drc(mtp_v60r mtptrm1 ((0 < sep) < 0.5)) drc(mtp_v60r mtp_v...

Executing: err_S4MT = geomAndNot(err_S4MTa geomOr(drc(mtptrm (sep < 0.5) sameNet) drc(mt...
	   errorLayer(err_S4MT "S4MT : Minimum MTP spacing for different voltage class = 0.5")

Executing: N1 = geomOr(geomGetNon45(pwblk))
	   errorLayer(N1 "PWBLK not multiple 45 degrees")

Executing: N2 = geomOr(geomGetNon45(pad))
	   errorLayer(N2 "PAD not multiple 45 degrees")

Executing: N3 = geomOr(geomGetNon45(diff))
	   errorLayer(N3 "DIFF not multiple 45 degrees")

Executing: N4 = geomOr(geomGetNon45(pimp))
	   errorLayer(N4 "PIMP not multiple 45 degrees")

Executing: N5 = geomOr(geomGetNon45(nimp))
	   errorLayer(N5 "NIMP not multiple 45 degrees")

Executing: N6 = geomOr(geomGetNon45(sab))
	   errorLayer(N6 "SBLK not multiple 45 degrees")

Executing: N7 = geomOr(geomGetNon45(nwell))
	   errorLayer(N7 "NWELL not multiple 45 degrees")

Executing: N8 = geomOr(geomGetNon45(dnwelldg))
	   errorLayer(N8 "DNWELL not multiple 45 degrees")

Executing: N9 = geomOr(geomGetNon45(dnwellmv))
	   errorLayer(N9 "DNWELLMV not multiple 45 degrees")

Executing: N10 = geomOr(geomGetNon45(mv))
	   errorLayer(N10 "MV not multiple 45 degrees")

Executing: N11 = geomOr(geomGetNon45(cont))
	   errorLayer(N11 "CONT not multiple 45 degrees")

Executing: N12 = geomOr(geomGetNon45(poly))
	   errorLayer(N12 "POLY1 not multiple 45 degrees")

Executing: N13 = geomOr(geomGetNon45(geomCat(met1dg met1_dy)))
	   errorLayer(N13 "MET1 not multiple 45 degrees")

Executing: N14 = geomOr(geomGetNon45(geomCat(met2dg met2_dy)))
	   errorLayer(N14 "MET2 not multiple 45 degrees")

Executing: N16 = geomOr(geomGetNon45(met1s))
	   errorLayer(N16 "M1HOLE not multiple 45 degrees")

Executing: N17 = geomOr(geomGetNon45(met2s))
	   errorLayer(N17 "M2HOLE not multiple 45 degrees")

Executing: N15 = geomOr(geomGetNon45(geomCat(met3dg met3_dy)))
	   errorLayer(N15 "MET3 not multiple 45 degrees")

Executing: N18 = geomOr(geomGetNon45(met3s))
	   errorLayer(N18 "M3HOLE not multiple 45 degrees")

Executing: N30 = geomOr(geomGetNon45(via2))
	   errorLayer(N30 "VIA2 not multiple 45 degrees")

Executing: N19 = geomOr(geomGetNon45(geomCat(met4dg met4_dy)))
	   errorLayer(N19 "MET4 not multiple 45 degrees")

Executing: N20 = geomOr(geomGetNon45(met4s))
	   errorLayer(N20 "M4HOLE not multiple 45 degrees")

Executing: N21 = geomOr(geomGetNon45(via3))
	   errorLayer(N21 "VIA3 not multiple 45 degrees")

Executing: N25 = geomOr(geomGetNon45(geomCat(mtpldg mtpl_dy)))
	   errorLayer(N25 "METTPL not multiple 45 degrees")

Executing: N26 = geomOr(geomGetNon45(vtpl))
	   errorLayer(N26 "VIATPL not multiple 45 degrees")

Executing: N27 = geomOr(geomGetNon45(geomCat(mtpdg mtp_dy)))
	   errorLayer(N27 "METTP not multiple 45 degrees")

Executing: N28 = geomOr(geomGetNon45(mtps))
	   errorLayer(N28 "MTHOLE not multiple 45 degrees")

Executing: N31 = geomOr(geomGetNon45(vtp))
	   errorLayer(N31 "VIATP not multiple 45 degrees")

Executing: N29 = geomOr(geomGetNon45(via1))
	   errorLayer(N29 "VIA1 not multiple 45 degrees")

Executing: N32 = geomOr(geomGetNon45(cm))
	   errorLayer(N32 "CM not multiple 45 degrees")

Executing: N33 = geomOr(geomGetNon45(cm2))
	   errorLayer(N33 "CM2 not multiple 45 degrees")

Executing: N34 = geomOr(geomGetNon45(cm3))
	   errorLayer(N34 "CM3 not multiple 45 degrees")

Executing: N35 = geomOr(geomGetNon45(gxh))
	   errorLayer(N35 "HVGOX not multiple 45 degrees")

Executing: N36 = geomOr(geomGetNon45(pbd))
	   errorLayer(N36 "HVPWELL not multiple 45 degrees")

Executing: N37 = geomOr(geomGetNon45(nbd))
	   errorLayer(N37 "HVNWELL not multiple 45 degrees")

Executing: N38 = geomOr(geomGetNon45(depl))
	   errorLayer(N38 "DEPL not multiple 45 degrees")

Executing: N39 = geomOr(geomGetNon45(isopw))
	   errorLayer(N39 "ISOPW not multiple 45 degrees")

Executing: N40 = geomOr(geomGetNon45(pdd))
	   errorLayer(N40 "PDD not multiple 45 degrees")

Executing: N41 = geomOr(geomGetNon45(sci))
	   errorLayer(N41 "SCI not multiple 45 degrees")

Executing: N42 = geomOr(geomGetNon45(hres))
	   errorLayer(N42 "HRES not multiple 45 degrees")

Executing: N43 = geomOr(geomGetNon45(nopim))
	   errorLayer(N43 "NOPIM not multiple 45 degrees")

Executing: N44 = geomOr(geomGetNon45(dnc))
	   errorLayer(N44 "DNC not multiple 45 degrees")

Executing: N45 = geomOr(geomGetNon45(dpc))
	   errorLayer(N45 "DPC not multiple 45 degrees")

Executing: N46 = geomOr(geomGetNon45(hnw))
	   errorLayer(N46 "HNW not multiple 45 degrees")

Executing: N47 = geomOr(geomGetNon45(ndf))
	   errorLayer(N47 "NDF not multiple 45 degrees")

Executing: N48 = geomOr(geomGetNon45(pdf))
	   errorLayer(N48 "PDF not multiple 45 degrees")

Executing: N49 = geomOr(geomGetNon45(mres))
	   errorLayer(N49 "MRES not multiple 45 degrees")

Executing: N50 = geomOr(geomGetNon45(lvt))
	   errorLayer(N50 "LVT not multiple 45 degrees")

Executing: N51 = geomOr(geomGetNon45(hvdepl))
	   errorLayer(N51 "HVDEPL not multiple 45 degrees")

Executing: N52 = geomOr(geomGetNon45(cmh))
	   errorLayer(N52 "CAPMH not multiple 45 degrees")

Executing: N53 = geomOr(geomGetNon45(cmh2))
	   errorLayer(N53 "CAPMH2 not multiple 45 degrees")

Executing: N54 = geomOr(geomGetNon45(cmh3))
	   errorLayer(N54 "CAPMH3 not multiple 45 degrees")

Executing: N61 = geomOr(geomGetNon45(cm23f))
	   errorLayer(N61 "CAPM23F not multiple 45 degrees")

Executing: N62 = geomOr(geomGetNon45(cmh23f))
	   errorLayer(N62 "CAPMH23F not multiple 45 degrees")

Executing: N63 = geomOr(geomGetNon45(cm34f))
	   errorLayer(N63 "CAPM34F not multiple 45 degrees")

Executing: N64 = geomOr(geomGetNon45(cmh34f))
	   errorLayer(N64 "CAPMH34F not multiple 45 degrees")

Executing: N66 = geomOr(geomGetNon45(uvwin))
	   errorLayer(N66 "UVWIN not multiple 45 degrees")

Executing: N67 = geomOr(geomGetNon45(anodop))
	   errorLayer(N67 "ANODOP not multiple 45 degrees")

Executing: N68 = geomOr(geomGetNon45(catdop))
	   errorLayer(N68 "CATDOP not multiple 45 degrees")

Executing: N69 = geomOr(geomGetNon45(lndev))
	   errorLayer(N69 "LNDEV not multiple 45 degrees")

Executing: N70 = geomOr(geomGetNon45(aml))
	   errorLayer(N70 "AML not multiple 45 degrees")

Executing: N82 = geomOr(geomGetNon45(uln))
	   errorLayer(N82 "ULN not multiple 45 degrees")

Executing: N83 = geomOr(geomGetNon45(bnimp))
	   errorLayer(N83 "BNIMP not multiple 45 degrees")

Executing: N84 = geomOr(geomGetNon45(svt))
	   errorLayer(N84 "SVT not multiple 45 degrees")

Executing: P1 = geomAndNot(polypin poly)
	   errorLayer(P1 "POLY1 pin without POLY1 drawing")

Executing: P2 = geomAndNot(met1pin met1)
	   errorLayer(P2 "MET1 pin without MET1 drawing")

Executing: P3 = geomAndNot(met2pin met2)
	   errorLayer(P3 "MET2 pin without MET2 drawing")

Executing: P4 = geomAndNot(met3pin met3)
	   errorLayer(P4 "MET3 pin without MET3 drawing")

Executing: P5 = geomAndNot(met4pin met4)
	   errorLayer(P5 "MET4 pin without MET4 drawing")

Executing: P7 = geomAndNot(mtppin mtp)
	   errorLayer(P7 "METTP pin without METTP drawing")

Executing: P8 = geomAndNot(mtplpin mtpl)
	   errorLayer(P8 "METTPL pin without METTPL drawing")

Executing: blk_lay = geomOr(blkall blkp1 blkm1 blkm2 blkm3 blkm4 blkmt blkml)

Executing: lock_layer = geomCat(nwellg pwblk diff poly mv sab nimp pimp met1 met2 hres m...

Executing: BDLOCK1_errlay = geomAnd(lock lock_layer)
	   errorLayer(BDLOCK1_errlay "  BDLOCK : Any structure over LOCKED (ALL) or LOCKED (boundary) is not allowed")

Executing: BDLOCK2_errlay = geomAnd(lock met3)
	   errorLayer(BDLOCK2_errlay "  BDLOCK : Any structure over LOCKED (ALL) or LOCKED (boundary) is not allowed")

Executing: BDLOCK3_errlay = geomAnd(lock met4)
	   errorLayer(BDLOCK3_errlay "  BDLOCK : Any structure over LOCKED (ALL) or LOCKED (boundary) is not allowed")

Executing: BDLOCK5_errlay = geomAnd(lock mtp)
	   errorLayer(BDLOCK5_errlay "  BDLOCK : Any structure over LOCKED (ALL) or LOCKED (boundary)is not allowed")

Executing: BDLOCK6_errlay = geomAnd(lock mtpl)
	   errorLayer(BDLOCK6_errlay "  BDLOCK : Any structure over LOCKED (ALL) or LOCKED (boundary) is not allowed")

Executing: B1LOCK1_errlay = geomAnd(lock1 lock_layer)
	   errorLayer(B1LOCK1_errlay "  B1LOCK : Any structure over LOCKED (LOCKED1) or LOCKED1 (boundary) is not allowed")

Executing: B1LOCK2_errlay = geomAnd(lock1 met3)
	   errorLayer(B1LOCK2_errlay "  B1LOCK : Any structure over LOCKED (LOCKED1) or LOCKED1 (boundary) is not allowed")

Executing: B1LOCK3_errlay = geomAnd(lock1 met4)
	   errorLayer(B1LOCK3_errlay "  B1LOCK : Any structure over LOCKED (LOCKED1) or LOCKED1 (boundary) is not allowed")

Executing: B1LOCK5_errlay = geomAnd(lock1 mtp)
	   errorLayer(B1LOCK5_errlay "  B1LOCK : Any structure over LOCKED (LOCKED1) or LOCKED1 (boundary) is not allowed")

Executing: B2LOCK1_errlay = geomAnd(lock2 lock_layer)
	   errorLayer(B2LOCK1_errlay "  B2LOCK : Any structure over LOCKED (LOCKED2) or LOCKED2 (boundary) is not allowed")

Executing: B2LOCK2_errlay = geomAnd(lock2 met3)
	   errorLayer(B2LOCK2_errlay "  B2LOCK : Any structure over LOCKED (LOCKED2) or LOCKED2 (boundary) is not allowed")

Executing: B2LOCK3_errlay = geomAnd(lock2 met4)
	   errorLayer(B2LOCK3_errlay "  B2LOCK : Any structure over LOCKED (LOCKED2) or LOCKED2 (boundary) is not allowed")

Executing: B3LOCK1_errlay = geomAnd(lock3 lock_layer)
	   errorLayer(B3LOCK1_errlay "  B3LOCK : Any structure over LOCKED (LOCKED3) or LOCKED3 (boundary) is not allowed")

Executing: B3LOCK2_errlay = geomAnd(lock3 met3)
	   errorLayer(B3LOCK2_errlay "  B3LOCK : Any structure over LOCKED (LOCKED3) or LOCKED3 (boundary) is not allowed")

Executing: B4LOCK1_errlay = geomAnd(lock4 lock_layer)
	   errorLayer(B4LOCK1_errlay "  B4LOCK : Any structure over LOCKED (LOCKED4) or LOCKED4 (boundary) is not allowed")

Executing: R0 = geomOr(xflay_all)
	   errorLayer(R0 "BDXF : Not allowed to be used by customers")

Executing: dnc_dsb = geomAnd(dnc geomSize(d_dsdf 2.35))

Executing: err_BDNC = geomAndNot(dnc dnc_dsb)
	   errorLayer(err_BDNC "BDNC : Not allowed to be used by customers")

Executing: err_BDPC = geomOr(dpc)
	   errorLayer(err_BDPC "BDPC : Not allowed to be used by customers")

Executing: RN1 = geomOr(diffnblk)
	   errorLayer(RN1 "BDDF : Not allowed to be used by customers")

Executing: RN2 = geomOr(polynblk)
	   errorLayer(RN2 "BDP1 : Not allowed to be used by customers")

Executing: pogt = geomButtOrOver(poly gate)

Executing: pfox = geomAndNot(pogt gate)

Executing: pfox_conn = geomCat(pfox)

Executing: cont_conn = geomCat(cont)

Executing: via1_conn = geomCat(via1)

Executing: via2_conn = geomCat(via2CON)

Executing: via3_conn = geomCat(via3CON)

Executing: vtp_conn = geomCat(vtpCON)

Executing: vtpl_conn = geomCat(vtpl)

Executing: geomConnect((via pfox_conn pfox poly) (via cont_conn cont poly))

Executing: processAntenna(((gate (gate poly)) (antenna pfox poly cont) (pfoxR = (((pfox....
running in speedup mode
running in speedup mode

Executing: geomConnect((via cont met1 poly sd) (via via1_conn via1 met1))

Executing: processAntenna(((gate (gate poly)) (antenna poly met1 via1) (diffusion sd) (m...
running in speedup mode
running in speedup mode

Executing: geomConnect((via cont met1 poly sd) (via via1_conn met2 met1) (via via2_conn ...

Executing: processAntenna(((gate (gate poly)) (antenna poly met1 met2 via2) (diffusion s...
running in speedup mode
running in speedup mode

Executing: geomConnect((via cont met1 poly sd) (via via1_conn met2 met1) (via via2_conn ...

Executing: processAntenna(((gate (gate poly)) (antenna poly met1 met2 met3 via3) (diffus...
running in speedup mode
running in speedup mode

Executing: geomConnect((via cont met1 poly sd) (via via1_conn met2 met1) (via via2_conn ...

Executing: processAntenna(((gate (gate poly)) (antenna poly met1 met2 met3 met4 vtp) (di...
running in speedup mode
running in speedup mode

Executing: geomConnect((via cont met1 poly sd) (via via1_conn met2 met1) (via via2_conn ...

Executing: processAntenna(((gate (gate poly)) (antenna poly met1 met2 met3 met4 mtp vtpl...
running in speedup mode
running in speedup mode

Executing: geomConnect((via cont met1 poly sd) (via via1_conn met2 met1) (via via2_conn ...

Executing: processAntenna(((gate (gate poly)) (antenna poly met1 met2 met3 met4 mtp mtpl...
running in speedup mode

Finished running rules. Task processor time in main process:
cpu: 1.63  elap: 2  pf: 0  in: 0  out: 3752  virt: 336M  phys: 1756M

Started output post-processing ...

Nothing to postprocess: No grid cells in the design

Finished output post-processing
cpu: 0.33  elap: 1  pf: 0  in: 0  out: 0  virt: 653M  phys: 2066M

Finished building the persistent database.
cpu: 0.01  elap: 0  pf: 0  in: 0  out: 6496  virt: 656M  phys: 2080M


*****  aveng terminated normally  *****


Finished /pkg/cadence/installs/ASSURA41//tools.lnx86/assura/bin/aveng

Starting /pkg/cadence/installs/ASSURA41//tools.lnx86/assura/bin/avrpt /home/ykhuang/research/AssuraDRC/CurrentMirror_x10_LV_DRC.rsf

Loading tech rule set file : /home/ykhuang/research/.assuraSetup/Assura/techRuleSets

Loading tech rule set file : /home/ykhuang/research/.assuraSetup/Assura/techRuleSets

Loading tech rule set file : /home/ykhuang/research/.assuraSetup/Assura/techRuleSets
@(#)$CDS: avrpt_64 version av4.1:Production:dfII6.1.8-64b:IC6.1.8-64b.500.1 08/29/2019 23:39 (sj-ramneek) $
sub-version 4.1_USR6_HF3, integ signature 2019-08-29-0302

run on s2424 from /pkg/cadence/installs/ASSURA41/tools.lnx86/assura/bin/64bit/avrpt on Fri Apr 23 16:42:34 2021


   Creating Error Database 'CurrentMirror_x10_LV_DRC'...

   Reading VDB ...
--------------------------------------------------------------------------------
Rule      Message                                    FlatCount     RealCount
--------------------------------------------------------------------------------
(    1)  dataAuditErrors                                     0            0
(    2)  CELL-OFFGRID                                        0            0
(    3)  PATH-CENTERLINE-OFFGRID_pad                         0            0
(    4)  PATH-CENTERLINE-OFFGRID_diff_dg                     0            0
(    5)  PATH-CENTERLINE-OFFGRID_diff_dyi                    0            0
(    6)  PATH-CENTERLINE-OFFGRID_pimp                        0            0
(    7)  PATH-CENTERLINE-OFFGRID_nimp                        0            0
(    8)  PATH-CENTERLINE-OFFGRID_sab                         0            0
(    9)  PATH-CENTERLINE-OFFGRID_nwell                       0            0
(   10)  PATH-CENTERLINE-OFFGRID_dnwelldg                    0            0
(   11)  PATH-CENTERLINE-OFFGRID_dnwellmvdg                  0            0
(   12)  PATH-CENTERLINE-OFFGRID_pwblk                       0            0
(   13)  PATH-CENTERLINE-OFFGRID_mv                          0            0
(   14)  PATH-CENTERLINE-OFFGRID_lvt                         0            0
(   15)  PATH-CENTERLINE-OFFGRID_gxh                         0            0
(   16)  PATH-CENTERLINE-OFFGRID_pbd                         0            0
(   17)  PATH-CENTERLINE-OFFGRID_nbd                         0            0
(   18)  PATH-CENTERLINE-OFFGRID_depl                        0            0
(   19)  PATH-CENTERLINE-OFFGRID_sci                         0            0
(   20)  PATH-CENTERLINE-OFFGRID_pdd                         0            0
(   21)  PATH-CENTERLINE-OFFGRID_isopw                       0            0
(   22)  PATH-CENTERLINE-OFFGRID_hvdepl                      0            0
(   23)  PATH-CENTERLINE-OFFGRID_dnc                         0            0
(   24)  PATH-CENTERLINE-OFFGRID_dpc                         0            0
(   25)  PATH-CENTERLINE-OFFGRID_hnw                         0            0
(   26)  PATH-CENTERLINE-OFFGRID_ndf                         0            0
(   27)  PATH-CENTERLINE-OFFGRID_pdf                         0            0
(   28)  PATH-CENTERLINE-OFFGRID_cont                        0            0
(   29)  PATH-CENTERLINE-OFFGRID_polydg                      0            0
(   30)  PATH-CENTERLINE-OFFGRID_poly_dyi                    0            0
(   31)  PATH-CENTERLINE-OFFGRID_met1dg                      0            0
(   32)  PATH-CENTERLINE-OFFGRID_met1s                       0            0
(   33)  PATH-CENTERLINE-OFFGRID_met1_dyi                    0            0
(   34)  PATH-CENTERLINE-OFFGRID_via1                        0            0
(   35)  PATH-CENTERLINE-OFFGRID_optivia1                    0            0
(   36)  PATH-CENTERLINE-OFFGRID_met2dg                      0            0
(   37)  PATH-CENTERLINE-OFFGRID_met2s                       0            0
(   38)  PATH-CENTERLINE-OFFGRID_met2_dyi                    0            0
(   39)  PATH-CENTERLINE-OFFGRID_via2                        0            0
(   40)  PATH-CENTERLINE-OFFGRID_optivia2                    0            0
(   41)  PATH-CENTERLINE-OFFGRID_met3dg                      0            0
(   42)  PATH-CENTERLINE-OFFGRID_met3s                       0            0
(   43)  PATH-CENTERLINE-OFFGRID_met3_dyi                    0            0
(   44)  PATH-CENTERLINE-OFFGRID_via3                        0            0
(   45)  PATH-CENTERLINE-OFFGRID_optivia3                    0            0
(   46)  PATH-CENTERLINE-OFFGRID_met4dg                      0            0
(   47)  PATH-CENTERLINE-OFFGRID_met4s                       0            0
(   48)  PATH-CENTERLINE-OFFGRID_met4_dyi                    0            0
(   49)  PATH-CENTERLINE-OFFGRID_vtpl                        0            0
(   50)  PATH-CENTERLINE-OFFGRID_mtpldg                      0            0
(   51)  PATH-CENTERLINE-OFFGRID_mtpl_dyi                    0            0
(   52)  PATH-CENTERLINE-OFFGRID_vtp                         0            0
(   53)  PATH-CENTERLINE-OFFGRID_optivtp                     0            0
(   54)  PATH-CENTERLINE-OFFGRID_mtpdg                       0            0
(   55)  PATH-CENTERLINE-OFFGRID_mtps                        0            0
(   56)  PATH-CENTERLINE-OFFGRID_mtp_dyi                     0            0
(   57)  PATH-CENTERLINE-OFFGRID_cm                          0            0
(   58)  PATH-CENTERLINE-OFFGRID_cm2                         0            0
(   59)  PATH-CENTERLINE-OFFGRID_cm3                         0            0
(   60)  PATH-CENTERLINE-OFFGRID_cmh                         0            0
(   61)  PATH-CENTERLINE-OFFGRID_cmh2                        0            0
(   62)  PATH-CENTERLINE-OFFGRID_cmh3                        0            0
(   63)  PATH-CENTERLINE-OFFGRID_cm23f                       0            0
(   64)  PATH-CENTERLINE-OFFGRID_cmh23f                      0            0
(   65)  PATH-CENTERLINE-OFFGRID_cm34f                       0            0
(   66)  PATH-CENTERLINE-OFFGRID_cmh34f                      0            0
(   67)  PATH-CENTERLINE-OFFGRID_dio_mark                    0            0
(   68)  PATH-CENTERLINE-OFFGRID_cap_mark                    0            0
(   69)  PATH-CENTERLINE-OFFGRID_nwres                       0            0
(   70)  PATH-CENTERLINE-OFFGRID_dnwmvres                    0            0
(   71)  PATH-CENTERLINE-OFFGRID_hres                        0            0
(   72)  PATH-CENTERLINE-OFFGRID_mres                        0            0
(   73)  PATH-CENTERLINE-OFFGRID_lndev                       0            0
(   74)  PATH-CENTERLINE-OFFGRID_uln                         0            0
(   75)  PATH-CENTERLINE-OFFGRID_svt                         0            0
(   76)  PATH-CENTERLINE-OFFGRID_respoly                     0            0
(   77)  PATH-CENTERLINE-OFFGRID_resmet1                     0            0
(   78)  PATH-CENTERLINE-OFFGRID_resmet2                     0            0
(   79)  PATH-CENTERLINE-OFFGRID_resmet3                     0            0
(   80)  PATH-CENTERLINE-OFFGRID_resmet4                     0            0
(   81)  PATH-CENTERLINE-OFFGRID_resmtpl                     0            0
(   82)  PATH-CENTERLINE-OFFGRID_resmtp                      0            0
(   83)  PATH-CENTERLINE-OFFGRID_ram                         0            0
(   84)  PATH-CENTERLINE-OFFGRID_rom                         0            0
(   85)  PATH-CENTERLINE-OFFGRID_nvram                       0            0
(   86)  PATH-CENTERLINE-OFFGRID_flash                       0            0
(   87)  PATH-CENTERLINE-OFFGRID_otp                         0            0
(   88)  PATH-CENTERLINE-OFFGRID_mtp_xfl                     0            0
(   89)  PATH-CENTERLINE-OFFGRID_xflay_all                   0            0
(   90)  PATH-CENTERLINE-OFFGRID_devmark                     0            0
(   91)  PATH-CENTERLINE-OFFGRID_phodef                      0            0
(   92)  PATH-CENTERLINE-OFFGRID_uvwin                       0            0
(   93)  PATH-CENTERLINE-OFFGRID_anodop                      0            0
(   94)  PATH-CENTERLINE-OFFGRID_catdop                      0            0
(   95)  PATH-CENTERLINE-OFFGRID_aml                         0            0
(   96)  PATH-CENTERLINE-OFFGRID_bnimp                       0            0
(   97)  PATH-CENTERLINE-OFFGRID_subcut                      0            0
(   98)  PATH-CENTERLINE-OFFGRID_blkp1                       0            0
(   99)  PATH-CENTERLINE-OFFGRID_blkm1                       0            0
(  100)  PATH-CENTERLINE-OFFGRID_blkm2                       0            0
(  101)  PATH-CENTERLINE-OFFGRID_blkm3                       0            0
(  102)  PATH-CENTERLINE-OFFGRID_blkm4                       0            0
(  103)  PATH-CENTERLINE-OFFGRID_blkmt                       0            0
(  104)  PATH-CENTERLINE-OFFGRID_blkml                       0            0
(  105)  PATH-CENTERLINE-OFFGRID_blkall                      0            0
(  106)  PATH-CENTERLINE-OFFGRID_lockdg                      0            0
(  107)  PATH-CENTERLINE-OFFGRID_lock1dg                     0            0
(  108)  PATH-CENTERLINE-OFFGRID_lock2dg                     0            0
(  109)  PATH-CENTERLINE-OFFGRID_lockbnCDBA                  0            0
(  110)  PATH-CENTERLINE-OFFGRID_lock1bnCDBA                 0            0
(  111)  PATH-CENTERLINE-OFFGRID_lock2bnCDBA                 0            0
(  112)  PATH-CENTERLINE-OFFGRID_lock3bnCDBA                 0            0
(  113)  PATH-CENTERLINE-OFFGRID_lock4bnCDBA                 0            0
(  114)  PATH-CENTERLINE-OFFGRID_met1_bndCDBA                0            0
(  115)  PATH-CENTERLINE-OFFGRID_met2_bndCDBA                0            0
(  116)  PATH-CENTERLINE-OFFGRID_met3_bndCDBA                0            0
(  117)  PATH-CENTERLINE-OFFGRID_nopim                       0            0
(  118)  PATH-CENTERLINE-OFFGRID_diffnblk                    0            0
(  119)  PATH-CENTERLINE-OFFGRID_polynblk                    0            0
(  120)  POLYGON-OFFGRID_pad                                 0            0
(  121)  POLYGON-OFFGRID_diff_dg                             0            0
(  122)  POLYGON-OFFGRID_diff_dyi                            0            0
(  123)  POLYGON-OFFGRID_pimp                                0            0
(  124)  POLYGON-OFFGRID_nimp                                0            0
(  125)  POLYGON-OFFGRID_sab                                 0            0
(  126)  POLYGON-OFFGRID_nwell                               0            0
(  127)  POLYGON-OFFGRID_dnwelldg                            0            0
(  128)  POLYGON-OFFGRID_dnwellmvdg                          0            0
(  129)  POLYGON-OFFGRID_pwblk                               0            0
(  130)  POLYGON-OFFGRID_mv                                  0            0
(  131)  POLYGON-OFFGRID_lvt                                 0            0
(  132)  POLYGON-OFFGRID_gxh                                 0            0
(  133)  POLYGON-OFFGRID_pbd                                 0            0
(  134)  POLYGON-OFFGRID_nbd                                 0            0
(  135)  POLYGON-OFFGRID_depl                                0            0
(  136)  POLYGON-OFFGRID_sci                                 0            0
(  137)  POLYGON-OFFGRID_pdd                                 0            0
(  138)  POLYGON-OFFGRID_isopw                               0            0
(  139)  POLYGON-OFFGRID_hvdepl                              0            0
(  140)  POLYGON-OFFGRID_dnc                                 0            0
(  141)  POLYGON-OFFGRID_dpc                                 0            0
(  142)  POLYGON-OFFGRID_hnw                                 0            0
(  143)  POLYGON-OFFGRID_ndf                                 0            0
(  144)  POLYGON-OFFGRID_pdf                                 0            0
(  145)  POLYGON-OFFGRID_cont                                0            0
(  146)  POLYGON-OFFGRID_polydg                              0            0
(  147)  POLYGON-OFFGRID_poly_dyi                            0            0
(  148)  POLYGON-OFFGRID_met1dg                              0            0
(  149)  POLYGON-OFFGRID_met1s                               0            0
(  150)  POLYGON-OFFGRID_met1_dyi                            0            0
(  151)  POLYGON-OFFGRID_via1                                0            0
(  152)  POLYGON-OFFGRID_optivia1                            0            0
(  153)  POLYGON-OFFGRID_met2dg                              0            0
(  154)  POLYGON-OFFGRID_met2s                               0            0
(  155)  POLYGON-OFFGRID_met2_dyi                            0            0
(  156)  POLYGON-OFFGRID_via2                                0            0
(  157)  POLYGON-OFFGRID_optivia2                            0            0
(  158)  POLYGON-OFFGRID_met3dg                              0            0
(  159)  POLYGON-OFFGRID_met3s                               0            0
(  160)  POLYGON-OFFGRID_met3_dyi                            0            0
(  161)  POLYGON-OFFGRID_via3                                0            0
(  162)  POLYGON-OFFGRID_optivia3                            0            0
(  163)  POLYGON-OFFGRID_met4dg                              0            0
(  164)  POLYGON-OFFGRID_met4s                               0            0
(  165)  POLYGON-OFFGRID_met4_dyi                            0            0
(  166)  POLYGON-OFFGRID_vtpl                                0            0
(  167)  POLYGON-OFFGRID_mtpldg                              0            0
(  168)  POLYGON-OFFGRID_mtpl_dyi                            0            0
(  169)  POLYGON-OFFGRID_vtp                                 0            0
(  170)  POLYGON-OFFGRID_optivtp                             0            0
(  171)  POLYGON-OFFGRID_mtpdg                               0            0
(  172)  POLYGON-OFFGRID_mtps                                0            0
(  173)  POLYGON-OFFGRID_mtp_dyi                             0            0
(  174)  POLYGON-OFFGRID_cm                                  0            0
(  175)  POLYGON-OFFGRID_cm2                                 0            0
(  176)  POLYGON-OFFGRID_cm3                                 0            0
(  177)  POLYGON-OFFGRID_cmh                                 0            0
(  178)  POLYGON-OFFGRID_cmh2                                0            0
(  179)  POLYGON-OFFGRID_cmh3                                0            0
(  180)  POLYGON-OFFGRID_cm23f                               0            0
(  181)  POLYGON-OFFGRID_cmh23f                              0            0
(  182)  POLYGON-OFFGRID_cm34f                               0            0
(  183)  POLYGON-OFFGRID_cmh34f                              0            0
(  184)  POLYGON-OFFGRID_dio_mark                            0            0
(  185)  POLYGON-OFFGRID_cap_mark                            0            0
(  186)  POLYGON-OFFGRID_nwres                               0            0
(  187)  POLYGON-OFFGRID_dnwmvres                            0            0
(  188)  POLYGON-OFFGRID_hres                                0            0
(  189)  POLYGON-OFFGRID_mres                                0            0
(  190)  POLYGON-OFFGRID_lndev                               0            0
(  191)  POLYGON-OFFGRID_uln                                 0            0
(  192)  POLYGON-OFFGRID_svt                                 0            0
(  193)  POLYGON-OFFGRID_respoly                             0            0
(  194)  POLYGON-OFFGRID_resmet1                             0            0
(  195)  POLYGON-OFFGRID_resmet2                             0            0
(  196)  POLYGON-OFFGRID_resmet3                             0            0
(  197)  POLYGON-OFFGRID_resmet4                             0            0
(  198)  POLYGON-OFFGRID_resmtpl                             0            0
(  199)  POLYGON-OFFGRID_resmtp                              0            0
(  200)  POLYGON-OFFGRID_ram                                 0            0
(  201)  POLYGON-OFFGRID_rom                                 0            0
(  202)  POLYGON-OFFGRID_nvram                               0            0
(  203)  POLYGON-OFFGRID_flash                               0            0
(  204)  POLYGON-OFFGRID_otp                                 0            0
(  205)  POLYGON-OFFGRID_mtp_xfl                             0            0
(  206)  POLYGON-OFFGRID_xflay_all                           0            0
(  207)  POLYGON-OFFGRID_devmark                             0            0
(  208)  POLYGON-OFFGRID_phodef                              0            0
(  209)  POLYGON-OFFGRID_uvwin                               0            0
(  210)  POLYGON-OFFGRID_anodop                              0            0
(  211)  POLYGON-OFFGRID_catdop                              0            0
(  212)  POLYGON-OFFGRID_aml                                 0            0
(  213)  POLYGON-OFFGRID_bnimp                               0            0
(  214)  POLYGON-OFFGRID_subcut                              0            0
(  215)  POLYGON-OFFGRID_blkp1                               0            0
(  216)  POLYGON-OFFGRID_blkm1                               0            0
(  217)  POLYGON-OFFGRID_blkm2                               0            0
(  218)  POLYGON-OFFGRID_blkm3                               0            0
(  219)  POLYGON-OFFGRID_blkm4                               0            0
(  220)  POLYGON-OFFGRID_blkmt                               0            0
(  221)  POLYGON-OFFGRID_blkml                               0            0
(  222)  POLYGON-OFFGRID_blkall                              0            0
(  223)  POLYGON-OFFGRID_lockdg                              0            0
(  224)  POLYGON-OFFGRID_lock1dg                             0            0
(  225)  POLYGON-OFFGRID_lock2dg                             0            0
(  226)  POLYGON-OFFGRID_lockbnCDBA                          0            0
(  227)  POLYGON-OFFGRID_lock1bnCDBA                         0            0
(  228)  POLYGON-OFFGRID_lock2bnCDBA                         0            0
(  229)  POLYGON-OFFGRID_lock3bnCDBA                         0            0
(  230)  POLYGON-OFFGRID_lock4bnCDBA                         0            0
(  231)  POLYGON-OFFGRID_met1_bndCDBA                        0            0
(  232)  POLYGON-OFFGRID_met2_bndCDBA                        0            0
(  233)  POLYGON-OFFGRID_met3_bndCDBA                        0            0
(  234)  POLYGON-OFFGRID_nopim                               0            0
(  235)  POLYGON-OFFGRID_diffnblk                            0            0
(  236)  POLYGON-OFFGRID_polynblk                            0            0
(  237)  PATH-VERTICS-OFFGRID_pad                            0            0
(  238)  PATH-VERTICS-OFFGRID_diff_dg                        0            0
(  239)  PATH-VERTICS-OFFGRID_diff_dyi                       0            0
(  240)  PATH-VERTICS-OFFGRID_pimp                           0            0
(  241)  PATH-VERTICS-OFFGRID_nimp                           0            0
(  242)  PATH-VERTICS-OFFGRID_sab                            0            0
(  243)  PATH-VERTICS-OFFGRID_nwell                          0            0
(  244)  PATH-VERTICS-OFFGRID_dnwelldg                       0            0
(  245)  PATH-VERTICS-OFFGRID_dnwellmvdg                     0            0
(  246)  PATH-VERTICS-OFFGRID_pwblk                          0            0
(  247)  PATH-VERTICS-OFFGRID_mv                             0            0
(  248)  PATH-VERTICS-OFFGRID_lvt                            0            0
(  249)  PATH-VERTICS-OFFGRID_gxh                            0            0
(  250)  PATH-VERTICS-OFFGRID_pbd                            0            0
(  251)  PATH-VERTICS-OFFGRID_nbd                            0            0
(  252)  PATH-VERTICS-OFFGRID_depl                           0            0
(  253)  PATH-VERTICS-OFFGRID_sci                            0            0
(  254)  PATH-VERTICS-OFFGRID_pdd                            0            0
(  255)  PATH-VERTICS-OFFGRID_isopw                          0            0
(  256)  PATH-VERTICS-OFFGRID_hvdepl                         0            0
(  257)  PATH-VERTICS-OFFGRID_dnc                            0            0
(  258)  PATH-VERTICS-OFFGRID_dpc                            0            0
(  259)  PATH-VERTICS-OFFGRID_hnw                            0            0
(  260)  PATH-VERTICS-OFFGRID_ndf                            0            0
(  261)  PATH-VERTICS-OFFGRID_pdf                            0            0
(  262)  PATH-VERTICS-OFFGRID_cont                           0            0
(  263)  PATH-VERTICS-OFFGRID_polydg                         0            0
(  264)  PATH-VERTICS-OFFGRID_poly_dyi                       0            0
(  265)  PATH-VERTICS-OFFGRID_met1dg                         0            0
(  266)  PATH-VERTICS-OFFGRID_met1s                          0            0
(  267)  PATH-VERTICS-OFFGRID_met1_dyi                       0            0
(  268)  PATH-VERTICS-OFFGRID_via1                           0            0
(  269)  PATH-VERTICS-OFFGRID_optivia1                       0            0
(  270)  PATH-VERTICS-OFFGRID_met2dg                         0            0
(  271)  PATH-VERTICS-OFFGRID_met2s                          0            0
(  272)  PATH-VERTICS-OFFGRID_met2_dyi                       0            0
(  273)  PATH-VERTICS-OFFGRID_via2                           0            0
(  274)  PATH-VERTICS-OFFGRID_optivia2                       0            0
(  275)  PATH-VERTICS-OFFGRID_met3dg                         0            0
(  276)  PATH-VERTICS-OFFGRID_met3s                          0            0
(  277)  PATH-VERTICS-OFFGRID_met3_dyi                       0            0
(  278)  PATH-VERTICS-OFFGRID_via3                           0            0
(  279)  PATH-VERTICS-OFFGRID_optivia3                       0            0
(  280)  PATH-VERTICS-OFFGRID_met4dg                         0            0
(  281)  PATH-VERTICS-OFFGRID_met4s                          0            0
(  282)  PATH-VERTICS-OFFGRID_met4_dyi                       0            0
(  283)  PATH-VERTICS-OFFGRID_vtpl                           0            0
(  284)  PATH-VERTICS-OFFGRID_mtpldg                         0            0
(  285)  PATH-VERTICS-OFFGRID_mtpl_dyi                       0            0
(  286)  PATH-VERTICS-OFFGRID_vtp                            0            0
(  287)  PATH-VERTICS-OFFGRID_optivtp                        0            0
(  288)  PATH-VERTICS-OFFGRID_mtpdg                          0            0
(  289)  PATH-VERTICS-OFFGRID_mtps                           0            0
(  290)  PATH-VERTICS-OFFGRID_mtp_dyi                        0            0
(  291)  PATH-VERTICS-OFFGRID_cm                             0            0
(  292)  PATH-VERTICS-OFFGRID_cm2                            0            0
(  293)  PATH-VERTICS-OFFGRID_cm3                            0            0
(  294)  PATH-VERTICS-OFFGRID_cmh                            0            0
(  295)  PATH-VERTICS-OFFGRID_cmh2                           0            0
(  296)  PATH-VERTICS-OFFGRID_cmh3                           0            0
(  297)  PATH-VERTICS-OFFGRID_cm23f                          0            0
(  298)  PATH-VERTICS-OFFGRID_cmh23f                         0            0
(  299)  PATH-VERTICS-OFFGRID_cm34f                          0            0
(  300)  PATH-VERTICS-OFFGRID_cmh34f                         0            0
(  301)  PATH-VERTICS-OFFGRID_dio_mark                       0            0
(  302)  PATH-VERTICS-OFFGRID_cap_mark                       0            0
(  303)  PATH-VERTICS-OFFGRID_nwres                          0            0
(  304)  PATH-VERTICS-OFFGRID_dnwmvres                       0            0
(  305)  PATH-VERTICS-OFFGRID_hres                           0            0
(  306)  PATH-VERTICS-OFFGRID_mres                           0            0
(  307)  PATH-VERTICS-OFFGRID_lndev                          0            0
(  308)  PATH-VERTICS-OFFGRID_uln                            0            0
(  309)  PATH-VERTICS-OFFGRID_svt                            0            0
(  310)  PATH-VERTICS-OFFGRID_respoly                        0            0
(  311)  PATH-VERTICS-OFFGRID_resmet1                        0            0
(  312)  PATH-VERTICS-OFFGRID_resmet2                        0            0
(  313)  PATH-VERTICS-OFFGRID_resmet3                        0            0
(  314)  PATH-VERTICS-OFFGRID_resmet4                        0            0
(  315)  PATH-VERTICS-OFFGRID_resmtpl                        0            0
(  316)  PATH-VERTICS-OFFGRID_resmtp                         0            0
(  317)  PATH-VERTICS-OFFGRID_ram                            0            0
(  318)  PATH-VERTICS-OFFGRID_rom                            0            0
(  319)  PATH-VERTICS-OFFGRID_nvram                          0            0
(  320)  PATH-VERTICS-OFFGRID_flash                          0            0
(  321)  PATH-VERTICS-OFFGRID_otp                            0            0
(  322)  PATH-VERTICS-OFFGRID_mtp_xfl                        0            0
(  323)  PATH-VERTICS-OFFGRID_xflay_all                      0            0
(  324)  PATH-VERTICS-OFFGRID_devmark                        0            0
(  325)  PATH-VERTICS-OFFGRID_phodef                         0            0
(  326)  PATH-VERTICS-OFFGRID_uvwin                          0            0
(  327)  PATH-VERTICS-OFFGRID_anodop                         0            0
(  328)  PATH-VERTICS-OFFGRID_catdop                         0            0
(  329)  PATH-VERTICS-OFFGRID_aml                            0            0
(  330)  PATH-VERTICS-OFFGRID_bnimp                          0            0
(  331)  PATH-VERTICS-OFFGRID_subcut                         0            0
(  332)  PATH-VERTICS-OFFGRID_blkp1                          0            0
(  333)  PATH-VERTICS-OFFGRID_blkm1                          0            0
(  334)  PATH-VERTICS-OFFGRID_blkm2                          0            0
(  335)  PATH-VERTICS-OFFGRID_blkm3                          0            0
(  336)  PATH-VERTICS-OFFGRID_blkm4                          0            0
(  337)  PATH-VERTICS-OFFGRID_blkmt                          0            0
(  338)  PATH-VERTICS-OFFGRID_blkml                          0            0
(  339)  PATH-VERTICS-OFFGRID_blkall                         0            0
(  340)  PATH-VERTICS-OFFGRID_lockdg                         0            0
(  341)  PATH-VERTICS-OFFGRID_lock1dg                        0            0
(  342)  PATH-VERTICS-OFFGRID_lock2dg                        0            0
(  343)  PATH-VERTICS-OFFGRID_lockbnCDBA                     0            0
(  344)  PATH-VERTICS-OFFGRID_lock1bnCDBA                    0            0
(  345)  PATH-VERTICS-OFFGRID_lock2bnCDBA                    0            0
(  346)  PATH-VERTICS-OFFGRID_lock3bnCDBA                    0            0
(  347)  PATH-VERTICS-OFFGRID_lock4bnCDBA                    0            0
(  348)  PATH-VERTICS-OFFGRID_met1_bndCDBA                   0            0
(  349)  PATH-VERTICS-OFFGRID_met2_bndCDBA                   0            0
(  350)  PATH-VERTICS-OFFGRID_met3_bndCDBA                   0            0
(  351)  PATH-VERTICS-OFFGRID_nopim                          0            0
(  352)  PATH-VERTICS-OFFGRID_diffnblk                       0            0
(  353)  PATH-VERTICS-OFFGRID_polynblk                       0            0
(  354)  PATH-HALF-WIDTH-OFFGRID_pad                         0            0
(  355)  PATH-HALF-WIDTH-OFFGRID_diff_dg                     0            0
(  356)  PATH-HALF-WIDTH-OFFGRID_diff_dyi                    0            0
(  357)  PATH-HALF-WIDTH-OFFGRID_pimp                        0            0
(  358)  PATH-HALF-WIDTH-OFFGRID_nimp                        0            0
(  359)  PATH-HALF-WIDTH-OFFGRID_sab                         0            0
(  360)  PATH-HALF-WIDTH-OFFGRID_nwell                       0            0
(  361)  PATH-HALF-WIDTH-OFFGRID_dnwelldg                    0            0
(  362)  PATH-HALF-WIDTH-OFFGRID_dnwellmvdg                  0            0
(  363)  PATH-HALF-WIDTH-OFFGRID_pwblk                       0            0
(  364)  PATH-HALF-WIDTH-OFFGRID_mv                          0            0
(  365)  PATH-HALF-WIDTH-OFFGRID_lvt                         0            0
(  366)  PATH-HALF-WIDTH-OFFGRID_gxh                         0            0
(  367)  PATH-HALF-WIDTH-OFFGRID_pbd                         0            0
(  368)  PATH-HALF-WIDTH-OFFGRID_nbd                         0            0
(  369)  PATH-HALF-WIDTH-OFFGRID_depl                        0            0
(  370)  PATH-HALF-WIDTH-OFFGRID_sci                         0            0
(  371)  PATH-HALF-WIDTH-OFFGRID_pdd                         0            0
(  372)  PATH-HALF-WIDTH-OFFGRID_isopw                       0            0
(  373)  PATH-HALF-WIDTH-OFFGRID_hvdepl                      0            0
(  374)  PATH-HALF-WIDTH-OFFGRID_dnc                         0            0
(  375)  PATH-HALF-WIDTH-OFFGRID_dpc                         0            0
(  376)  PATH-HALF-WIDTH-OFFGRID_hnw                         0            0
(  377)  PATH-HALF-WIDTH-OFFGRID_ndf                         0            0
(  378)  PATH-HALF-WIDTH-OFFGRID_pdf                         0            0
(  379)  PATH-HALF-WIDTH-OFFGRID_cont                        0            0
(  380)  PATH-HALF-WIDTH-OFFGRID_polydg                      0            0
(  381)  PATH-HALF-WIDTH-OFFGRID_poly_dyi                    0            0
(  382)  PATH-HALF-WIDTH-OFFGRID_met1dg                      0            0
(  383)  PATH-HALF-WIDTH-OFFGRID_met1s                       0            0
(  384)  PATH-HALF-WIDTH-OFFGRID_met1_dyi                    0            0
(  385)  PATH-HALF-WIDTH-OFFGRID_via1                        0            0
(  386)  PATH-HALF-WIDTH-OFFGRID_optivia1                    0            0
(  387)  PATH-HALF-WIDTH-OFFGRID_met2dg                      0            0
(  388)  PATH-HALF-WIDTH-OFFGRID_met2s                       0            0
(  389)  PATH-HALF-WIDTH-OFFGRID_met2_dyi                    0            0
(  390)  PATH-HALF-WIDTH-OFFGRID_via2                        0            0
(  391)  PATH-HALF-WIDTH-OFFGRID_optivia2                    0            0
(  392)  PATH-HALF-WIDTH-OFFGRID_met3dg                      0            0
(  393)  PATH-HALF-WIDTH-OFFGRID_met3s                       0            0
(  394)  PATH-HALF-WIDTH-OFFGRID_met3_dyi                    0            0
(  395)  PATH-HALF-WIDTH-OFFGRID_via3                        0            0
(  396)  PATH-HALF-WIDTH-OFFGRID_optivia3                    0            0
(  397)  PATH-HALF-WIDTH-OFFGRID_met4dg                      0            0
(  398)  PATH-HALF-WIDTH-OFFGRID_met4s                       0            0
(  399)  PATH-HALF-WIDTH-OFFGRID_met4_dyi                    0            0
(  400)  PATH-HALF-WIDTH-OFFGRID_vtpl                        0            0
(  401)  PATH-HALF-WIDTH-OFFGRID_mtpldg                      0            0
(  402)  PATH-HALF-WIDTH-OFFGRID_mtpl_dyi                    0            0
(  403)  PATH-HALF-WIDTH-OFFGRID_vtp                         0            0
(  404)  PATH-HALF-WIDTH-OFFGRID_optivtp                     0            0
(  405)  PATH-HALF-WIDTH-OFFGRID_mtpdg                       0            0
(  406)  PATH-HALF-WIDTH-OFFGRID_mtps                        0            0
(  407)  PATH-HALF-WIDTH-OFFGRID_mtp_dyi                     0            0
(  408)  PATH-HALF-WIDTH-OFFGRID_cm                          0            0
(  409)  PATH-HALF-WIDTH-OFFGRID_cm2                         0            0
(  410)  PATH-HALF-WIDTH-OFFGRID_cm3                         0            0
(  411)  PATH-HALF-WIDTH-OFFGRID_cmh                         0            0
(  412)  PATH-HALF-WIDTH-OFFGRID_cmh2                        0            0
(  413)  PATH-HALF-WIDTH-OFFGRID_cmh3                        0            0
(  414)  PATH-HALF-WIDTH-OFFGRID_cm23f                       0            0
(  415)  PATH-HALF-WIDTH-OFFGRID_cmh23f                      0            0
(  416)  PATH-HALF-WIDTH-OFFGRID_cm34f                       0            0
(  417)  PATH-HALF-WIDTH-OFFGRID_cmh34f                      0            0
(  418)  PATH-HALF-WIDTH-OFFGRID_dio_mark                    0            0
(  419)  PATH-HALF-WIDTH-OFFGRID_cap_mark                    0            0
(  420)  PATH-HALF-WIDTH-OFFGRID_nwres                       0            0
(  421)  PATH-HALF-WIDTH-OFFGRID_dnwmvres                    0            0
(  422)  PATH-HALF-WIDTH-OFFGRID_hres                        0            0
(  423)  PATH-HALF-WIDTH-OFFGRID_mres                        0            0
(  424)  PATH-HALF-WIDTH-OFFGRID_lndev                       0            0
(  425)  PATH-HALF-WIDTH-OFFGRID_uln                         0            0
(  426)  PATH-HALF-WIDTH-OFFGRID_svt                         0            0
(  427)  PATH-HALF-WIDTH-OFFGRID_respoly                     0            0
(  428)  PATH-HALF-WIDTH-OFFGRID_resmet1                     0            0
(  429)  PATH-HALF-WIDTH-OFFGRID_resmet2                     0            0
(  430)  PATH-HALF-WIDTH-OFFGRID_resmet3                     0            0
(  431)  PATH-HALF-WIDTH-OFFGRID_resmet4                     0            0
(  432)  PATH-HALF-WIDTH-OFFGRID_resmtpl                     0            0
(  433)  PATH-HALF-WIDTH-OFFGRID_resmtp                      0            0
(  434)  PATH-HALF-WIDTH-OFFGRID_ram                         0            0
(  435)  PATH-HALF-WIDTH-OFFGRID_rom                         0            0
(  436)  PATH-HALF-WIDTH-OFFGRID_nvram                       0            0
(  437)  PATH-HALF-WIDTH-OFFGRID_flash                       0            0
(  438)  PATH-HALF-WIDTH-OFFGRID_otp                         0            0
(  439)  PATH-HALF-WIDTH-OFFGRID_mtp_xfl                     0            0
(  440)  PATH-HALF-WIDTH-OFFGRID_xflay_all                   0            0
(  441)  PATH-HALF-WIDTH-OFFGRID_devmark                     0            0
(  442)  PATH-HALF-WIDTH-OFFGRID_phodef                      0            0
(  443)  PATH-HALF-WIDTH-OFFGRID_uvwin                       0            0
(  444)  PATH-HALF-WIDTH-OFFGRID_anodop                      0            0
(  445)  PATH-HALF-WIDTH-OFFGRID_catdop                      0            0
(  446)  PATH-HALF-WIDTH-OFFGRID_aml                         0            0
(  447)  PATH-HALF-WIDTH-OFFGRID_bnimp                       0            0
(  448)  PATH-HALF-WIDTH-OFFGRID_subcut                      0            0
(  449)  PATH-HALF-WIDTH-OFFGRID_blkp1                       0            0
(  450)  PATH-HALF-WIDTH-OFFGRID_blkm1                       0            0
(  451)  PATH-HALF-WIDTH-OFFGRID_blkm2                       0            0
(  452)  PATH-HALF-WIDTH-OFFGRID_blkm3                       0            0
(  453)  PATH-HALF-WIDTH-OFFGRID_blkm4                       0            0
(  454)  PATH-HALF-WIDTH-OFFGRID_blkmt                       0            0
(  455)  PATH-HALF-WIDTH-OFFGRID_blkml                       0            0
(  456)  PATH-HALF-WIDTH-OFFGRID_blkall                      0            0
(  457)  PATH-HALF-WIDTH-OFFGRID_lockdg                      0            0
(  458)  PATH-HALF-WIDTH-OFFGRID_lock1dg                     0            0
(  459)  PATH-HALF-WIDTH-OFFGRID_lock2dg                     0            0
(  460)  PATH-HALF-WIDTH-OFFGRID_lockbnCDBA                  0            0
(  461)  PATH-HALF-WIDTH-OFFGRID_lock1bnCDBA                 0            0
(  462)  PATH-HALF-WIDTH-OFFGRID_lock2bnCDBA                 0            0
(  463)  PATH-HALF-WIDTH-OFFGRID_lock3bnCDBA                 0            0
(  464)  PATH-HALF-WIDTH-OFFGRID_lock4bnCDBA                 0            0
(  465)  PATH-HALF-WIDTH-OFFGRID_met1_bndCDBA                0            0
(  466)  PATH-HALF-WIDTH-OFFGRID_met2_bndCDBA                0            0
(  467)  PATH-HALF-WIDTH-OFFGRID_met3_bndCDBA                0            0
(  468)  PATH-HALF-WIDTH-OFFGRID_nopim                       0            0
(  469)  PATH-HALF-WIDTH-OFFGRID_diffnblk                    0            0
(  470)  PATH-HALF-WIDTH-OFFGRID_polynblk                    0            0
(  471)  Q1SU : Check for the right usage of the             0            0
(  472)  NWELL_should_be_contacted                           0            0
(  473)  minority_NWELL_connectors                           0            0
(  474)  NWELL_soft_connect                                  0            0
(  475)  DNWELL_should_be_contacted                          0            0
(  476)  minority_DNWELL_connectors                          0            0
(  477)  DNWELL_soft_connect                                 0            0
(  478)  BULK_should_be_contacted                            0            0
(  479)  minority_BULK_connectors                            0            0
(  480)  BULK_soft_connect                                   0            0
(  481)  isolated_pwells__Q1IW__should_be_contact            0            0
(  482)  minority_isolated_pwells_connectors                 0            0
(  483)  isolated_pwells_soft_connect                        0            0
(  484)  HVNWELL_should_be_contacted                         0            0
(  485)  minority_HVNWELL_connectors                         0            0
(  486)  HVNWELL_soft_connect                                0            0
(  487)  PDF_should_be_contacted                             0            0
(  488)  minority_PDF_connectors                             0            0
(  489)  PDF_soft_connect                                    0            0
(  490)  NDF_should_be_contacted                             0            0
(  491)  minority_NDF_connectors                             0            0
(  492)  NDF_soft_connect                                    0            0
(  493)  HNW_should_be_contacted                             0            0
(  494)  minority_HNW_connectors                             0            0
(  495)  HNW_soft_connect                                    0            0
(  496)  B1SU : DIFF or *WELL crossing SUBCUT edg            0            0
(  497)  W1NW : Minimum NWELL width = 0.86                   0            0
(  498)  S1NW : Minimum NWELL spacing/notch = 0.6            0            0
(  499)  S2NW : Minimum NWELL spacing (different             0            0
(  500)  S2NW : Minimum NWELL spacing (different             0            0
(  501)  A1NW : Minimum NWELL area = 2.25                    0            0
(  502)  W1W1 : Minimum NWELL1 width = 0.86                  0            0
(  503)  W1W1 : Minimum NWELL1 width = 0.86                  0            0
(  504)  W1W2 : Minimum PWELL1 width = 0.6                   0            0
(  505)  W1W2 : Minimum PWELL1 width = 0.6                   0            0
(  506)  W1W3 : Minimum NWELL2 width = 0.86                  0            0
(  507)  W1W4 : Minimum PWELL2 width = 0.6                   0            0
(  508)  W1W5 : Minimum NWELL3 width = 0.86                  0            0
(  509)  W1W6 : Minimum PWELL3 width = 0.6                   0            0
(  510)  W1W7 : Minimum NWELL4 width = 0.86                  0            0
(  511)  W1W9 : Minimum NWELL5 width = 0.86                  0            0
(  512)  W1W9 : Minimum NWELL5 width = 0.86                  0            0
(  513)  W1W10 : Minimum PWELL5 width = 0.6                  0            0
(  514)  W1W10 : Minimum PWELL5 width = 0.6                  0            0
(  515)  A1W1 : Minimum NWELL1 area = 2.25                   0            0
(  516)  A1W2 : Minimum PWELL1 area = 2.25                   0            0
(  517)  A1W3 : Minimum NWELL2 area = 2.25                   0            0
(  518)  A1W4 : Minimum PWELL2 area = 2.25                   0            0
(  519)  A1W5 : Minimum NWELL3 area = 2.25                   0            0
(  520)  A1W6 : Minimum PWELL3 area = 2.25                   0            0
(  521)  A1W7 : Minimum NWELL4 area = 2.25                   0            0
(  522)  A1W9 : Minimum NWELL5 area = 2.25                   0            0
(  523)  A1W10 : Minimum PWELL5 area = 2.25                  0            0
(  524)  W1PB : Minimum PWBLK width = 0.6                    0            0
(  525)  S1PB : Minimum PWBLK spacing/notch = 0.8            0            0
(  526)  S1PBDN : Minimum PWBLK spacing to NDIFF             0            0
(  527)  S1PBNW : Minimum PWBLK spacing to NWELL             0            0
(  528)  S1PBWM : Minimum PWBLK spacing to DNWELL            0            0
(  529)  B4PB : DIFF crossing PWBLK edge is not a            0            0
(  530)  B3PB : PWBLK overlap of PDIFF is not all            0            0
(  531)  B5PB : PWBLK overlap of NDIFF without MV            0            0
(  532)  B6PB : Only a single rectangular NDIFF i            0            0
(  533)  B6PB : Only a single rectangular NDIFF i            0            0
(  534)  E1PBDN : Fixed PWBLK enclosure of NDIFF             0            0
(  535)  E1PBDN : Fixed PWBLK enclosure of NDIFF             0            0
(  536)  B1WD : DNWELL must be surrounded by a GU            0            0
(  537)  B1WD : DNWELL must be surrounded by a GU            0            0
(  538)  B3WD : NWELL crossing DNWELL edge is not            0            0
(  539)  W1WD : Minimum DNWELL width = 6.44                  0            0
(  540)  S1WD : Minimum DNWELL spacing/notch = 10            0            0
(  541)  E1WDWM : Minimum DNWELL enclosure of DNW            0            0
(  542)  S1WDNW : Minimum DNWELL spacing to NWELL            0            0
(  543)  S1WDHN : Minimum DNWELL spacing to HVNWE            0            0
(  544)  E1WDNW : Minimum DNWELL enclosure of NWE            0            0
(  545)  E1WDHN : Minimum DNWELL enclosure of HVN            0            0
(  546)  E2WDHN : Minimum DNWELL enclosure of HVN            0            0
(  547)  E1PBWD : Fixed PWBLK enclosure of DNWELL            0            0
(  548)  E1PBWD : Minimum PWBLK enclosure of DNWE            0            0
(  549)  S1WDHP : Minimum DNWELL spacing to HVPWE            0            0
(  550)  S1WDHP : Minimum DNWELL spacing to HVPWE            0            0
(  551)  S1WDDN : Minimum DNWELL spacing to NDIFF            0            0
(  552)  S1WDDN : Minimum DNWELL spacing to NDIFF            0            0
(  553)  S1WDDP : Fixed DNWELL spacing to PDIFF =            0            0
(  554)  S1WDDP : Minimum DNWELL spacing to PDIFF            0            0
(  555)  S1WDDP : Fixed DNWELL spacing to PDIFF =            0            0
(  556)  E1WDDP : Minimum DNWELL enclosure of PDI            0            0
(  557)  E1WDDP : Minimum DNWELL enclosure of PDI            0            0
(  558)  E1WDDN : Fixed DNWELL enclosure of NDIFF            0            0
(  559)  E1WDDN : Minimum DNWELL enclosure of NDI            0            0
(  560)  E1WDDN : Fixed DNWELL enclosure of NDIFF            0            0
(  561)  E1WDDN : Fixed DNWELL enclosure of NDIFF            0            0
(  562)  S1P1WD : Minimum POLY1 spacing to DNWELL            0            0
(  563)  S1P1WD : Minimum POLY1 spacing to DNWELL            0            0
(  564)  E1WDP1 : Minimum DNWELL enclosure of POL            0            0
(  565)  B1WM : DNWELLMV crossing DNWELL edge is             0            0
(  566)  W1WM : Minimum DNWELLMV width = 1.6                 0            0
(  567)  S1WMHP : Minimum DNWELLMV spacing to HVP            0            0
(  568)  B6WM : HVPWELL crossing DNWELLMV edge is            0            0
(  569)  B7WM : HVNWELL crossing DNWELLMV edge is            0            0
(  570)  E1WMHP : Minimum DNWELLMV enclosure of H            0            0
(  571)  B2WM : NWELL crossing DNWELLMV edge is n            0            0
(  572)  B8WM : POLY1 crossing DNWELLMV edge is n            0            0
(  573)  S1WMWD : Minimum DNWELLMV spacing to DNW            0            0
(  574)  S1WMP1 : Minimum DNWELLMV spacing to POL            0            0
(  575)  S1WM : Minimum DNWELLMV spacing/notch =             0            0
(  576)  S2WM : Minimum DNWELLMV spacing (differe            0            0
(  577)  S2WM : Minimum DNWELLMV spacing (differe            0            0
(  578)  S2WM : Minimum DNWELLMV spacing (differe            0            0
(  579)  S1WMNW : Minimum DNWELLMV spacing to NWE            0            0
(  580)  E1WMP1 : Minimum DNWELLMV enclosure of P            0            0
(  581)  S1WMHN : Minimum DNWELLMV spacing to HVN            0            0
(  582)  E1WMHN : Minimum DNWELLMV enclosure of H            0            0
(  583)  S1WMDP : Minimum DNWELLMV spacing to PDI            0            0
(  584)  E1WMDP : Minimum DNWELLMV enclosure of P            0            0
(  585)  S1WMDN : Minimum DNWELLMV spacing to NDI            0            0
(  586)  E1WMDN : Minimum DNWELLMV enclosure of N            0            0
(  587)  A1WM : Minimum DNWELLMV area = 4.0                  0            0
(  588)  W1PI : Minimum ISOPW width = 0.6                    0            0
(  589)  S1PI : Minimum ISOPW spacing/notch = 0.6            0            0
(  590)  B1PI : ISOPW outside DNWELLMV/DNWELL is             0            0
(  591)  S2IW : Minimum ISOPW spacing (different             0            0
(  592)  B1IW : ISOWELL overlap of NWELL, HVNWELL            0            0
(  593)  B2IW : ISOWELL crossing DNWELLMV edge is            0            0
(  594)  S1IW : Minimum ISOWELL spacing/notch = 0            0            0
(  595)  S2IW : Minimum ISOWELL spacing (differen            0            0
(  596)  S1IWDN : Minimum ISOWELL spacing to NDIF            0            0
(  597)  E1IWDN : Minimum ISOWELL enclosure of ND            0            0
(  598)  S1IWDP : Minimum ISOWELL spacing to PDIF            0            0
(  599)  E1IWDP : Minimum ISOWELL enclosure of PD            0            0
(  600)  S1IWPT : Minimum ISOWELL spacing to PDD             0            0
(  601)  S1IWHP : Minimum ISOWELL spacing to HVPW            0            0
(  602)  S1IWHN : Minimum ISOWELL spacing to HVNW            0            0
(  603)  S2IWHN : Minimum ISOWELL spacing to HVNW            0            0
(  604)  E1WMIW : Minimum DNWELLMV enclosure of I            0            0
(  605)  S2IWDN : Minimum ISOWELL spacing to NDIF            0            0
(  606)  E2IWDN : Minimum ISOWELL enclosure of ND            0            0
(  607)  S2IWDP : Minimum ISOWELL spacing to PDIF            0            0
(  608)  E2IWDP : Fixed ISOWELL enclosure of PDIF            0            0
(  609)  E2IWDP : Fixed ISOWELL enclosure of PDIF            0            0
(  610)  W1DF : Minimum DIFF width = 0.22                    0            0
(  611)  W2DF : Minimum length of coincident NDIF            0            0
(  612)  S1DF : Minimum DIFF spacing/notch = 0.28            0            0
(  613)  E1NWDP : Minimum NWELL enclosure of PDIF            0            0
(  614)  S1DNNW : Minimum NDIFF spacing to NWELL             0            0
(  615)  E1NWDN : Minimum NWELL enclosure of NDIF            0            0
(  616)  S1DPNW : Minimum PDIFF spacing to NWELL             0            0
(  617)  S2DF : Minimum NDIFF in NWELL spacing to            0            0
(  618)  A1DF : Minimum DIFF area = 0.202                    0            0
(  619)  B1DF : DIFF without NIMP or PIMP is not             0            0
(  620)  B2DF : DIFF crossing NTYPE_WELL or PTYPE            0            0
(  621)  B3DF : DIFF crossing NWELL edge is not a            0            0
(  622)  S3DF : Minimum PDIFF spacing = 0.56                 0            0
(  623)  W1MV : Minimum MV width = 0.6                       0            0
(  624)  S1MV : Minimum MV spacing/notch = 0.45              0            0
(  625)  E1MVDF : Minimum MV enclosure of DIFF =             0            0
(  626)  S1MVDF : Minimum MV spacing to DIFF = 0.            0            0
(  627)  E1MVGA : Minimum MV enclosure of GATE =             0            0
(  628)  S1MVGA : Minimum MV spacing to GATE = 0.            0            0
(  629)  B1MV : DIFF crossing MV edge is not allo            0            0
(  630)  B2MV : NW_VERIFY crossing MV edge is not            0            0
(  631)  B3MV : MV overlap of HVPWELL, HVNWELL, P            0            0
(  632)  W1P1 : Minimum POLY1 width = 0.18                   0            0
(  633)  W2P1 : Minimum POLY1 width (for 45 degre            0            0
(  634)  S1P1 : Minimum POLY1 spacing/notch = 0.2            0            0
(  635)  S1P1DF : Minimum POLY1 spacing to DIFF =            0            0
(  636)  E1P1GA : Minimum POLY1 extension beyond             0            0
(  637)  E1DFGA : Minimum DIFF extension beyond G            0            0
(  638)  B1GA : 90 degree bent GATE is not allowe            0            0
(  639)  B2GA : Illegal GATE construct                       0            0
(  640)  B1P1 : (POLY1 and SBLK and not (HRES or             0            0
(  641)  A1P1 : Minimum POLY1 area = 0.118                   0            0
(  642)  A2P1 : Maximum (POLY1 and not SBLK) area            0            0
(  643)  W1SB : Minimum SBLK width = 0.43                    0            0
(  644)  S1SB : Minimum SBLK spacing/notch = 0.43            0            0
(  645)  S1SBDF : Minimum SBLK spacing to DIFF =             0            0
(  646)  E1SBDF : Minimum SBLK extension beyond D            0            0
(  647)  S1SBP1 : Minimum SBLK spacing to POLY1 =            0            0
(  648)  E1SBP1 : Minimum SBLK extension beyond P            0            0
(  649)  S1SBGA : Minimum SBLK spacing to GATE =             0            0
(  650)  O1SBGA : Minimum SBLK overlap of GATE =             0            0
(  651)  S1SBCT : Minimum SBLK spacing to CONT =             0            0
(  652)  E1DFSB : Minimum DIFF extension beyond S            0            0
(  653)  A1SB : Minimum SBLK area = 2.0                      0            0
(  654)  W1IN : Minimum NIMP width = 0.44                    0            0
(  655)  S1IN : Minimum NIMP spacing/notch = 0.44            0            0
(  656)  E1INDF : Minimum NIMP extension beyond D            0            0
(  657)  E1INDF : Minimum NIMP extension beyond D            0            0
(  658)  E2INDF : Minimum NIMP extension beyond D            0            0
(  659)  O1INDF : Minimum DIFF overlap of NIMP =             0            0
(  660)  E1DNP1 : Minimum NDIFF extension beyond             0            0
(  661)  S1INDP : Minimum NIMP spacing to PDIFF =            0            0
(  662)  S2INDP : Minimum NIMP spacing to PDIFF (            0            0
(  663)  S3INDP : Minimum NIMP spacing to PDIFF =            0            0
(  664)  E1INDN : Minimum NIMP extension beyond P            0            0
(  665)  A1IN : Minimum NIMP area = 0.3844                   0            0
(  666)  B1IPIN : PIMP overlap of NIMP is not all            0            0
(  667)  W1IP : Minimum PIMP width = 0.44                    0            0
(  668)  S1IP : Minimum PIMP spacing/notch = 0.44            0            0
(  669)  E1IPDF : Minimum PIMP extension beyond D            0            0
(  670)  E1IPDF : Minimum PIMP extension beyond D            0            0
(  671)  E2IPDF : Minimum PIMP extension beyond D            0            0
(  672)  O1IPDF : Minimum DIFF overlap of PIMP =             0            0
(  673)  E1DPP1 : Minimum PDIFF extension beyond             0            0
(  674)  S1IPDN : Minimum PIMP spacing to NDIFF (            0            0
(  675)  S2IPDN : Minimum PIMP spacing to NDIFF =            0            0
(  676)  S3IPDN : Minimum PIMP spacing to NDIFF =            0            0
(  677)  E1IPDP : Minimum PIMP extension beyond P            0            0
(  678)  A1IP : Minimum PIMP area = 0.3844                   0            0
(  679)  B1CT : CONT without NDIFF or PDIFF or PO            0            0
(  680)  B3CT : CONT stripes are only allowed to             0            0
(  681)  B1CTGA : CONT overlap of GATE is not all            0            0
(  682)  B1CTSB : CONT overlap of SBLK is not all            0            0
(  683)  W1CT : Fixed CONT size = 0.22                       0            0
(  684)  W2CT : Fixed CONT stripe size = 0.22                0            0
(  685)  S1CT : Minimum CONT spacing = 0.25                  0            0
(  686)  S2CT : Minimum CONT spacing = 0.28                  0            0
(  687)  S3CT : Minimum CONT stripe to CONT spaci            0            0
(  688)  S4CT : Minimum CONT stripe spacing/notch            0            0
(  689)  E1DFCT : Minimum DIFF enclosure of CONT             0            0
(  690)  S1CTP1 : Minimum CONT spacing to POLY1 =            0            0
(  691)  E1P1CT : Minimum POLY1 enclosure of CONT            0            0
(  692)  S1CTDF : Minimum CONT spacing to DIFF =             0            0
(  693)  E1CTIP : Minimum PIMP enclosure of DIFFC            0            0
(  694)  E1CTIN : Minimum NIMP enclosure of DIFFC            0            0
(  695)  B1CTM1 : CONT must be covered by MET1               0            0
(  696)  W1M1 : Minimum MET1 width = 0.23                    0            0
(  697)  S1M1 : Minimum MET1 spacing/notch = 0.23            0            0
(  698)  S2M1 : Minimum MET1 spacing to WIDE_MET1            0            0
(  699)  E1M1CT : Minimum MET1 enclosure of CONT             0            0
(  700)  E2M1CT : Minimum MET1 enclosure of CONT             0            0
(  701)  A1M1 : Minimum MET1 area = 0.202                    0            0
(  702)  E3M1CT : Minimum MET1 enclosure of CONT             0            0
(  703)  B1M1 : All MET1 tracks > 35um wide to be            0            0
(  704)  W2M1 : Minimum M1SLOT width = 0.6                   0            0
(  705)  W3M1 : Minimum M1SLOT length = 20.0                 0            0
(  706)  S3M1 : Minimum M1SLOT spacing/notch = 10            0            0
(  707)  E1M1M1 : Minimum MET1 enclosure of M1SLO            0            0
(  708)  E1M1M1 : M1SLOT without MET1 is not allo            0            0
(  709)  B1V1 : VIA1 must be covered by MET1 and             0            0
(  710)  B2V1 : VIA1 stripes are only allowed to             0            0
(  711)  W1V1 : Fixed VIA1 size = 0.26                       0            0
(  712)  W2V1 : Fixed VIA1 stripe size = 0.26                0            0
(  713)  S2V1 : Minimum VIA1 stripe to VIA1 spaci            0            0
(  714)  S1V1 : Minimum VIA1 spacing = 0.26                  0            0
(  715)  E1M1V1 : Minimum MET1 enclosure of VIA1             0            0
(  716)  E2M1V1 : Minimum MET1 enclosure of VIA1             0            0
(  717)  E1M2V1 : Minimum MET2 enclosure of VIA1             0            0
(  718)  E2M2V1 : Minimum MET2 enclosure of VIA1             0            0
(  719)  E4M1V1 : Minimum MET1 enclosure of VIA1             0            0
(  720)  E7M2V1 : Minimum MET2 enclosure of VIA1             0            0
(  721)  Q20V1 : Check for the right usage of OPT            0            0
(  722)  W1M2 : Minimum MET2 width = 0.28                    0            0
(  723)  S1M2 : Minimum MET2 spacing/notch = 0.28            0            0
(  724)  S2M2 : Minimum MET2 spacing to WIDE_MET2            0            0
(  725)  A1M2 : Minimum MET2 area = 0.202                    0            0
(  726)  B1M2 : All MET2 tracks > 35um wide to be            0            0
(  727)  W2M2 : Minimum M2SLOT width = 0.6                   0            0
(  728)  W3M2 : Minimum M2SLOT length = 20.0                 0            0
(  729)  S3M2 : Minimum M2SLOT spacing/notch = 10            0            0
(  730)  S1M2M1 : Minimum M2SLOT spacing to M1SLO            0            0
(  731)  E1M2M2 : Minimum MET2 enclosure of M2SLO            0            0
(  732)  E1M2M2 : M2SLOT without MET2 is not allo            0            0
(  733)  S1M2M1 : M2SLOT overlap of M1SLOT is not            0            0
(  734)  B1V2 : VIA2 must be covered by MET2 and             0            0
(  735)  B2V2 : VIA2 stripes are only allowed to             0            0
(  736)  W1V2 : Fixed VIA2 size = 0.26                       0            0
(  737)  W2V2 : Fixed VIA2 stripe size = 0.26                0            0
(  738)  S2V2 : Minimum VIA2 stripe to VIA2 spaci            0            0
(  739)  S1V2 : Minimum VIA2 spacing = 0.26                  0            0
(  740)  E1M2V2 : Minimum MET2 enclosure of VIA2             0            0
(  741)  E2M2V2 : Minimum MET2 enclosure of VIA2             0            0
(  742)  E1M3V2 : Minimum MET3 enclosure of VIA2             0            0
(  743)  E2M3V2 : Minimum MET3 enclosure of VIA2             0            0
(  744)  E8M2V2 : Minimum MET2 enclosure of VIA2             0            0
(  745)  E3M3V2 : Minimum MET3 enclosure of VIA2             0            0
(  746)  Q20V2 : Check for the right usage of OPT            0            0
(  747)  W1M3 : Minimum MET3 width = 0.28                    0            0
(  748)  S1M3 : Minimum MET3 spacing/notch = 0.28            0            0
(  749)  S2M3 : Minimum MET3 spacing to WIDE_MET3            0            0
(  750)  A1M3 : Minimum MET3 area = 0.202                    0            0
(  751)  B1M3 : All MET3 tracks > 35um wide to be            0            0
(  752)  W2M3 : Minimum M3SLOT width = 0.6                   0            0
(  753)  W3M3 : Minimum M3SLOT length = 20.0                 0            0
(  754)  S3M3 : Minimum M3SLOT spacing/notch = 10            0            0
(  755)  S1M3M2 : Minimum M3SLOT spacing to M2SLO            0            0
(  756)  E1M3M3 : Minimum MET3 enclosure of M3SLO            0            0
(  757)  E1M3M3 : M3SLOT without MET3 is not allo            0            0
(  758)  S1M3M2 : M3SLOT overlap of M2SLOT is not            0            0
(  759)  B1V3 : VIA3 must be covered by MET3 and             0            0
(  760)  B2V3 : VIA3 stripes are only allowed to             0            0
(  761)  W1V3 : Fixed VIA3 size = 0.26                       0            0
(  762)  W2V3 : Fixed VIA3 stripe size = 0.26                0            0
(  763)  S2V3 : Minimum VIA3 stripe to VIA3 spaci            0            0
(  764)  S1V3 : Minimum VIA3 spacing = 0.26                  0            0
(  765)  E1M3V3 : Minimum MET3 enclosure of VIA3             0            0
(  766)  E2M3V3 : Minimum MET3 enclosure of VIA3             0            0
(  767)  E1M4V3 : Minimum MET4 enclosure of VIA3             0            0
(  768)  E2M4V3 : Minimum MET4 enclosure of VIA3             0            0
(  769)  E8M3V3 : Minimum MET3 enclosure of VIA3             0            0
(  770)  E4M4V3 : Minimum MET4 enclosure of VIA3             0            0
(  771)  Q20V3 : Check for the right usage of OPT            0            0
(  772)  W1M4 : Minimum MET4 width = 0.28                    0            0
(  773)  S1M4 : Minimum MET4 spacing/notch = 0.28            0            0
(  774)  S2M4 : Minimum MET4 spacing to WIDE_MET4            0            0
(  775)  A1M4 : Minimum MET4 area = 0.202                    0            0
(  776)  B1M4 : All MET4 tracks > 35um wide to be            0            0
(  777)  W2M4 : Minimum M4SLOT width = 0.6                   0            0
(  778)  W3M4 : Minimum M4SLOT length = 20.0                 0            0
(  779)  S3M4 : Minimum M4SLOT spacing/notch = 10            0            0
(  780)  S1M4M3 : Minimum M4SLOT spacing to M3SLO            0            0
(  781)  E1M4M4 : Minimum MET4 enclosure of M4SLO            0            0
(  782)  E1M4M4 : M4SLOT without MET4 is not allo            0            0
(  783)  S1M4M3 : M4SLOT overlap of M3SLOT is not            0            0
(  784)  B1VT : VIATP must be covered by METTP               0            0
(  785)  B2VT : VIATP stripes are only allowed to            0            0
(  786)  W1VT : Fixed VIATP size = 0.36                      0            0
(  787)  W2VT : Fixed VIATP stripe size = 0.36               0            0
(  788)  S1VT : Minimum VIATP spacing = 0.35                 0            0
(  789)  E1MTVT : Minimum METTP enclosure of VIAT            0            0
(  790)  S9VT : Minimum VIATP stripe to VIATP spa            0            0
(  791)  E3MTVT : Minimum METTP enclosure of VIAT            0            0
(  792)  Q20VT : Check for the right usage of OPT            0            0
(  793)  B1VTM4 : VIATP must be covered by MET4              0            0
(  794)  E1M4VT : Minimum MET4 enclosure of VIATP            0            0
(  795)  E2M4VT : Minimum MET4 enclosure of VIATP            0            0
(  796)  E5M4VT : Minimum MET4 enclosure of VIATP            0            0
(  797)  W1MT : Minimum METTP width = 0.44                   0            0
(  798)  S1MT : Minimum METTP spacing/notch = 0.4            0            0
(  799)  S2MT : Minimum METTP spacing to WIDE_MET            0            0
(  800)  A1MT : Minimum METTP area = 0.562                   0            0
(  801)  B1MT : All METTP tracks > 35um wide to b            0            0
(  802)  W2MT : Minimum MTPSLOT width = 0.6                  0            0
(  803)  W3MT : Minimum MTPSLOT length = 20.0                0            0
(  804)  S3MT : Minimum MTPSLOT spacing/notch = 1            0            0
(  805)  E1MTMT : Minimum METTP enclosure of MTPS            0            0
(  806)  E1MTMT : MTPSLOT without METTP is not al            0            0
(  807)  S1MTM4 : Minimum MTPSLOT spacing to M4SL            0            0
(  808)  S1MTM4 : MTPSLOT overlap M4SLOT is not a            0            0
(  809)  B1VL : VIATPL must be covered by METTPL             0            0
(  810)  W1VL : Fixed VIATPL size = 0.5                      0            0
(  811)  S1VL : Minimum VIATPL spacing = 0.45                0            0
(  812)  B1VLMT : VIATPL must be covered by METTP            0            0
(  813)  E1MTVL : Minimum METTP enclosure of VIAT            0            0
(  814)  R1VLVT : Maximum local VIATPL density =             0            0
(  815)  E1MLVL : Minimum METTPL enclosure of VIA            0            0
(  816)  B1ML : METTPL tracks > 35.0 are not allo            0            0
(  817)  W1ML : Minimum METTPL width = 3.0                   0            0
(  818)  S1ML : Minimum METTPL spacing/notch = 2.            0            0
(  819)  A1ML : Minimum METTPL area = 10.0                   0            0
(  820)  A2ML : Minimum METTPL enclosed area = 18            0            0
(  821)  W1IB : Minimum NOPIM width = 60.0                   0            0
(  822)  S1IB : Minimum NOPIM spacing/notch = 20.            0            0
(  823)  S1IBPA : Minimum NOPIM spacing to PAD =             0            0
(  824)  B4PA : PAD without METTPL is not allowed            0            0
(  825)  E1MLPA : Minimum METTPL enclosure of PAD            0            0
(  826)  W1PA : Minimum PAD width = 15.0                     0            0
(  827)  S1PA : Minimum PAD spacing/notch = 7.0              0            0
(  828)  B2PA : PAD overlap of DIFF or POLY1 is n            0            0
(  829)  Q1PA : Minimum recommended bond PAD widt            0            0
(  830)  Q3PA : Minimum recommended PAD width = 6            0            0
(  831)  S1PADF : Minimum PAD spacing to DIFF = 5            0            0
(  832)  S1PAP1 : Minimum PAD spacing to POLY1 =             0            0
(  833)  S1PAM1 : Minimum PAD spacing to MET1 (di            0            0
(  834)  S1PAM2 : Minimum PAD spacing to MET2 (di            0            0
(  835)  E1M1PA : Minimum MET1 enclosure of PAD =            0            0
(  836)  E1M1PA : Minimum MET1 enclosure of PAD =            0            0
(  837)  E1M2PA : Minimum MET2 enclosure of PAD =            0            0
(  838)  E1M2PA : Minimum MET2 enclosure of PAD =            0            0
(  839)  S2V1 : Minimum VIA1 spacing = 0.45                  0            0
(  840)  S2V2 : Minimum VIA2 spacing = 0.45                  0            0
(  841)  S1V2V1 : Minimum VIA2 spacing to VIA1 =             0            0
(  842)  S1V2V1 : Minimum VIA2 spacing to VIA1 =             0            0
(  843)  E3M1V1 : Minimum MET1 and MET2 enclosure            0            0
(  844)  E3M1V1 : Minimum MET1 and MET2 enclosure            0            0
(  845)  S1PAM3 : Minimum PAD spacing to MET3 (di            0            0
(  846)  E1M3PA : Minimum MET3 enclosure of PAD =            0            0
(  847)  E1M3PA : Minimum MET3 enclosure of PAD =            0            0
(  848)  E3M2V2 : Minimum MET2 and MET3 enclosure            0            0
(  849)  E3M2V2 : Minimum MET2 and MET3 enclosure            0            0
(  850)  S1PAMT : Minimum PAD spacing to METTP (d            0            0
(  851)  E2MTVT : Minimum METTP enclosure of VIAT            0            0
(  852)  E1MTPA : Minimum METTP enclosure of PAD             0            0
(  853)  E1MTPA : Minimum METTP enclosure of PAD             0            0
(  854)  S1PAM4 : Minimum PAD spacing to MET4 (di            0            0
(  855)  E1M4PA : Minimum MET4 enclosure of PAD =            0            0
(  856)  E1M4PA : Minimum MET4 enclosure of PAD =            0            0
(  857)  S2V3 : Minimum VIA3 spacing = 0.45                  0            0
(  858)  S1V3V2 : Minimum VIA3 spacing to VIA2 =             0            0
(  859)  S1V3V2 : Minimum VIA3 spacing to VIA2 =             0            0
(  860)  E3M3V3 : Minimum MET3 and MET4 enclosure            0            0
(  861)  E3M3V3 : Minimum MET3 and MET4 enclosure            0            0
(  862)  S1PAML : Minimum PAD spacing to METTPL (            0            0
(  863)  E2MLVL : Minimum METTPL enclosure of VIA            0            0
(  864)  E2MTVL : Minimum METTP enclosure of VIAT            0            0
(  865)  S1VTV3 : Minimum VIATP spacing to VIA3 =            0            0
(  866)  S1VTV3 : Minimum VIATP spacing to VIA3 =            0            0
(  867)  E3M4VT : Minimum MET4 enclosure of VIATP            0            0
(  868)  R1V1PA : Minimum ratio of VIA1 (in pad)             0            0
(  869)  R1V2PA : Minimum ratio of VIA2 (in pad)             0            0
(  870)  R1VTPA : Minimum ratio of VIATP (in pad)            0            0
(  871)  R1V3PA : Minimum ratio of VIA3 (in pad)             0            0
(  872)  R1VLPA : Minimum ratio of VIATPL (in pad            0            0
(  873)  B15PA : Probe PAD with VIATPL is not all            0            0
(  874)  S1PAVL : Minimum PAD spacing to VIATPL =            0            0
(  875)  B1CM : CAPM without BM is not allowed               0            0
(  876)  B3CM : CAPM is not allowed when CAPM23F,            0            0
(  877)  W1CM : Minimum CAPM width = 2.0                     0            0
(  878)  W2CM : Maximum CAPM bounding box size =             0            0
(  879)  S1CM : Minimum CAPM spacing/notch = 1.5             0            0
(  880)  S1CMPA : Minimum CAPM spacing to PAD = 1            0            0
(  881)  S1CMVT : Minimum CAPM spacing to VIATP =            0            0
(  882)  E1CMVT : Minimum CAPM enclosure of VIATP            0            0
(  883)  E1CMVT : Minimum CAPM enclosure of VIATP            0            0
(  884)  E1BMCM : Minimum BM enclosure of CAPM =             0            0
(  885)  E1BMVT : Minimum BM enclosure of VIATP =            0            0
(  886)  E1BMVN : Minimum BM enclosure of VIAn =             0            0
(  887)  S1CMVN : Minimum CAPM spacing to VIAn =             0            0
(  888)  B2CM : CAPM overlap of VIAn or PAD is no            0            0
(  889)  S3VT : Minimum VIATP spacing on CAPM = 2            0            0
(  890)  Q1VT : Recommended minimum ratio of VIAT            0            0
(  891)  B1CH : CAPMH without BM is not allowed              0            0
(  892)  B3CH : CAPMH is not allowed when CAPM, C            0            0
(  893)  W1CH : Minimum CAPMH width = 2.0                    0            0
(  894)  W2CH : Maximum CAPMH bounding box size =            0            0
(  895)  S1CH : Minimum CAPMH spacing/notch = 1.5            0            0
(  896)  S1CHPA : Minimum CAPMH spacing to PAD =             0            0
(  897)  S1CHVT : Minimum CAPMH spacing to VIATP             0            0
(  898)  E1CHVT : Minimum CAPMH enclosure of VIAT            0            0
(  899)  E1CHVT : Minimum CAPMH enclosure of VIAT            0            0
(  900)  E1BMCH : Minimum BM enclosure of CAPMH =            0            0
(  901)  E2BMVT : Minimum BM enclosure of VIATP =            0            0
(  902)  E2BMVN : Minimum BM enclosure of VIAn =             0            0
(  903)  S1CHVN : Minimum CAPMH spacing to VIAn =            0            0
(  904)  B2CH : CAPMH overlap of VIAn or PAD is n            0            0
(  905)  S4VT : Minimum VIATP spacing on CAPMH =             0            0
(  906)  Q4VT : Recommended minimum ratio of VIAT            0            0
(  907)  B1DM : CAPM2 is not allowed when CAPM, C            0            0
(  908)  B2DM : CAPM2 must be enclosed by MET2 an            0            0
(  909)  B3DM : CAPM2 must not be over VIA1 or PA            0            0
(  910)  B4DM : CAPM2 without VIA2 is not allowed            0            0
(  911)  Q1V2 : Recommended minimum ratio of VIA2            0            0
(  912)  W1DM : Minimum CAPM2 width = 2.0                    0            0
(  913)  W2DM : Maximum CAPM2 bounding box size =            0            0
(  914)  S1DM : Minimum CAPM2 spacing / notch = 1            0            0
(  915)  S1DMPA : Minimum CAPM2 spacing to PAD =             0            0
(  916)  S1DMV1 : Minimum CAPM2 spacing to VIA1 =            0            0
(  917)  S1DMV2 : Minimum CAPM2 spacing to VIA2 =            0            0
(  918)  E1DMV2 : Minimum CAPM2 enclosure of VIA2            0            0
(  919)  E1DMV2 : Minimum CAPM2 enclosure of VIA2            0            0
(  920)  E1M2DM : Minimum MET2 enclosure of CAPM2            0            0
(  921)  E1M3DM : Minimum MET3 enclosure of CAPM2            0            0
(  922)  E3M2V1 : Minimum MET2 enclosure of VIA1             0            0
(  923)  E4M2V2 : Minimum MET2 enclosure of VIA2             0            0
(  924)  E4M3V2 : Minimum MET3 enclosure of VIA2             0            0
(  925)  S3V2 : Minimum VIA2 spacing on CAPM2 = 2            0            0
(  926)  B7DM : CAPM2 without VIA3 is not allowed            0            0
(  927)  B8DM : MET2 and MET4 must be connected (            0            0
(  928)  Q1V3 : Recommended minimum ratio of VIA3            0            0
(  929)  S1DMV3 : Minimum CAPM2 spacing to VIA3 =            0            0
(  930)  E1DMV3 : Minimum CAPM2 enclosure of VIA3            0            0
(  931)  E1DMV3 : Minimum CAPM2 enclosure of VIA3            0            0
(  932)  E4M3V3 : Minimum MET3 enclosure of VIA3             0            0
(  933)  S3V3 : Minimum VIA3 spacing on CAPM2 = 2            0            0
(  934)  B1TM : CAPM3 is not allowed when CAPM, C            0            0
(  935)  B2TM : CAPM3 must be enclosed by MET2, M            0            0
(  936)  B3TM : CAPM3 must not be over VIA1 or PA            0            0
(  937)  B4TM : CAPM3 without VIA2 or VIA3 is not            0            0
(  938)  B5TM : MET2 and MET4 must be connected              0            0
(  939)  Q2V2 : Recommended minimum ratio of VIA2            0            0
(  940)  Q2V3 : Recommended minimum ratio of VIA3            0            0
(  941)  W1TM : Minimum CAPM3 width = 2.0                    0            0
(  942)  W2TM : Maximum CAPM3 bounding box size =            0            0
(  943)  S1TM : Minimum CAPM3 spacing / notch = 1            0            0
(  944)  S1TMPA : Minimum CAPM3 spacing to PAD =             0            0
(  945)  S1TMV1 : Minimum CAPM3 spacing to VIA1 =            0            0
(  946)  S1TMV2 : Minimum CAPM3 spacing to VIA2 =            0            0
(  947)  S1TMV3 : Minimum CAPM3 spacing to VIA3 =            0            0
(  948)  E1TMV2 : Minimum CAPM3 enclosure of VIA2            0            0
(  949)  E1TMV2 : Minimum CAPM3 enclosure of VIA2            0            0
(  950)  E1TMV3 : Minimum CAPM3 enclosure of VIA3            0            0
(  951)  E1TMV3 : Minimum CAPM3 enclosure of VIA3            0            0
(  952)  E1M2TM : Minimum MET2 enclosure of CAPM3            0            0
(  953)  E1M3TM : Minimum MET3 enclosure of CAPM3            0            0
(  954)  E1M4TM : Minimum MET4 enclosure of CAPM3            0            0
(  955)  E4M2V1 : Minimum MET2 enclosure of VIA1             0            0
(  956)  E5M2V2 : Minimum MET2 enclosure of VIA2             0            0
(  957)  E5M3V2 : Minimum MET3 enclosure of VIA2             0            0
(  958)  E5M3V3 : Minimum MET3 enclosure of VIA3             0            0
(  959)  E3M4V3 : Minimum MET4 enclosure of VIA3             0            0
(  960)  S4V2 : Minimum VIA2 spacing on CAPM3 = 2            0            0
(  961)  S4V3 : Minimum VIA3 spacing on CAPM3 = 2            0            0
(  962)  B6TM : CAPM3 without VIATP is not allowe            0            0
(  963)  B7TM : MET3 and METTP must be connected             0            0
(  964)  Q3VT : Recommended minimum ratio of VIAT            0            0
(  965)  S1TMVT : Minimum CAPM3 spacing to VIATP             0            0
(  966)  E1TMVT : Minimum CAPM3 enclosure of VIAT            0            0
(  967)  E1TMVT : Minimum CAPM3 enclosure of VIAT            0            0
(  968)  E4M4VT : Minimum MET4 enclosure of VIATP            0            0
(  969)  S6VT : Minimum VIATP spacing on CAPM3 =             0            0
(  970)  B1DH : CAPMH2 is not allowed when CAPM,             0            0
(  971)  B2DH : CAPMH2 must be enclosed by MET2 a            0            0
(  972)  B3DH : CAPMH2 must not be over VIA1 or P            0            0
(  973)  B4DH : CAPMH2 without VIA2 is not allowe            0            0
(  974)  Q5V2 : Recommended minimum ratio of VIA2            0            0
(  975)  W1DH : Minimum CAPMH2 width = 2.0                   0            0
(  976)  W2DH : Maximum CAPMH2 bounding box size             0            0
(  977)  S1DH : Minimum CAPMH2 spacing / notch =             0            0
(  978)  S1DHPA : Minimum CAPMH2 spacing to PAD =            0            0
(  979)  S1DHV1 : Minimum CAPMH2 spacing to VIA1             0            0
(  980)  S1DHV2 : Minimum CAPMH2 spacing to VIA2             0            0
(  981)  E1DHV2 : Minimum CAPMH2 enclosure of VIA            0            0
(  982)  E1DHV2 : Minimum CAPMH2 enclosure of VIA            0            0
(  983)  E1M2DH : Minimum MET2 enclosure of CAPMH            0            0
(  984)  E1M3DH : Minimum MET3 enclosure of CAPMH            0            0
(  985)  E3M2V1 : Minimum MET2 enclosure of VIA1             0            0
(  986)  E4M2V2 : Minimum MET2 enclosure of VIA2             0            0
(  987)  E4M3V2 : Minimum MET3 enclosure of VIA2             0            0
(  988)  S7V2 : Minimum VIA2 spacing on CAPMH2 =             0            0
(  989)  B7DH : CAPMH2 without VIA3 is not allowe            0            0
(  990)  B8DH : MET2 and MET4 must be connected (            0            0
(  991)  Q5V3 : Recommended minimum ratio of VIA3            0            0
(  992)  S1DHV3 : Minimum CAPMH2 spacing to VIA3             0            0
(  993)  E1DHV3 : Minimum CAPMH2 enclosure of VIA            0            0
(  994)  E1DHV3 : Minimum CAPMH2 enclosure of VIA            0            0
(  995)  E4M3V3 : Minimum MET3 enclosure of VIA3             0            0
(  996)  S7V3 : Minimum VIA3 spacing on CAPMH2 =             0            0
(  997)  B1TH : CAPMH3 is not allowed when CAPM,             0            0
(  998)  B2TH : CAPMH3 must be enclosed by MET2,             0            0
(  999)  B3TH : CAPMH3 must not be over VIA1 or P            0            0
( 1000)  B4TH : CAPMH3 without VIA2 or VIA3 is no            0            0
( 1001)  B5TH : MET2 and MET4 must be connected              0            0
( 1002)  Q6V2 : Recommended minimum ratio of VIA2            0            0
( 1003)  Q6V3 : Recommended minimum ratio of VIA3            0            0
( 1004)  W1TH : Minimum CAPMH3 width = 2.0                   0            0
( 1005)  W2TH : Maximum CAPMH3 bounding box size             0            0
( 1006)  S1TH : Minimum CAPMH3 spacing / notch =             0            0
( 1007)  S1THPA : Minimum CAPMH3 spacing to PAD =            0            0
( 1008)  S1THV1 : Minimum CAPMH3 spacing to VIA1             0            0
( 1009)  S1THV2 : Minimum CAPMH3 spacing to VIA2             0            0
( 1010)  S1THV3 : Minimum CAPMH3 spacing to VIA3             0            0
( 1011)  E1THV2 : Minimum CAPMH3 enclosure of VIA            0            0
( 1012)  E1THV2 : Minimum CAPMH3 enclosure of VIA            0            0
( 1013)  E1THV3 : Minimum CAPMH3 enclosure of VIA            0            0
( 1014)  E1THV3 : Minimum CAPMH3 enclosure of VIA            0            0
( 1015)  E1M2TH : Minimum MET2 enclosure of CAPMH            0            0
( 1016)  E1M3TH : Minimum MET3 enclosure of CAPMH            0            0
( 1017)  E1M4TH : Minimum MET4 enclosure of CAPMH            0            0
( 1018)  E4M2V1 : Minimum MET2 enclosure of VIA1             0            0
( 1019)  E5M2V2 : Minimum MET2 enclosure of VIA2             0            0
( 1020)  E5M3V2 : Minimum MET3 enclosure of VIA2             0            0
( 1021)  E5M3V3 : Minimum MET3 enclosure of VIA3             0            0
( 1022)  E3M4V3 : Minimum MET4 enclosure of VIA3             0            0
( 1023)  S8V2 : Minimum VIA2 spacing on CAPMH3 =             0            0
( 1024)  S8V3 : Minimum VIA3 spacing on CAPMH3 =             0            0
( 1025)  B6TH : CAPMH3 without VIATP is not allow            0            0
( 1026)  B7TH : MET3 and METTP must be connected             0            0
( 1027)  Q6VT : Recommended minimum ratio of VIAT            0            0
( 1028)  S1THVT : Minimum CAPMH3 spacing to VIATP            0            0
( 1029)  E1THVT : Minimum CAPMH3 enclosure of VIA            0            0
( 1030)  E1THVT : Minimum CAPMH3 enclosure of VIA            0            0
( 1031)  E4M4VT : Minimum MET4 enclosure of VIATP            0            0
( 1032)  S8VT : Minimum VIATP spacing on CAPMH3 =            0            0
( 1033)  B3C3 : CAPM23F is not allowed when CAPM,            0            0
( 1034)  B2C3 : CAPM23F overlap of VIA1 or PAD is            0            0
( 1035)  B1C3 : CAPM23F without MET2 is not allow            0            0
( 1036)  W1C3 : Minimum CAPM23F width = 2.0                  0            0
( 1037)  W2C3 : Maximum CAPM23F bounding box size            0            0
( 1038)  S1C3 : Minimum CAPM23F spacing/notch = 1            0            0
( 1039)  S1C3PA : Minimum CAPM23F spacing to PAD             0            0
( 1040)  S1C3V1 : Minimum CAPM23F spacing to VIA1            0            0
( 1041)  S1C3V2 : Minimum CAPM23F spacing to VIA2            0            0
( 1042)  E1C3V2 : Minimum CAPM23F enclosure of VI            0            0
( 1043)  E1C3V2 : Minimum CAPM23F enclosure of VI            0            0
( 1044)  E6M2V2 : Minimum MET2 enclosure of VIA2             0            0
( 1045)  S5V2 : Minimum VIA2 spacing on CAPM23F =            0            0
( 1046)  Q3V2 : Recommended minimum ratio of VIA2            0            0
( 1047)  E1M2C3 : Minimum MET2 enclosure of CAPM2            0            0
( 1048)  E5M2V1 : Minimum MET2 enclosure of VIA1             0            0
( 1049)  B3C4 : CAPM34F is not allowed when CAPM,            0            0
( 1050)  B2C4 : CAPM34F overlap of VIA2 or PAD is            0            0
( 1051)  B1C4 : CAPM34F without MET3 is not allow            0            0
( 1052)  W1C4 : Minimum CAPM34F width = 2.0                  0            0
( 1053)  W2C4 : Maximum CAPM34F bounding box size            0            0
( 1054)  S1C4 : Minimum CAPM34F spacing/notch = 1            0            0
( 1055)  S1C4PA : Minimum CAPM34F spacing to PAD             0            0
( 1056)  S1C4V2 : Minimum CAPM34F spacing to VIA2            0            0
( 1057)  S1C4V3 : Minimum CAPM34F spacing to VIA3            0            0
( 1058)  E1C4V3 : Minimum CAPM34F enclosure of VI            0            0
( 1059)  E1C4V3 : Minimum CAPM34F enclosure of VI            0            0
( 1060)  E6M3V3 : Minimum MET3 enclosure of VIA3             0            0
( 1061)  S5V3 : Minimum VIA3 spacing on CAPM34F =            0            0
( 1062)  Q3V3 : Recommended minimum ratio of VIA3            0            0
( 1063)  E1M3C4 : Minimum MET3 enclosure of CAPM3            0            0
( 1064)  E6M3V2 : Minimum MET3 enclosure of VIA2             0            0
( 1065)  B3H3 : CAPMH23F is not allowed when CAPM            0            0
( 1066)  B2H3 : CAPMH23F overlap of VIA1 or PAD i            0            0
( 1067)  B1H3 : CAPMH23F without MET2 is not allo            0            0
( 1068)  W1H3 : Minimum CAPMH23F width = 2.0                 0            0
( 1069)  W2H3 : Maximum CAPMH23F bounding box siz            0            0
( 1070)  S1H3 : Minimum CAPMH23F spacing/notch =             0            0
( 1071)  S1H3PA : Minimum CAPMH23F spacing to PAD            0            0
( 1072)  S1H3V1 : Minimum CAPMH23F spacing to VIA            0            0
( 1073)  S1H3V2 : Minimum CAPMH23F spacing to VIA            0            0
( 1074)  E1H3V2 : Minimum CAPMH23F enclosure of V            0            0
( 1075)  E1H3V2 : Minimum CAPMH23F enclosure of V            0            0
( 1076)  E7M2V2 : Minimum MET2 enclosure of VIA2             0            0
( 1077)  S6V2 : Minimum VIA2 spacing on CAPMH23F             0            0
( 1078)  Q4V2 : Recommended minimum ratio of VIA2            0            0
( 1079)  E1M2H3 : Minimum MET2 enclosure of CAPMH            0            0
( 1080)  E6M2V1 : Minimum MET2 enclosure of VIA1             0            0
( 1081)  B3H4 : CAPMH34F is not allowed when CAPM            0            0
( 1082)  B2H4 : CAPMH34F overlap of VIA2 or PAD i            0            0
( 1083)  B1H4 : CAPMH34F without MET3 is not allo            0            0
( 1084)  W1H4 : Minimum CAPMH34F width = 2.0                 0            0
( 1085)  W2H4 : Maximum CAPMH34F bounding box siz            0            0
( 1086)  S1H4 : Minimum CAPMH34F spacing/notch =             0            0
( 1087)  S1H4PA : Minimum CAPMH34F spacing to PAD            0            0
( 1088)  S1H4V2 : Minimum CAPMH34F spacing to VIA            0            0
( 1089)  S1H4V3 : Minimum CAPMH34F spacing to VIA            0            0
( 1090)  E1H4V3 : Minimum CAPMH34F enclosure of V            0            0
( 1091)  E1H4V3 : Minimum CAPMH34F enclosure of V            0            0
( 1092)  E7M3V3 : Minimum MET3 enclosure of VIA3             0            0
( 1093)  S6V3 : Minimum VIA3 spacing on CAPMH34F             0            0
( 1094)  Q4V3 : Recommended minimum ratio of VIA3            0            0
( 1095)  E1M3H4 : Minimum MET3 enclosure of CAPMH            0            0
( 1096)  E7M3V2 : Minimum MET3 enclosure of VIA2             0            0
( 1097)  B1LV : LVT overlap of PWBLK,MV,HVGOX,HVN            0            0
( 1098)  B2LV : LVT overlap of rnw, rdn, rdp, qpv            0            0
( 1099)  E1LVGA : Minimum LVT enclosure of GATE =            0            0
( 1100)  E2LVGA : Minimum LVT enclosure of GATE =            0            0
( 1101)  S1LVGA : Minimum LVT spacing to GATE = 0            0            0
( 1102)  S2LVGA : Minimum LVT spacing to GATE = 0            0            0
( 1103)  S1LVHN : Minimum LVT spacing to HVNWELL             0            0
( 1104)  S1LVHP : Minimum LVT spacing to HVPWELL             0            0
( 1105)  S1LVWM : Minimum LVT spacing to DNWELLMV            0            0
( 1106)  S1LVWD : Minimum LVT spacing to DNWELL =            0            0
( 1107)  S1LVHW : Minimum LVT spacing to HNW = 10            0            0
( 1108)  S1LVND : Minimum LVT spacing to NDF = 10            0            0
( 1109)  B1SV : SVT overlap of PWBLK,MV,HVGOX,HVN            0            0
( 1110)  B2SV : SVT overlap of rnw, rdn, rdp, qpv            0            0
( 1111)  E1SVGA : Minimum SVT enclosure of GATE =            0            0
( 1112)  E2SVGA : Minimum SVT enclosure of GATE =            0            0
( 1113)  S1SVGA : Minimum SVT spacing to GATE = 0            0            0
( 1114)  S2SVGA : Minimum SVT spacing to GATE = 0            0            0
( 1115)  S1SVHN : Minimum SVT spacing to HVNWELL             0            0
( 1116)  S1SVHP : Minimum SVT spacing to HVPWELL             0            0
( 1117)  S1SVWM : Minimum SVT spacing to DNWELLMV            0            0
( 1118)  S1SVWD : Minimum SVT spacing to DNWELL =            0            0
( 1119)  S1SVHW : Minimum SVT spacing to HNW = 10            0            0
( 1120)  S1SVND : Minimum SVT spacing to NDF = 10            0            0
( 1121)  B1LD : LNDEV overlap of HVGOX, HVNWELL,             0            0
( 1122)  B2LD : LNDEV overlap of rnw3, rdn3, rdp3            0            0
( 1123)  B3LD : LNDEV overlap of LVT or SVT is no            0            0
( 1124)  E1LDGA : Minimum LNDEV enclosure of GATE            0            0
( 1125)  E2LDGA : Minimum LNDEV enclosure of GATE            0            0
( 1126)  S1LDGA : Minimum LNDEV spacing to GATE =            0            0
( 1127)  S2LDGA : Minimum LNDEV spacing to GATE =            0            0
( 1128)  S1LDHN : Minimum LNDEV spacing to HVNWEL            0            0
( 1129)  S1LDHP : Minimum LNDEV spacing to HVPWEL            0            0
( 1130)  S1LDWM : Minimum LNDEV spacing to DNWELL            0            0
( 1131)  S1LDWD : Minimum LNDEV spacing to DNWELL            0            0
( 1132)  S1LDHW : Minimum LNDEV spacing to HNW =             0            0
( 1133)  S1LDND : Minimum LNDEV spacing to NDF =             0            0
( 1134)  B1UL : ULN overlap of PWBLK,HVGOX,HVNWEL            0            0
( 1135)  B2UL : ULN overlap of rpp1#, rnp1#, rpp1            0            0
( 1136)  B1ULSB : ULN overlap of SBLK is not allo            0            0
( 1137)  W1UL : Minimum ULN width = 0.44                     0            0
( 1138)  S1UL : Minimum ULN spacing/notch = 0.44             0            0
( 1139)  E1ULGA : Minimum ULN enclosure of GATE =            0            0
( 1140)  S1ULGA : Minimum ULN spacing to GATE = 0            0            0
( 1141)  S1ULSB : Minimum ULN spacing to SBLK = 0            0            0
( 1142)  A1UL : Minimum ULN area < 0.3844                    0            0
( 1143)  B1NU : BNIMP overlap of LVT, SVT, DEPL,             0            0
( 1144)  B2NU : BNIMP overlap of NTYPE_WELL is no            0            0
( 1145)  B3NU : BNIMP overlap of HVPWELL is not a            0            0
( 1146)  B4NU : (BNIMP and DIFF) without NIMP is             0            0
( 1147)  W1NU : Minimum BNIMP width = 0.6                    0            0
( 1148)  S1NU : Minimum BNIMP spacing/notch = 0.6            0            0
( 1149)  S1NUDF : Minimum BNIMP spacing to DIFF =            0            0
( 1150)  E1NUDN : Minimum BNIMP extension beyond             0            0
( 1151)  E1NUGA : Minimum BNIMP enclosure of GATE            0            0
( 1152)  S1NUGA : Minimum BNIMP spacing to GATE =            0            0
( 1153)  B5NU : BNIMP without PWBLK is not allowe            0            0
( 1154)  E2PBDN : Fixed PWBLK enclosure of NDIFF             0            0
( 1155)  W2NU : Minimum cpod# width = 2.0                    0            0
( 1156)  A1NU : Minimum BNIMP area < 0.3844                  0            0
( 1157)  B1GHMV : HVGOX overlap of MV is not allo            0            0
( 1158)  B1GH : DIFF crossing HVGOX edge is not a            0            0
( 1159)  W1GH : Minimum HVGOX width = 0.6                    0            0
( 1160)  S1GH : Minimum HVGOX spacing/notch = 1.0            0            0
( 1161)  E1GHDF : Minimum HVGOX enclosure of DIFF            0            0
( 1162)  S1GHDF : Minimum HVGOX spacing to DIFF =            0            0
( 1163)  W1HP : Minimum HVPWELL width = 0.9                  0            0
( 1164)  S1HP : Minimum HVPWELL spacing/notch = 0            0            0
( 1165)  S2HP : Minimum HVPWELL spacing (differen            0            0
( 1166)  S1HPDP : Minimum HVPWELL spacing to PDIF            0            0
( 1167)  E1HPDN : Minimum HVPWELL enclosure of ND            0            0
( 1168)  S1HPDN : Minimum HVPWELL spacing to NDIF            0            0
( 1169)  B1HP : HVPWELL must be contacted by PDIF            0            0
( 1170)  B2HP : DIFF crossing HVPWELL edge is not            0            0
( 1171)  B3HP : HVPWELL overlap of NWELL is not a            0            0
( 1172)  B4HP : HVPWELL crossing DNWELL edge is n            0            0
( 1173)  B5HP : HVPWELL overlap of DNWELL is not             0            0
( 1174)  S1HPNW : Minimum HVPWELL spacing to NWEL            0            0
( 1175)  S2HPDN : Fixed HVPWELL spacing to NDIFF             0            0
( 1176)  S2HPDN : Fixed HVPWELL spacing to NDIFF             0            0
( 1177)  S2HPNW : Minimum HVPWELL spacing to NWEL            0            0
( 1178)  E1HPDP : Minimum HVPWELL enclosure of PD            0            0
( 1179)  A1HP : Minimum HVPWELL area < 2.25                  0            0
( 1180)  B1HN : HVNWELL must be contacted by NDIF            0            0
( 1181)  B2HN : HVNWELL overlap of HVPWELL or PDD            0            0
( 1182)  B3HN : HVNWELL overlap of NWELL is not a            0            0
( 1183)  B4HN : DIFF crossing HVNWELL edge is not            0            0
( 1184)  B6HN : HVNWELL crossing DNWELL edge is n            0            0
( 1185)  B7HN : HVNWELL overlap of DNWELL is not             0            0
( 1186)  W1HN : Minimum HVNWELL width = 0.9                  0            0
( 1187)  S1HN : Minimum HVNWELL spacing/notch = 0            0            0
( 1188)  S1HNNW : Minimum HVNWELL spacing to NWEL            0            0
( 1189)  S1HNHP : Minimum HVNWELL spacing to HVPW            0            0
( 1190)  S1HNHP : Minimum HVNWELL spacing to HVPW            0            0
( 1191)  E1HNDP : Minimum HVNWELL enclosure of PD            0            0
( 1192)  E1HNDN : Minimum HVNWELL enclosure of ND            0            0
( 1193)  E1HNDN : Minimum HVNWELL enclosure of ND            0            0
( 1194)  S1HNDN : Minimum HVNWELL spacing to NDIF            0            0
( 1195)  B5HN : HVNWELL without PWBLK is not allo            0            0
( 1196)  S2HN : Minimum HVNWELL spacing (differen            0            0
( 1197)  S2HN : Minimum HVNWELL spacing (differen            0            0
( 1198)  E1PBHN : Fixed PWBLK enclosure of HVNWEL            0            0
( 1199)  E1PBHN : Fixed PWBLK enclosure of HVNWEL            0            0
( 1200)  E2HNDN : Minimum HVNWELL enclosure of ND            0            0
( 1201)  S2HNDN : Minimum HVNWELL spacing to NDIF            0            0
( 1202)  S2HNHP : Minimum HVNWELL spacing to HVPW            0            0
( 1203)  A1HN : Minimum HVNWELL area < 2.25                  0            0
( 1204)  B1DL : DEPL overlap of HVGOX, NWELL, HVN            0            0
( 1205)  B2DL : DEPL crossing DNWELLMV / DNWELL e            0            0
( 1206)  B3DL : DEPL NMOS transistor without MV i            0            0
( 1207)  W1DL : Minimum DEPL width = 1.0                     0            0
( 1208)  S1DL : Minimum DEPL spacing/notch = 0.6             0            0
( 1209)  O1DLPI : Fixed DEPL overlap of ISOPW (sa            0            0
( 1210)  E1DLGA : Minimum DEPL extension beyond G            0            0
( 1211)  E1DLGA : Minimum DEPL extension beyond G            0            0
( 1212)  S1DLGA : Minimum DEPL spacing to GATE =             0            0
( 1213)  S1DLHN : Minimum DEPL spacing to HVNWELL            0            0
( 1214)  A1DL : Minimum DEPL area < 2.25                     0            0
( 1215)  B1PT : PDD is only allowed for ned#, ped            0            0
( 1216)  W1PT : Minimum PDD width = 1.0                      0            0
( 1217)  S1PT : Minimum PDD spacing/notch = 0.86             0            0
( 1218)  S1PT : Minimum PDD spacing/notch = 0.86             0            0
( 1219)  A1PT : Minimum PDD area = 6.0                       0            0
( 1220)  A2PT : Minimum PDD enclosed area = 12.0             0            0
( 1221)  BDSC : Not allowed to be used by custome            0            0
( 1222)  B1HW : HNW without HVGOX and PWBLK is no            0            0
( 1223)  B1HW : HNW without HVGOX and PWBLK is no            0            0
( 1224)  B2HW : HNW must be surrounded by a GUARD            0            0
( 1225)  B3HW : HNW overlap of DNWELL, DNWELLMV,             0            0
( 1226)  B4HW : HVNWELL crossing HNW edge is not             0            0
( 1227)  B5HW : HNW overlap of rpp1#, rnp1#, rpp1            0            0
( 1228)  W1HW : Minimum HNW width = 8.0                      0            0
( 1229)  S1HW : Minimum HNW spacing/notch = 10.0             0            0
( 1230)  E1HWDN : Fixed HNW enclosure of NDIFF =             0            0
( 1231)  E1HWDN : Fixed HNW enclosure of NDIFF =             0            0
( 1232)  E1HWHN : Minimum HNW enclosure of HVNWEL            0            0
( 1233)  E1GHHW : Minimum HVGOX enclosure of HNW             0            0
( 1234)  E1PBHW : Fixed PWBLK enclosure of HNW =             0            0
( 1235)  E1PBHW : Fixed PWBLK enclosure of HNW =             0            0
( 1236)  S1HWHP : Minimum HNW spacing to HVPWELL             0            0
( 1237)  S1HWWD : Minimum HNW spacing to DNWELL =            0            0
( 1238)  S1HWWM : Minimum HNW spacing to DNWELLMV            0            0
( 1239)  S1HWHN : Minimum HNW spacing to HVNWELL             0            0
( 1240)  S1HWNW : Minimum HNW spacing to NWELL =             0            0
( 1241)  S1HWND : Minimum HNW spacing to NDF = 10            0            0
( 1242)  S1HWP1 : Minimum HNW spacing to POLY1 =             0            0
( 1243)  S1HWP1 : Minimum HNW spacing to POLY1 =             0            0
( 1244)  E1HWP1 : Minimum HNW enclosure of POLY1             0            0
( 1245)  E1HWDP : Minimum HNW enclosure of PDIFF             0            0
( 1246)  S1HWDN : Minimum HNW spacing to NDIFF =             0            0
( 1247)  S1HWDP : Fixed HNW spacing to PDIFF = 4.            0            0
( 1248)  S1HWDP : Fixed HNW spacing to PDIFF = 4.            0            0
( 1249)  A1ND : Minimum NDF area < 2.25                      0            0
( 1250)  B1ND : NDF without HVGOX and PWBLK is no            0            0
( 1251)  B1ND : NDF without HVGOX and PWBLK is no            0            0
( 1252)  B2ND : NDF overlap of DNWELL, DNWELLMV,             0            0
( 1253)  B3ND : NDF crossing HNW edge is not allo            0            0
( 1254)  B4ND : PDIFF overlap of NDF is not allow            0            0
( 1255)  B5ND : NDF overlap of HVNWELL is not all            0            0
( 1256)  B6ND : NDF without HVNWELL is not allowe            0            0
( 1257)  B7ND : NDF overlap of rpp1#, rnp1#, rpp1            0            0
( 1258)  B8ND : NWELL crossing NDF edge is not al            0            0
( 1259)  B9ND : NW_VERIFY overlap of NDF is not a            0            0
( 1260)  B12ND : NDIFF overlap of NDF is not allo            0            0
( 1261)  W1ND : Minimum NDF width = 0.8                      0            0
( 1262)  S1ND : Minimum NDF spacing/notch = 0.54             0            0
( 1263)  B10ND : NDF must be surrounded by a GUAR            0            0
( 1264)  B10ND : NDF must be surrounded by a GUAR            0            0
( 1265)  B10ND : NDF must be surrounded by a GUAR            0            0
( 1266)  B10ND : NDF must be surrounded by a GUAR            0            0
( 1267)  B11ND : POLY1 overlap of NDF is not allo            0            0
( 1268)  B13ND : NWELL overlap of NDF is not allo            0            0
( 1269)  W2ND : Minimum NDF width = 5.32                     0            0
( 1270)  S2ND : Minimum NDF spacing (different ne            0            0
( 1271)  E1NDDN : Fixed NDF enclosure of NDIFF =             0            0
( 1272)  E1NDDN : Fixed NDF enclosure of NDIFF =             0            0
( 1273)  S1NDDN : Minimum NDF spacing to NDIFF =             0            0
( 1274)  S2NDDN : Minimum NDF spacing to NDIFF =             0            0
( 1275)  S1NDWD : Minimum NDF spacing to DNWELL =            0            0
( 1276)  S1NDWM : Minimum NDF spacing to DNWELLMV            0            0
( 1277)  S1NDHN : Minimum NDF spacing to HVNWELL             0            0
( 1278)  S1NDHP : Minimum NDF spacing to HVPWELL             0            0
( 1279)  S1NDNW : Minimum NDF spacing to NWELL =             0            0
( 1280)  E1GHND : Minimum HVGOX enclosure of NDF             0            0
( 1281)  E1PBND : Fixed PWBLK enclosure of NDF =             0            0
( 1282)  E1PBND : Fixed PWBLK enclosure of NDF =             0            0
( 1283)  S1NDDP : Fixed NDF spacing to PDIFF = 4.            0            0
( 1284)  S1NDDP : Fixed NDF spacing to PDIFF = 4.            0            0
( 1285)  A1PD : Minimum PDF area < 2.25                      0            0
( 1286)  B1PD : PDF without HNW is not allowed               0            0
( 1287)  B2PD : NDIFF overlap of PDF is not allow            0            0
( 1288)  B3PD : PDF overlap of HVNWELL is not all            0            0
( 1289)  W1PD : Minimum PDF width = 5.0                      0            0
( 1290)  W1DP : Fixed PDIFF stripe width = 0.42              0            0
( 1291)  S1PD : Minimum PDF spacing/notch = 2.2              0            0
( 1292)  S2PD : Minimum PDF spacing (different ne            0            0
( 1293)  E1PDDP : Minimum PDF enclosure of PDIFF             0            0
( 1294)  E1HWPD : Minimum HNW enclosure of PDF =             0            0
( 1295)  S1PDHN : Minimum PDF spacing to HVNWELL             0            0
( 1296)  S1PDHN : Minimum PDF spacing to HVNWELL             0            0
( 1297)  S1PDDN : Minimum PDF spacing to NDIFF =             0            0
( 1298)  S1PDDP : Minimum PDF spacing to PDIFF =             0            0
( 1299)  B1HL : HVDEPL is only allowed for nhvd,             0            0
( 1300)  W1HL : Minimum HVDEPL width = 4.5                   0            0
( 1301)  S1HL : Minimum HVDEPL sacing / notch = 0            0            0
( 1302)  S1HLGA : Minimum HVDEPL spacing to GATE             0            0
( 1303)  W12GA : Minimum GATE length = 2.0                   0            0
( 1304)  W13GA : Minimum GATE width = 3.0                    0            0
( 1305)  W3ND : Minimum NDF width = 2.82                     0            0
( 1306)  S3NDHP : Fixed NDF spacing to HVPWELL (i            0            0
( 1307)  S6DF : Fixed SOURCE/DRAIN-EDGE-STI lengt            0            0
( 1308)  S6DF : Fixed SOURCE/DRAIN-EDGE-STI lengt            0            0
( 1309)  E2P1GA : Minimum POLY1 extension beyond             0            0
( 1310)  O1NDGA : Fixed NDF overlap of GATE = 0.4            0            0
( 1311)  S2P1DN : Minimum POLY1 spacing to SOURCE            0            0
( 1312)  E1NDNW : Minimum NDF enclosure of NWELL             0            0
( 1313)  S1NWGA : Minimum NWELL spacing to GATE =            0            0
( 1314)  E2NWDN : Minimum NWELL enclosure of NDIF            0            0
( 1315)  S5NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1316)  S5NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1317)  S5NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1318)  S5NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1319)  S3NDDP : Fixed NDF spacing to PDIFF = 2.            0            0
( 1320)  S3NDDP : Fixed NDF spacing to PDIFF = 2.            0            0
( 1321)  S3NDDP : Fixed NDF spacing to PDIFF = 2.            0            0
( 1322)  E2PBND : Fixed PWBLK enclosure of NDF =             0            0
( 1323)  E2PBND : Fixed PWBLK enclosure of NDF =             0            0
( 1324)  E2PBND : Fixed PWBLK enclosure of NDF =             0            0
( 1325)  W24GA : Minimum GATE length = 1.5                   0            0
( 1326)  W25GA : Minimum GATE width = 3.0                    0            0
( 1327)  W4ND : Minimum NDF width = 2.82                     0            0
( 1328)  S4NDHP : Fixed NDF spacing to HVPWELL (i            0            0
( 1329)  S9DF : Fixed DRAIN-EDGE-STI length = 1.0            0            0
( 1330)  S9DF : Fixed DRAIN-EDGE-STI length = 1.0            0            0
( 1331)  E2P1DN : Minimum POLY1 extension beyond             0            0
( 1332)  O3NDGA : Fixed NDF overlap of GATE = 0.4            0            0
( 1333)  S4P1DN : Minimum POLY1 spacing to DRAIN             0            0
( 1334)  E2NDNW : Minimum NDF enclosure of NWELL             0            0
( 1335)  S3NWGA : Minimum NWELL spacing to GATE =            0            0
( 1336)  E4NWDN : Minimum NWELL enclosure of NDIF            0            0
( 1337)  S6NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1338)  S6NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1339)  S6NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1340)  S6NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1341)  W30GA : Fixed GATE length = 3.2                     0            0
( 1342)  W31GA : Minimum GATE width = 3.0                    0            0
( 1343)  W5ND : Minimum NDF width = 2.82                     0            0
( 1344)  S13DF : Fixed SOURCE/DRAIN-EDGE-STI leng            0            0
( 1345)  S13DF : Fixed SOURCE/DRAIN-EDGE-STI leng            0            0
( 1346)  S8NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1347)  S9NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1348)  S9NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1349)  S9NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1350)  S9NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1351)  S2P1DN : Minimum POLY1 spacing to SOURCE            0            0
( 1352)  E7P1GA : Minimum POLY1 extension beyond             0            0
( 1353)  O4NDGA : Fixed NDF overlap of GATE = 0.9            0            0
( 1354)  S4NWGA : Minimum NWELL spacing to GATE =            0            0
( 1355)  E5NWDN : Minimum NWELL enclosure of NDIF            0            0
( 1356)  E4NDNW : Minimum NDF enclosure of NWELL             0            0
( 1357)  E3PBND : Fixed PWBLK enclosure of NDF =             0            0
( 1358)  E3PBND : Fixed PWBLK enclosure of NDF =             0            0
( 1359)  E3PBND : Fixed PWBLK enclosure of NDF =             0            0
( 1360)  S4NDDP : Fixed NDF spacing to PDIFF = 2.            0            0
( 1361)  S4NDDP : Fixed NDF spacing to PDIFF = 2.            0            0
( 1362)  S4NDDP : Fixed NDF spacing to PDIFF = 2.            0            0
( 1363)  W14GA : Minimum GATE length = 1.8                   0            0
( 1364)  W15GA : Minimum GATE width = 3.0                    0            0
( 1365)  W2PD : Minimum PDF width = 3.02                     0            0
( 1366)  S3PD : Minimum PDF spacing (in channel r            0            0
( 1367)  E2PDDP : Minimum PDF enclosure of PDIFF             0            0
( 1368)  S1PDND : Fixed PDF spacing to NDF (in ch            0            0
( 1369)  S11DF : Fixed SOURCE / DRAIN-EDGE-STI le            0            0
( 1370)  S11DF : Fixed SOURCE / DRAIN-EDGE-STI le            0            0
( 1371)  E6P1GA : Minimum POLY1 extension beyond             0            0
( 1372)  O1PDGA : Fixed PDF overlap of GATE = 0.5            0            0
( 1373)  S2P1DP : Minimum POLY1 spacing to SOURCE            0            0
( 1374)  W28GA : Minimum GATE length = 3.0                   0            0
( 1375)  W29GA : Minimum GATE width = 4.0                    0            0
( 1376)  S2NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1377)  S12DF : Fixed DRAIN-EDGE-STI length = 3.            0            0
( 1378)  S12DF : Fixed DRAIN-EDGE-STI length = 3.            0            0
( 1379)  E3P1DN : Minimum POLY1 extension beyond             0            0
( 1380)  S5P1DN : Minimum POLY1 spacing to DRAIN             0            0
( 1381)  E2M1DN : Fixed MET1 overlap of DRAIN NDI            0            0
( 1382)  W16GA : Minimum GATE length = 5.0                   0            0
( 1383)  W17GA : Minimum GATE width = 4.0                    0            0
( 1384)  S2NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1385)  S7DF : Fixed SOURCE / DRAIN-EDGE-STI len            0            0
( 1386)  S7DF : Fixed SOURCE / DRAIN-EDGE-STI len            0            0
( 1387)  E3P1GA : Minimum POLY1 extension beyond             0            0
( 1388)  S3P1DN : Minimum POLY1 spacing to SOURCE            0            0
( 1389)  E1M1DN : Fixed MET1 enclosure of SOURCE             0            0
( 1390)  E2HLGA : Fixed HVDEPL enclosure of GATE             0            0
( 1391)  E1HLGA : Fixed HVDEPL enclosure of GATE             0            0
( 1392)  S2NDDP : Fixed NDF spacing to PDIFF = 4.            0            0
( 1393)  S2NDDP : Fixed NDF spacing to PDIFF = 4.            0            0
( 1394)  S2NDDP : Fixed NDF spacing to PDIFF = 4.            0            0
( 1395)  O2NDGA : Fixed NDF overlap of GATE = 0.9            0            0
( 1396)  E3NDNW : Minimum NDF enclosure of NWELL             0            0
( 1397)  S2NWGA : Minimum NWELL spacing to GATE =            0            0
( 1398)  E3NWDN : Minimum NWELL enclosure of NDIF            0            0
( 1399)  E3NWDN : Minimum NWELL enclosure of NDIF            0            0
( 1400)  S7NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1401)  S7NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1402)  S7NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1403)  S7NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1404)  S7NDHP : Fixed NDF spacing to HVPWELL =             0            0
( 1405)  E4PBND : Fixed PWBLK enclosure of NDF =             0            0
( 1406)  E4PBND : Fixed PWBLK enclosure of NDF =             0            0
( 1407)  E4PBND : Fixed PWBLK enclosure of NDF =             0            0
( 1408)  B1P1GA : Only a rectangular POLY1 over G            0            0
( 1409)  E5P1GA : Fixed POLY1 extension beyond GA            0            0
( 1410)  E5P1GA : Fixed POLY1 extension beyond GA            0            0
( 1411)  W18GA : Minimum GATE length = 3.5                   0            0
( 1412)  W19GA : Minimum GATE width = 4.0                    0            0
( 1413)  S4PD : Minimum PDF spacing (in channel r            0            0
( 1414)  S8DF : Fixed SOURCE / DRAIN-EDGE-STI len            0            0
( 1415)  S8DF : Fixed SOURCE / DRAIN-EDGE-STI len            0            0
( 1416)  S3P1DP : Minimum POLY1 spacing to SOURCE            0            0
( 1417)  E4P1GA : Minimum POLY1 extension beyond             0            0
( 1418)  O2PDGA : Fixed PDF overlap of GATE = 0.5            0            0
( 1419)  S3PDND : Fixed PDF spacing to NDF (in ch            0            0
( 1420)  W32GA : Minimum GATE length = 2.0                   0            0
( 1421)  W33GA : Minimum GATE width = 4.0                    0            0
( 1422)  S14DF : Fixed DRAIN-EDGE-STI length = 2.            0            0
( 1423)  S14DF : Fixed DRAIN-EDGE-STI length = 2.            0            0
( 1424)  S5P1DP : Minimum POLY1 spacing to DRAIN             0            0
( 1425)  E3P1DP : Minimum POLY1 extension beyond             0            0
( 1426)  W20GA : Minimum GATE length = 1.0                   0            0
( 1427)  W21GA : Minimum GATE width = 2.5                    0            0
( 1428)  W22GA : Minimum GATE length = 1.0                   0            0
( 1429)  W23GA : Minimum GATE width = 2.5                    0            0
( 1430)  W26GA : Minimum GATE length = 1.3                   0            0
( 1431)  W27GA : Minimum GATE width = 3.0                    0            0
( 1432)  W3PD : Minimum PDF width = 3.02                     0            0
( 1433)  E3PDDP : Minimum PDF enclosure of PDIFF             0            0
( 1434)  S2PDND : Fixed PDF spacing to NDF (in ch            0            0
( 1435)  S10DF : Fixed DRAIN-EDGE-STI length = 1.            0            0
( 1436)  S10DF : Fixed DRAIN-EDGE-STI length = 1.            0            0
( 1437)  E2P1DP : Minimum POLY1 extension beyond             0            0
( 1438)  O3PDGA : Fixed PDF overlap of GATE = 0.5            0            0
( 1439)  S4P1DP : Minimum POLY1 spacing to DRAIN             0            0
( 1440)  Q1D1 : Check for the right usage of the             0            0
( 1441)  B1D1 : PHODEF without DIODEF is not allo            0            0
( 1442)  B2D1 : PHODEF without BLKALL is not allo            0            0
( 1443)  B3D1 : PHODEF and DIFF without SBLK is n            0            0
( 1444)  B1D1DF : PHODEF and DIFF without NIMP or            0            0
( 1445)  W1DFD1 : Maximum (DIFF overlap of PHODEF            0            0
( 1446)  O1SBIN : Minimum PHODEF and SBLK overlap            0            0
( 1447)  O1SBIP : Minimum PHODEF and SBLK overlap            0            0
( 1448)  B1UV : UVWIN overlap of MET3, METTP, PAD            0            0
( 1449)  B2UV : POLY1 overlap of UVWIN is not all            0            0
( 1450)  B3UV : UVWIN is only allowed for dphoc#,            0            0
( 1451)  B4UV : UVWIN without BLKALL is not allow            0            0
( 1452)  W1UV : Minimum UVWIN width = 3.0                    0            0
( 1453)  W2UV : Maximum UVWIN bounding box size =            0            0
( 1454)  W1DFUV : Maximum (DIFF overlap of UVWIN)            0            0
( 1455)  S1UVM3 : Minimum UVWIN spacing to MET3 =            0            0
( 1456)  S1UVMT : Minimum UVWIN spacing to METTP             0            0
( 1457)  S1UV : Minimum UVWIN spacing/notch = 3.0            0            0
( 1458)  S1UVPA : Minimum UVWIN spacing to PAD =             0            0
( 1459)  E1BAUV : Minimum BLKALL enclosure of UVW            0            0
( 1460)  B1OA : ANODOP is only allowed for dphod#            0            0
( 1461)  W1OA : Minimum ANODOP width = 0.44                  0            0
( 1462)  S1OA : Minimum ANODOP spacing/notch = 0.            0            0
( 1463)  A1OA : Minimum ANODOP area = 0.3844                 0            0
( 1464)  B1OC : CATDOP is only allowed for dphoc#            0            0
( 1465)  W1OC : Minimum CATDOP width = 0.44                  0            0
( 1466)  S1OC : Minimum CATDOP spacing/notch = 0.            0            0
( 1467)  A1OC : Minimum CATDOP area = 0.3844                 0            0
( 1468)  E1OCDF : Minimum CATDOP extension beyond            0            0
( 1469)  W1AM : Minimum AML width = 1.0                      0            0
( 1470)  S1AM : Minimum AML spacing/notch = 1.0              0            0
( 1471)  A1AM : Minimum AML area = 4.0                       0            0
( 1472)  B1AM : AML is only allowed for davl#                0            0
( 1473)  B2AM : AML without CATDIFF is not allowe            0            0
( 1474)  B1SB : SBLK overlap of MET1, MET2, MET3,            0            0
( 1475)  B3SB : (SBLK and AML and not POLY1) over            0            0
( 1476)  B2SB : SBLK without BLKALL is not allowe            0            0
( 1477)  E1BASB : Minimum BLKALL enclosure of SBL            0            0
( 1478)  B4SB : (SBLK and AML) without BLKALL is             0            0
( 1479)  E2BASB : Minimum BLKALL enclosure of (SB            0            0
( 1480)  B3AM : AML without SBLK is not allowed              0            0
( 1481)  B4AM : AML without CATDIFF is not allowe            0            0
( 1482)  E1DCAM : Minimum CATDIFF enclosure of AM            0            0
( 1483)  E2DCAM : Minimum CATDIFF enclosure of AM            0            0
( 1484)  B1PBDC : CATDIFF without PWBLK is not al            0            0
( 1485)  E1PBDC : Minimum PWBLK enclosure of CATD            0            0
( 1486)  E2PBDC : Minimum PWBLK enclosure of CATD            0            0
( 1487)  B6M2 : dapda0/dspada0 without MET2 is no            0            0
( 1488)  B7M2 : dapb0/dspb0 without MET2 is not a            0            0
( 1489)  B3NW : dapda/dapda0 without NWELL ring i            0            0
( 1490)  B4NW : dapb/dapb0 without NWELL ring is             0            0
( 1491)  W4P1 : Minimum GATE length = 0.18                   0            0
( 1492)  W3DF : Minimum GATE width = 0.22                    0            0
( 1493)  W6P1 : Minimum GATE length = 0.35                   0            0
( 1494)  W7P1 : Minimum GATE length = 0.3                    0            0
( 1495)  W9P1 : Minimum GATE length = 0.5                    0            0
( 1496)  W5P1 : Minimum GATE length = 1.0                    0            0
( 1497)  W4DF : Minimum GATE width = 1.0                     0            0
( 1498)  B3GA : Only rectangular GATE inside PWBL            0            0
( 1499)  W1GA : Minimum GATE length = 0.7                    0            0
( 1500)  W2GA : Minimum GATE width = 0.44                    0            0
( 1501)  W10P1 : Minimum GATE length = 0.35                  0            0
( 1502)  W11P1 : Minimum GATE length = 0.3                   0            0
( 1503)  B4GA : Only rectangular GATE is allowed             0            0
( 1504)  W38GA : Minimum GATE length = 2.0                   0            0
( 1505)  W38GA : Minimum GATE length = 2.0                   0            0
( 1506)  W39GA : Minimum GATE width = 2.0                    0            0
( 1507)  B2M1 : CONT or VIA1 are not allowed with            0            0
( 1508)  B2M2 : VIA1 is not allowed within rm2               0            0
( 1509)  B4M2 : VIA2 is not allowed within rm2               0            0
( 1510)  B2M3 : VIA2 is not allowed within rm3               0            0
( 1511)  B2MT : VIATP is not allowed within rmtp             0            0
( 1512)  B4M3 : VIA3 is not allowed within rm3               0            0
( 1513)  B2M4 : VIA3 is not allowed within rm4               0            0
( 1514)  B3M4 : VIATP is not allowed within rm4              0            0
( 1515)  B3MT : VIATPL is not allowed within rmtp            0            0
( 1516)  B2ML : VIATPL is not allowed within rmtp            0            0
( 1517)  B1DN : rdn/rdn3 inside ISOPW, DEPL, SCI,            0            0
( 1518)  B2GH : HVGOX overlap of rdn or rdp is no            0            0
( 1519)  W5DF : Minimum rdn/rdn3, rdp/rdp3 width             0            0
( 1520)  B2CT : CONT is not allowed within rpp1s#            0            0
( 1521)  B5P1 : rnp1_3 crossing NTYPE_WELL or PTY            0            0
( 1522)  B6P1 : rnp1_3 overlap rnw/rnw3/rdnwmv is            0            0
( 1523)  B7P1 : rpp1_3 crossing NTYPE_WELL or PTY            0            0
( 1524)  B8P1 : rpp1_3 overlap rnw/rnw3/rdnwmv is            0            0
( 1525)  B9P1 : rpp1s_3 crossing NTYPE_WELL or PT            0            0
( 1526)  B10P1 : rpp1s_3 overlap rnw/rnw3/rdnwmv             0            0
( 1527)  W3P1 : Minimum rnp1#, rpp1# width = 0.42            0            0
( 1528)  E1INP1 : Minimum NIMP extension beyond r            0            0
( 1529)  E1IPP1 : Minimum PIMP extension beyond r            0            0
( 1530)  S1INP1 : Minimum NIMP spacing to rpp1# o            0            0
( 1531)  S1IPP1 : Minimum PIMP spacing to rnp1# =            0            0
( 1532)  B1HR : HRES overlap of DIFF is not allow            0            0
( 1533)  B2HR : NIMP overlap of rnp1h# (resistor             0            0
( 1534)  B3HR : PIMP overlap of HRES is not allow            0            0
( 1535)  B4HR : POLY1 crossing HRES edge is not a            0            0
( 1536)  B6HR : NIMP crossing HRES edge is not al            0            0
( 1537)  B7HR : MET1 overlap of rnp1h# (resistor             0            0
( 1538)  B10HR : rnp1h_3 crossing NTYPE_WELL or P            0            0
( 1539)  B11HR : rnp1h_3 overlap rnw/rnw3/rdnwmv             0            0
( 1540)  W1HR : Minimum HRES width = 0.44                    0            0
( 1541)  W2HR : Minimum rnp1h# width = 0.42                  0            0
( 1542)  W3HR : Minimum rnp1h# length = 5.0                  0            0
( 1543)  S1HR : Minimum HRES spacing/notch = 0.44            0            0
( 1544)  S1HRDF : Minimum HRES spacing to DIFF =             0            0
( 1545)  S1HRP1 : Minimum HRES spacing to POLY1 =            0            0
( 1546)  S1HRIN : Minimum HRES spacing to NIMP =             0            0
( 1547)  S1HRIP : Minimum HRES spacing to PIMP =             0            0
( 1548)  E1HRP1 : Minimum HRES enclosure of POLY1            0            0
( 1549)  E2INP1 : Minimum NIMP extension beyond P            0            0
( 1550)  S2INP1 : Minimum NIMP (in SBLK) spacing             0            0
( 1551)  B5HR : rnp1h# terminal without NIMP is n            0            0
( 1552)  A1MR : Minimum MRES area < 0.3844                   0            0
( 1553)  B1MR : MRES overlap of DIFF is not allow            0            0
( 1554)  B2MR : MRES without SBLK is not allowed             0            0
( 1555)  B3MR : MRES overlap of NIMP or PIMP is n            0            0
( 1556)  W1MR : Minimum MRES width = 0.44                    0            0
( 1557)  S1MR : Minimum MRES spacing / notch = 0.            0            0
( 1558)  S1MRDF : Minimum MRES spacing to DIFF =             0            0
( 1559)  S1MRP1 : Minimum MRES spacing to POLY1 =            0            0
( 1560)  B4MR : HRES overlap of MRES is not allow            0            0
( 1561)  B6MR : rpp1k1_3 crossing NTYPE_WELL or P            0            0
( 1562)  B7MR : rpp1k1_3 overlap of rnw/rnw3/rdnw            0            0
( 1563)  W16P1 : Minimum rpp1k1# width = 0.42                0            0
( 1564)  E1MRP1 : Minimum MRES extension beyond r            0            0
( 1565)  E1SBMR : Fixed SBLK extension beyond MRE            0            0
( 1566)  E2IPP1 : Minimum PIMP extension beyond r            0            0
( 1567)  E2IPP1 : Minimum PIMP extension beyond r            0            0
( 1568)  S3INP1 : Minimum NIMP spacing to rpp1k1#            0            0
( 1569)  N_CT : Predefined area must not have CON            0            0
( 1570)  B2P1 : pfuse overlap of MET1, MET2, MET3            0            0
( 1571)  B3P1 : pfuse overlap of SBLK or DIFF is             0            0
( 1572)  B4P1 : pfuse without NIMP and BLKALL is             0            0
( 1573)  E1NWP1 : Fixed NWELL enclosure of pfuse             0            0
( 1574)  E1BAP1 : Minimum BLKALL enclosure of pfu            0            0
( 1575)  E3INP1 : Minimum NIMP enclosure of POLY1            0            0
( 1576)  S1DFP1 : Minimum DIFF spacing to pfuse =            0            0
( 1577)  S2SBP1 : Minimum SBLK spacing to pfuse =            0            0
( 1578)  S2P1 : Minimum POLY1 spacing to pfuse =             0            0
( 1579)  S1M1P1 : Minimum MET1 spacing to pfuse =            0            0
( 1580)  S1M2P1 : Minimum MET2 spacing to pfuse =            0            0
( 1581)  S1M3P1 : Minimum MET3 spacing to pfuse =            0            0
( 1582)  S1MTP1 : Minimum METTP spacing to pfuse             0            0
( 1583)  S1M4P1 : Minimum MET4 spacing to pfuse =            0            0
( 1584)  S1MLP1 : Minimum METTPL spacing to pfuse            0            0
( 1585)  B4DF : Check for dsb usage                          0            0
( 1586)  B11P1 : dpol body must be a rectangle               0            0
( 1587)  W12P1 : Minimum dpol width = 1.0                    0            0
( 1588)  W13P1 : Maximum dpol width = 200.0                  0            0
( 1589)  W14P1 : Fixed (SBLK and POLY1) length be            0            0
( 1590)  B12P1 : dpol body (oversized by 1.5um) o            0            0
( 1591)  B13P1 : dpol body (oversized by 1.0um) o            0            0
( 1592)  B14P1 : dpol body (oversized by 1.0um) w            0            0
( 1593)  E3IPP1 : Minimum PIMP extension beyond P            0            0
( 1594)  E3INP1 : Minimum NIMP extension beyond P            0            0
( 1595)  O1INSB : Fixed SBLK overlap of (POLY1 an            0            0
( 1596)  O1IPSB : Fixed SBLK overlap of (POLY1 an            0            0
( 1597)  W2NW : Minimum rnw,rnw3 width = 2.0                 0            0
( 1598)  B1NW : NW_VERIFY overlap of DIFF is not             0            0
( 1599)  B2NW : NW_VERIFY overlap of DNWELL or DN            0            0
( 1600)  B3GH : HVGOX overlap of rnw is not allow            0            0
( 1601)  W2WM : Minimum rdnwmv width = 2.0                   0            0
( 1602)  B4WM : DNWMV_VERIFY overlap of NWELL, DN            0            0
( 1603)  B5WM : DNWMV_VERIFY overlap of DIFF is n            0            0
( 1604)  B9WM : DNWMV_VERIFY overlap of ISOPW, DE            0            0
( 1605)  B4GH : HVGOX overlap of rdnwmv is not al            0            0
( 1606)  B5WD : qnva inside DNWELL is not allowed            0            0
( 1607)  B4MV : MV overlap of qnva is not allowed            0            0
( 1608)  B5DF : Check for qnvb usage                         0            0
( 1609)  B6DF : Check for qnvc usage                         0            0
( 1610)  B6WD : qnvb inside DNWELL is not allowed            0            0
( 1611)  B5MV : MV overlap of qnvb is not allowed            0            0
( 1612)  B8WD : qnvba inside DNWELL is not allowe            0            0
( 1613)  B6MV : MV overlap of qnvba is not allowe            0            0
( 1614)  B7WD : qnvc inside DNWELL is not allowed            0            0
( 1615)  B9WD : qnvca inside DNWELL is not allowe            0            0
( 1616)  E1MVWM : Minimum MV enclosure of DNWELLM            0            0
( 1617)  Predefined area must have SBLK                      0            0
( 1618)  Predefined area must not have SBLK                  0            0
( 1619)  W5GA : Minimum GATE length = 2.9                    0            0
( 1620)  W6GA : Minimum GATE width = 2.5                     0            0
( 1621)  S3HNHP : Fixed HVNWELL spacing to HVPWEL            0            0
( 1622)  S3HNHP : Fixed HVNWELL spacing to HVPWEL            0            0
( 1623)  S4HNHP : Fixed HVNWELL spacing to HVPWEL            0            0
( 1624)  S4HNHP : Fixed HVNWELL spacing to HVPWEL            0            0
( 1625)  S4HNHP : Fixed HVNWELL spacing to HVPWEL            0            0
( 1626)  S1DPGA : Maximum PDIFF spacing to GATE (            0            0
( 1627)  E2PBHN : Minimum PWBLK enclosure of HVNW            0            0
( 1628)  S2HPHN : Fixed HVPWELL spacing to HVNWEL            0            0
( 1629)  S2HPHN : Fixed HVPWELL spacing to HVNWEL            0            0
( 1630)  S3HPHN : Minimum HVPWELL spacing to HVNW            0            0
( 1631)  S1DNGA : Maximum NDIFF spacing to GATE (            0            0
( 1632)  E1HNGA : Minimum HVNWELL extension beyon            0            0
( 1633)  S3HPDN : Minimum SOURCE / DRAIN HVPWELL             0            0
( 1634)  S4DF : Fixed SOURCE / DRAIN-EDGE-STI len            0            0
( 1635)  S4DF : Fixed SOURCE / DRAIN-EDGE-STI len            0            0
( 1636)  S5DF : Fixed SOURCE / DRAIN-EDGE-STI len            0            0
( 1637)  S5DF : Fixed SOURCE / DRAIN-EDGE-STI len            0            0
( 1638)  O1HNGA : Fixed HVNWELL overlap of GATE =            0            0
( 1639)  O1HNGA : Fixed HVNWELL overlap of GATE =            0            0
( 1640)  O1HPGA : Fixed HVPWELL overlap of GATE =            0            0
( 1641)  O1HPGA : Fixed HVPWELL overlap of GATE =            0            0
( 1642)  S1P1DN : Minimum POLY1 spacing to SOURCE            0            0
( 1643)  E1P1DN : Minimum POLY1 extension beyond             0            0
( 1644)  S1P1DP : Minimum POLY1 spacing to SOURCE            0            0
( 1645)  E1P1DP : Minimum POLY1 extension beyond             0            0
( 1646)  B1DNGH : NDIFF without HVGOX is not allo            0            0
( 1647)  B1DPGH : PDIFF without HVGOX is not allo            0            0
( 1648)  B3WM : pmma inside DNWELLMV is not allow            0            0
( 1649)  W10GA : Minimum linear cell width = 5.0             0            0
( 1650)  W9GA : Fixed CHANNEL length = 0.94                  0            0
( 1651)  W10GA : Minimum linear cell width = 5.0             0            0
( 1652)  W7GA : Fixed CHANNEL length = 0.65                  0            0
( 1653)  W11GA : Fixed CHANNEL length = 1.25                 0            0
( 1654)  W8GA : Minimum linear cell width = 5.0              0            0
( 1655)  W8GA : Minimum linear cell width = 5.0              0            0
( 1656)  N_HW : Predefined area must not have HNW            0            0
( 1657)  N_WD : Predefined area must not have DNW            0            0
( 1658)  N_WM : Predefined area must not have DNW            0            0
( 1659)  N_HN : Predefined area must not have HVN            0            0
( 1660)  N_HP : Predefined area must not have HVP            0            0
( 1661)  N_ND : Predefined area must not have NDF            0            0
( 1662)  N_DL : Predefined area must not have DEP            0            0
( 1663)  M_NW : Predefined area must have NWELL              0            0
( 1664)  N_NW : Predefined area must not have NWE            0            0
( 1665)  N_NW : Predefined area must not have NWE            0            0
( 1666)  M_PB : Predefined area must have PWBLK              0            0
( 1667)  N_PB : Predefined area must not have PWB            0            0
( 1668)  M_PB : Predefined area must have MV                 0            0
( 1669)  M_DF : Predefined area must have DIFF               0            0
( 1670)  M_DN : Predefined area must have NDIFF              0            0
( 1671)  N_DN : Predefined area must not have NDI            0            0
( 1672)  M_DP : Predefined area must have PDIFF              0            0
( 1673)  N_DP : Predefined area must not have PDI            0            0
( 1674)  M_P1 : Predefined area must have POLY1              0            0
( 1675)  N_P1 : Predefined area must not have POL            0            0
( 1676)  M_IN : Predefined area must have NIMP               0            0
( 1677)  N_IN : Predefined area must not have NIM            0            0
( 1678)  M_IP : Predefined area must have PIMP               0            0
( 1679)  N_IP : Predefined area must not have PIM            0            0
( 1680)  M_SB : Predefined area must have SBLK               0            0
( 1681)  N_SB : Predefined area must not have SBL            0            0
( 1682)  N_SB : Predefined area must not have SBL            0            0
( 1683)  M_UV : Predefined area must have UVWIN              0            0
( 1684)  N_UV : Predefined area must not have UVW            0            0
( 1685)  N_OA : Predefined area must not have ANO            0            0
( 1686)  N_GH : Predefined area must not have HVG            0            0
( 1687)  N_LV : Predefined area must not have LVT            0            0
( 1688)  N_SV : Predefined area must not have SVT            0            0
( 1689)  N_UL : Predefined area must not have ULN            0            0
( 1690)  N_LD : Predefined area must not have LND            0            0
( 1691)  N_NU : Predefined area must not have BNI            0            0
( 1692)  N_HL : Predefined area must not have HVD            0            0
( 1693)  N_M1 : Predefined area must not have MET            0            0
( 1694)  M_M2 : Predefined area must have MET2               0            0
( 1695)  N_M2 : Predefined area must not have MET            0            0
( 1696)  N_M3 : Predefined area must not have MET            0            0
( 1697)  M_HW : Predefined area must have HNW                0            0
( 1698)  N_HW : Predefined area must not have HNW            0            0
( 1699)  M_HN : Predefined area must have HVNWELL            0            0
( 1700)  N_HN : Predefined area must not have HVN            0            0
( 1701)  G_HP : Predefined geometry of HVPWELL vi            0            0
( 1702)  M_HP : Predefined area must have HVPWELL            0            0
( 1703)  N_HP : Predefined area must not have HVP            0            0
( 1704)  N_ND : Predefined area must not have NDF            0            0
( 1705)  N_HL : Predefined area must not have HVD            0            0
( 1706)  M_DN : Predefined area must have NDIFF              0            0
( 1707)  N_DN : Predefined area must not have NDI            0            0
( 1708)  M_DP : Predefined area must have PDIFF              0            0
( 1709)  N_DP : Predefined area must not have PDI            0            0
( 1710)  M_SB : Predefined area must have SBLK               0            0
( 1711)  N_SB : Predefined area must not have SBL            0            0
( 1712)  B1YD : DIFFDUMMY overlap of DIFF is not             0            0
( 1713)  B2YD : DIFFDUMMY overlap of NIMP or PIMP            0            0
( 1714)  B3YD : DIFFDUMMY overlap of CONT is not             0            0
( 1715)  B5YD : DIFFDUMMY overlap of SBLK is not             0            0
( 1716)  B6YD : DIFFDUMMY overlap of HVDEPL is no            0            0
( 1717)  B7YD : DIFFDUMMY overlap of PHODEF is no            0            0
( 1718)  W1YD : Minimum DIFFDUMMY width = 0.4                0            0
( 1719)  S1YD : Minimum DIFFDUMMY spacing/notch =            0            0
( 1720)  S1YDDF : Minimum DIFFDUMMY spacing to DI            0            0
( 1721)  S1YDIN : Minimum DIFFDUMMY spacing to NI            0            0
( 1722)  S1YDIP : Minimum DIFFDUMMY spacing to PI            0            0
( 1723)  S1YDP1 : Minimum DIFFDUMMY spacing to PO            0            0
( 1724)  S1YDSB : Minimum DIFFDUMMY spacing to SB            0            0
( 1725)  S1YDHL : Minimum DIFFDUMMY spacing to HV            0            0
( 1726)  S1YDWD : Minimum DIFFDUMMY spacing to DN            0            0
( 1727)  S1YDHW : Minimum DIFFDUMMY spacing to HN            0            0
( 1728)  S1YDWM : Minimum DIFFDUMMY spacing to DN            0            0
( 1729)  S1YDPI : Minimum DIFFDUMMY spacing to PW            0            0
( 1730)  S1YDNW : Minimum DIFFDUMMY spacing to NW            0            0
( 1731)  E1YDWD : Minimum DNWELL enclosure of DIF            0            0
( 1732)  E1YDHW : Minimum HNW enclosure of DIFFDU            0            0
( 1733)  E1YDWM : Minimum DNWELLMV enclosure of D            0            0
( 1734)  E1YDPI : Minimum PW4DMY enclosure of DIF            0            0
( 1735)  E1YDNW : Minimum NW4DMY enclosure of DIF            0            0
( 1736)  S10YD : Minimum DIFFDUMMY spacing to LOC            0            0
( 1737)  S11YD : Minimum DIFFDUMMY spacing to LOC            0            0
( 1738)  S12YD : Minimum DIFFDUMMY spacing to LOC            0            0
( 1739)  S13YD : Minimum DIFFDUMMY spacing to LOC            0            0
( 1740)  S14YD : Minimum DIFFDUMMY spacing to LOC            0            0
( 1741)  A1YD : Minimum DIFFDUMMY area = 1.2                 0            0
( 1742)  B1YP : Only rectangular P1DUMMY is allow            0            0
( 1743)  B2YP : P1DUMMY overlap of POLY1 is not a            0            0
( 1744)  B3YP : P1DUMMY overlap of CONT is not al            0            0
( 1745)  B5YP : P1DUMMY overlap of SBLK is not al            0            0
( 1746)  B6YP : P1DUMMY overlap of MRES or HRES i            0            0
( 1747)  B7YP : P1DUMMY overlap of HVDEPL is not             0            0
( 1748)  B8YP : P1DUMMY overlap of PHODEF is not             0            0
( 1749)  W1YP : Minimum P1DUMMY width = 1.0                  0            0
( 1750)  S1YP : Minimum P1DUMMY spacing = 1.0                0            0
( 1751)  S1YPP1 : Minimum P1DUMMY spacing to POLY            0            0
( 1752)  S1YPDF : Minimum P1DUMMY spacing to DIFF            0            0
( 1753)  S1YPYD : Minimum P1DUMMY spacing to DIFF            0            0
( 1754)  S1YPSB : Minimum P1DUMMY spacing to SBLK            0            0
( 1755)  S1YPHL : Minimum P1DUMMY spacing to HVDE            0            0
( 1756)  S1YPWD : Minimum P1DUMMY spacing to DNWE            0            0
( 1757)  S1YPHW : Minimum P1DUMMY spacing to HNW             0            0
( 1758)  S1YPWM : Minimum P1DUMMY spacing to DNWE            0            0
( 1759)  S1YPPI : Minimum P1DUMMY spacing to PW4D            0            0
( 1760)  S1YPNW : Minimum P1DUMMY spacing to NW4D            0            0
( 1761)  E1YPWD : Minimum DNWELL enclosure of P1D            0            0
( 1762)  E1YPHW : Minimum HNW enclosure of P1DUMM            0            0
( 1763)  E1YPWM : Minimum DNWELLMV enclosure of P            0            0
( 1764)  E1YPPI : Minimum PW4DMY enclosure of P1D            0            0
( 1765)  E1YPNW : Minimum NW4DMY enclosure of P1D            0            0
( 1766)  S10YP : Minimum P1DUMMY spacing to LOCKE            0            0
( 1767)  S11YP : Minimum P1DUMMY spacing to LOCKE            0            0
( 1768)  S12YP : Minimum P1DUMMY spacing to LOCKE            0            0
( 1769)  S13YP : Minimum P1DUMMY spacing to LOCKE            0            0
( 1770)  S14YP : Minimum P1DUMMY spacing to LOCKE            0            0
( 1771)  B1Y1 : Only rectangular M1DUMMY is allow            0            0
( 1772)  B2Y1 : M1DUMMY overlap of MET1 is not al            0            0
( 1773)  B3Y1 : M1DUMMY overlap of CONT or VIA1 i            0            0
( 1774)  B4Y1 : M1DUMMY overlap of HRES is not al            0            0
( 1775)  W1Y1 : Minimum M1DUMMY width = 2.0                  0            0
( 1776)  W2Y1 : Maximum M1DUMMY edge length = 20.            0            0
( 1777)  S1Y1 : Minimum M1DUMMY spacing = 2.0                0            0
( 1778)  S1Y1M1 : Minimum M1DUMMY spacing to MET1            0            0
( 1779)  S10Y1 : Minimum M1DUMMY spacing to LOCKE            0            0
( 1780)  S11Y1 : Minimum M1DUMMY spacing to LOCKE            0            0
( 1781)  S12Y1 : Minimum M1DUMMY spacing to LOCKE            0            0
( 1782)  S13Y1 : Minimum M1DUMMY spacing to LOCKE            0            0
( 1783)  S14Y1 : Minimum M1DUMMY spacing to LOCKE            0            0
( 1784)  S1Y1HR : Minimum M1DUMMY spacing to HRES            0            0
( 1785)  B1Y2 : Only rectangular M2DUMMY is allow            0            0
( 1786)  B2Y2 : M2DUMMY overlap of MET2 is not al            0            0
( 1787)  B3Y2V1 : M2DUMMY overlap of VIA1 is not             0            0
( 1788)  B3Y2V2 : M2DUMMY overlap of VIA2 is not             0            0
( 1789)  W1Y2 : Minimum M2DUMMY width = 2.0                  0            0
( 1790)  W2Y2 : Maximum M2DUMMY edge length = 20.            0            0
( 1791)  S1Y2 : Minimum M2DUMMY spacing = 2.0                0            0
( 1792)  S1Y2M2 : Minimum M2DUMMY spacing to MET2            0            0
( 1793)  S10Y2 : Minimum M2DUMMY spacing to LOCKE            0            0
( 1794)  S11Y2 : Minimum M2DUMMY spacing to LOCKE            0            0
( 1795)  S12Y2 : Minimum M2DUMMY spacing to LOCKE            0            0
( 1796)  S13Y2 : Minimum M2DUMMY spacing to LOCKE            0            0
( 1797)  S14Y2 : Minimum M2DUMMY spacing to LOCKE            0            0
( 1798)  B1Y3 : Only rectangular M3DUMMY is allow            0            0
( 1799)  B2Y3 : M3DUMMY overlap of MET3 is not al            0            0
( 1800)  B3Y3V2 : M3DUMMY overlap of VIA2 is not             0            0
( 1801)  B3Y3V3 : M3DUMMY overlap of VIA3 is not             0            0
( 1802)  W1Y3 : Minimum M3DUMMY width = 2.0                  0            0
( 1803)  W2Y3 : Maximum M3DUMMY edge length = 20.            0            0
( 1804)  S1Y3 : Minimum M3DUMMY spacing = 2.0                0            0
( 1805)  S1Y3M3 : Minimum M3DUMMY spacing to MET3            0            0
( 1806)  S10Y3 : Minimum M3DUMMY spacing to LOCKE            0            0
( 1807)  S11Y3 : Minimum M3DUMMY spacing to LOCKE            0            0
( 1808)  S12Y3 : Minimum M3DUMMY spacing to LOCKE            0            0
( 1809)  S13Y3 : Minimum M3DUMMY spacing to LOCKE            0            0
( 1810)  B1Y4 : Only rectangular M4DUMMY is allow            0            0
( 1811)  B2Y4 : M4DUMMY overlap of MET4 is not al            0            0
( 1812)  B3Y4V3 : M4DUMMY overlap of VIA3 is not             0            0
( 1813)  B3Y4VT : M4DUMMY overlap of VIATP is not            0            0
( 1814)  W1Y4 : Minimum M4DUMMY width = 2.0                  0            0
( 1815)  W2Y4 : Maximum M4DUMMY edge length = 20.            0            0
( 1816)  S1Y4 : Minimum M4DUMMY spacing = 2.0                0            0
( 1817)  S1Y4M4 : Minimum M4DUMMY spacing to MET4            0            0
( 1818)  S10Y4 : Minimum M4DUMMY spacing to LOCKE            0            0
( 1819)  S11Y4 : Minimum M4DUMMY spacing to LOCKE            0            0
( 1820)  S12Y4 : Minimum M4DUMMY spacing to LOCKE            0            0
( 1821)  B1YT : Only rectangular MTPDUMMY is allo            0            0
( 1822)  B2YT : MTPDUMMY overlap of METTP is not             0            0
( 1823)  B3YTVT : MTPDUMMY overlap of VIATP is no            0            0
( 1824)  B3YTVL : MTPDUMMY overlap of VIATPL is n            0            0
( 1825)  W1YT : Minimum MTPDUMMY width = 2.0                 0            0
( 1826)  W2YT : Maximum MTPDUMMY edge length = 20            0            0
( 1827)  S1YT : Minimum MTPDUMMY spacing = 2.0               0            0
( 1828)  S1YTMT : Minimum MTPDUMMY spacing to MET            0            0
( 1829)  S1YTPA : Minimum MTPDUMMY spacing to PAD            0            0
( 1830)  S10YT : Minimum MTPDUMMY spacing to LOCK            0            0
( 1831)  S11YT : Minimum MTPDUMMY spacing to LOCK            0            0
( 1832)  B1YL : Only rectangular MTPLDUMMY is all            0            0
( 1833)  B2YL : MTPLDUMMY overlap of METTPL is no            0            0
( 1834)  B3YLVL : MTPLDUMMY overlap of VIATPL is             0            0
( 1835)  W1YL : Minimum MTPLDUMMY width = 5.0                0            0
( 1836)  W2YL : Maximum MTPLDUMMY edge length = 2            0            0
( 1837)  S1YL : Minimum MTPLDUMMY spacing = 5.0              0            0
( 1838)  S1YLML : Minimum MTPLDUMMY spacing to ME            0            0
( 1839)  S10YL : Minimum MTPLDUMMY spacing to LOC            0            0
( 1840)  Q1M1 : Resistor terminal net without VLA            0            0
( 1841)  Q1M1 : Resistor terminal net without VLA            0            0
( 1842)  Q1M1 : Resistor terminal net without VLA            0            0
( 1843)  Q1M1 : Resistor terminal net without VLA            0            0
( 1844)  Q1P1 : Resistor terminal net without VLA            0            0
( 1845)  Q1M1 : Resistor terminal net without VLA            0            0
( 1846)  Q1M2 : Resistor terminal net without VLA            0            0
( 1847)  Q1M3 : Resistor terminal net without VLA            0            0
( 1848)  Q1M4 : Resistor terminal net without VLA            0            0
( 1849)  Q1MT : Resistor terminal net without VLA            0            0
( 1850)  Q1ML : Resistor terminal net without VLA            0            0
( 1851)  S3P1 : Minimum POLY1 spacing for differe            0            0
( 1852)  S5P1DF : Minimum POLY1 spacing to DIFF f            0            0
( 1853)  S4M1 : Minimum MET1 spacing for differen            0            0
( 1854)  S4M2 : Minimum MET2 spacing for differen            0            0
( 1855)  S4M3 : Minimum MET3 spacing for differen            0            0
( 1856)  S4M4 : Minimum MET4 spacing for differen            0            0
( 1857)  S4MT : Minimum MTP spacing for different            0            0
( 1858)  PWBLK not multiple 45 degrees                       0            0
( 1859)  PAD not multiple 45 degrees                         0            0
( 1860)  DIFF not multiple 45 degrees                        0            0
( 1861)  PIMP not multiple 45 degrees                        0            0
( 1862)  NIMP not multiple 45 degrees                        0            0
( 1863)  SBLK not multiple 45 degrees                        0            0
( 1864)  NWELL not multiple 45 degrees                       0            0
( 1865)  DNWELL not multiple 45 degrees                      0            0
( 1866)  DNWELLMV not multiple 45 degrees                    0            0
( 1867)  MV not multiple 45 degrees                          0            0
( 1868)  CONT not multiple 45 degrees                        0            0
( 1869)  POLY1 not multiple 45 degrees                       0            0
( 1870)  MET1 not multiple 45 degrees                        0            0
( 1871)  MET2 not multiple 45 degrees                        0            0
( 1872)  M1HOLE not multiple 45 degrees                      0            0
( 1873)  M2HOLE not multiple 45 degrees                      0            0
( 1874)  MET3 not multiple 45 degrees                        0            0
( 1875)  M3HOLE not multiple 45 degrees                      0            0
( 1876)  VIA2 not multiple 45 degrees                        0            0
( 1877)  MET4 not multiple 45 degrees                        0            0
( 1878)  M4HOLE not multiple 45 degrees                      0            0
( 1879)  VIA3 not multiple 45 degrees                        0            0
( 1880)  METTPL not multiple 45 degrees                      0            0
( 1881)  VIATPL not multiple 45 degrees                      0            0
( 1882)  METTP not multiple 45 degrees                       0            0
( 1883)  MTHOLE not multiple 45 degrees                      0            0
( 1884)  VIATP not multiple 45 degrees                       0            0
( 1885)  VIA1 not multiple 45 degrees                        0            0
( 1886)  CM not multiple 45 degrees                          0            0
( 1887)  CM2 not multiple 45 degrees                         0            0
( 1888)  CM3 not multiple 45 degrees                         0            0
( 1889)  HVGOX not multiple 45 degrees                       0            0
( 1890)  HVPWELL not multiple 45 degrees                     0            0
( 1891)  HVNWELL not multiple 45 degrees                     0            0
( 1892)  DEPL not multiple 45 degrees                        0            0
( 1893)  ISOPW not multiple 45 degrees                       0            0
( 1894)  PDD not multiple 45 degrees                         0            0
( 1895)  SCI not multiple 45 degrees                         0            0
( 1896)  HRES not multiple 45 degrees                        0            0
( 1897)  NOPIM not multiple 45 degrees                       0            0
( 1898)  DNC not multiple 45 degrees                         0            0
( 1899)  DPC not multiple 45 degrees                         0            0
( 1900)  HNW not multiple 45 degrees                         0            0
( 1901)  NDF not multiple 45 degrees                         0            0
( 1902)  PDF not multiple 45 degrees                         0            0
( 1903)  MRES not multiple 45 degrees                        0            0
( 1904)  LVT not multiple 45 degrees                         0            0
( 1905)  HVDEPL not multiple 45 degrees                      0            0
( 1906)  CAPMH not multiple 45 degrees                       0            0
( 1907)  CAPMH2 not multiple 45 degrees                      0            0
( 1908)  CAPMH3 not multiple 45 degrees                      0            0
( 1909)  CAPM23F not multiple 45 degrees                     0            0
( 1910)  CAPMH23F not multiple 45 degrees                    0            0
( 1911)  CAPM34F not multiple 45 degrees                     0            0
( 1912)  CAPMH34F not multiple 45 degrees                    0            0
( 1913)  UVWIN not multiple 45 degrees                       0            0
( 1914)  ANODOP not multiple 45 degrees                      0            0
( 1915)  CATDOP not multiple 45 degrees                      0            0
( 1916)  LNDEV not multiple 45 degrees                       0            0
( 1917)  AML not multiple 45 degrees                         0            0
( 1918)  ULN not multiple 45 degrees                         0            0
( 1919)  BNIMP not multiple 45 degrees                       0            0
( 1920)  SVT not multiple 45 degrees                         0            0
( 1921)  POLY1 pin without POLY1 drawing                     0            0
( 1922)  MET1 pin without MET1 drawing                       0            0
( 1923)  MET2 pin without MET2 drawing                       0            0
( 1924)  MET3 pin without MET3 drawing                       0            0
( 1925)  MET4 pin without MET4 drawing                       0            0
( 1926)  METTP pin without METTP drawing                     0            0
( 1927)  METTPL pin without METTPL drawing                   0            0
( 1928)    BDLOCK : Any structure over LOCKED (AL            0            0
( 1929)    BDLOCK : Any structure over LOCKED (AL            0            0
( 1930)    BDLOCK : Any structure over LOCKED (AL            0            0
( 1931)    BDLOCK : Any structure over LOCKED (AL            0            0
( 1932)    BDLOCK : Any structure over LOCKED (AL            0            0
( 1933)    B1LOCK : Any structure over LOCKED (LO            0            0
( 1934)    B1LOCK : Any structure over LOCKED (LO            0            0
( 1935)    B1LOCK : Any structure over LOCKED (LO            0            0
( 1936)    B1LOCK : Any structure over LOCKED (LO            0            0
( 1937)    B2LOCK : Any structure over LOCKED (LO            0            0
( 1938)    B2LOCK : Any structure over LOCKED (LO            0            0
( 1939)    B2LOCK : Any structure over LOCKED (LO            0            0
( 1940)    B3LOCK : Any structure over LOCKED (LO            0            0
( 1941)    B3LOCK : Any structure over LOCKED (LO            0            0
( 1942)    B4LOCK : Any structure over LOCKED (LO            0            0
( 1943)  BDXF : Not allowed to be used by custome            0            0
( 1944)  BDNC : Not allowed to be used by custome            0            0
( 1945)  BDPC : Not allowed to be used by custome            0            0
( 1946)  BDDF : Not allowed to be used by custome            0            0
( 1947)  BDP1 : Not allowed to be used by custome            0            0
( 1948)  ant_pfox_gate: R2P1 : Maximum ratio of P            0            0
( 1949)  ant_pfox_poly: R2P1 : Maximum ratio of P            0            0
( 1950)  ant_contR_gate: R1CT : Maximum ratio of             0            0
( 1951)  ant_contR_cont: R1CT : Maximum ratio of             0            0
( 1952)  ant_met1_gate: R2M1P1 : Maximum ratio of            0            0
( 1953)  ant_met1_met1: R2M1P1 : Maximum ratio of            0            0
( 1954)  ant_via1R_gate: R1V1 : Maximum ratio of             0            0
( 1955)  ant_via1R_via1: R1V1 : Maximum ratio of             0            0
( 1956)  ant_met2_gate: R2M2P1 : Maximum ratio of            0            0
( 1957)  ant_met2_met2: R2M2P1 : Maximum ratio of            0            0
( 1958)  ant_via2R_gate: R1V2 : Maximum ratio of             0            0
( 1959)  ant_via2R_via2: R1V2 : Maximum ratio of             0            0
( 1960)  ant_met3_gate: R2M3P1 : Maximum ratio of            0            0
( 1961)  ant_met3_met3: R2M3P1 : Maximum ratio of            0            0
( 1962)  ant_via3R_gate: R1V3 : Maximum ratio of             0            0
( 1963)  ant_via3R_via3: R1V3 : Maximum ratio of             0            0
( 1964)  ant_met4_gate: R2M4P1 : Maximum ratio of            0            0
( 1965)  ant_met4_met4: R2M4P1 : Maximum ratio of            0            0
( 1966)  ant_vtpR_gate: R1VT : Maximum ratio of V            0            0
( 1967)  ant_vtpR_vtp: R1VT : Maximum ratio of VI            0            0
( 1968)  ant_mtp_gate: R2MTP1 : Maximum ratio of             0            0
( 1969)  ant_mtp_mtp: R2MTP1 : Maximum ratio of M            0            0
( 1970)  ant_vtplR_gate: R1VL : Maximum ratio of             0            0
( 1971)  ant_vtplR_vtpl: R1VL : Maximum ratio of             0            0
( 1972)  ant_mtpl_gate: R2MLP1 : Maximum ratio of            0            0
( 1973)  ant_mtpl_mtpl: R2MLP1 : Maximum ratio of            0            0
--------------------------------------------------------------------------------
Total  errors:                                               0            0
--------------------------------------------------------------------------------

   Finished creating Error Database ...

   Writing Report into /home/ykhuang/research/AssuraDRC/CurrentMirror_x10_LV_DRC.err ...

avrpt cpu sec:    0.56  elapsed:     1  virtual:    93M

Finished /pkg/cadence/installs/ASSURA41//tools.lnx86/assura/bin/avrpt

Starting /pkg/cadence/installs/ASSURA41//tools.lnx86/assura/bin/avcallproc /home/ykhuang/research/AssuraDRC/CurrentMirror_x10_LV_DRC.rsf -restart -cdslib /home/ykhuang/research/cds.lib

Loading tech rule set file : /home/ykhuang/research/.assuraSetup/Assura/techRuleSets

Loading tech rule set file : /home/ykhuang/research/.assuraSetup/Assura/techRuleSets

Loading tech rule set file : /home/ykhuang/research/.assuraSetup/Assura/techRuleSets
Loading assuraDRC_Rules Version "assuraDRC-210106" at "Apr 23 16:42:35 2021"

Finished /pkg/cadence/installs/ASSURA41//tools.lnx86/assura/bin/avcallproc


Run ended: Fri Apr 23 16:42:35 2021

*****  Assura terminated normally  *****

