initFile ""
useDefparam nil
includeInstCdfParams nil
allowSparseBuses "yes"
print_control_vars t
ifdefLanguageExtensions nil
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vdde!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd3!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" ""))
emh_printPhysicalInst nil
vlogSupply0Sigs ""
splitNetlistFormat nil
allowIllegalIdentifiers "yes"
amsVerilogHonorSmForLeaf nil
ossEscNameMapping t
modifyParamScope "no"
allowNameCollisions "yes"
shortInstanceList ""
dspfFile nil
allowDeviantBuses "yes"
termDirectionMismatch "ignore"
forceCleanTempDirForShadow nil
emh_PrintPwrGndConnectivity nil
unquoteNumbers t
ignorePrintNettype nil
updateShadow nil
enablePkgImport nil
preferMEOverImplicit t
paramGlobalDefVal "0"
netClashFormat "%b_netclash"
amsLSB_MSB nil
hnlVerilogTermSyncUp nil
paramDefVals ""
instClashFormat "%b_instclash"
useSpectreInfo "spectre veriloga spice"
emh_macroLibList ""
runNProcForSch nil
amsScalarInstances t
templateFile ""
includeFiles "disciplines.vams userDisciplines.vams"
termMismatch "ignore"
emh_digNetlistFile "digital.v"
useUselibForSpice nil
emh_phyCell ""
unlAnalogOnly ""
templateScript ""
checkForMissingShadows nil
verboseShadowLog nil
createSpectreCktForExtracted nil
headerText "none"
amsExpScalingFactor "no"
aliasInstFormat "ams_alias_inst_%i"
amsExcludeParams ""
emh_printEmptySubckt t
amsTempDirForShadows ""
amsPortConnectionByNameOrOrder "name"
emh_maskLayoutView t
dnaAssemblerWaitTime 3600
netlistNoWarn ""
upgradeMsgSevError ""
desVarsToBeNetlistedAsInt ""
amsTraverseConfigForTextViews t
useEffectiveCDF nil
upgradeMsgSevWarn ""
amsVerbose nil
unlPortDrill ""
amsDefinitionViews "symbol schematic extracted"
netlistMaxWarn2331 3
amsmaxErrors "50"
useRunDirNetlistsOnly t
vlogGroundSigs "gnd!"
netlistMaxWarn ""
vlogSupply1Sigs ""
emh_DigitalInstList nil
allDspfFiles nil
iterInstExpFormat "%b_%i"
useFileUselib t
