amsmaxErrors "50"
useFileUselib t
unlPortDrill ""
upgradeMsgSevWarn ""
amsScalarInstances t
termDirectionMismatch "ignore"
useUselibForSpice nil
amsLSB_MSB nil
print_control_vars t
netlistNoWarn ""
shortInstanceList ""
ignorePrintNettype nil
emh_digNetlistFile "digital.v"
templateFile ""
emh_maskLayoutView t
initFile ""
amsPortConnectionByNameOrOrder "name"
unlAnalogOnly ""
upgradeMsgSevError ""
amsVerbose nil
splitNetlistFormat nil
desVarsToBeNetlistedAsInt ""
useRunDirNetlistsOnly t
termMismatch "ignore"
verboseShadowLog nil
vlogGroundSigs "gnd!"
useSpectreInfo "spectre veriloga spice"
forceCleanTempDirForShadow nil
amsExpScalingFactor "no"
updateShadow nil
netlistMaxWarn2331 3
dspfFile nil
netlistMaxWarn ""
templateScript ""
vlogSupply1Sigs ""
hnlVerilogTermSyncUp nil
amsTraverseConfigForTextViews t
ossEscNameMapping t
paramGlobalDefVal "0"
headerText "none"
allDspfFiles nil
iterInstExpFormat "%b_%i"
emh_macroLibList ""
enablePkgImport nil
preferMEOverImplicit t
vlogSupply0Sigs ""
paramDefVals ""
emh_phyCell ""
instClashFormat "%b_instclash"
includeFiles "disciplines.vams userDisciplines.vams"
checkForMissingShadows nil
aliasInstFormat "ams_alias_inst_%i"
useDefparam nil
dnaAssemblerWaitTime 3600
amsTempDirForShadows ""
amsDefinitionViews "symbol schematic extracted"
emh_DigitalInstList nil
ifdefLanguageExtensions nil
modifyParamScope "no"
allowNameCollisions "yes"
runNProcForSch nil
emh_PrintPwrGndConnectivity nil
netClashFormat "%b_netclash"
amsExcludeParams ""
allowIllegalIdentifiers "yes"
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vdde!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd3!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" ""))
useEffectiveCDF nil
allowDeviantBuses "yes"
unquoteNumbers t
emh_printEmptySubckt t
createSpectreCktForExtracted nil
includeInstCdfParams nil
allowSparseBuses "yes"
emh_printPhysicalInst nil
amsVerilogHonorSmForLeaf nil
