amsTraverseConfigForTextViews t
unlPortDrill ""
useEffectiveCDF nil
upgradeMsgSevWarn ""
amsVerbose nil
upgradeMsgSevError ""
netlistNoWarn ""
amsmaxErrors "50"
hnlVerilogTermSyncUp nil
useRunDirNetlistsOnly t
desVarsToBeNetlistedAsInt ""
iterInstExpFormat "%b_%i"
netlistMaxWarn ""
emh_DigitalInstList nil
useFileUselib t
amsDefinitionViews "symbol schematic extracted"
netlistMaxWarn2331 3
templateFile ""
termMismatch "ignore"
dspfFile nil
verboseShadowLog nil
vlogSupply1Sigs ""
createSpectreCktForExtracted nil
headerText "none"
emh_phyCell ""
templateScript ""
checkForMissingShadows nil
vlogGroundSigs "gnd!"
unlAnalogOnly ""
amsPortConnectionByNameOrOrder "name"
dnaAssemblerWaitTime 3600
emh_maskLayoutView t
amsExpScalingFactor "no"
amsExcludeParams ""
termDirectionMismatch "ignore"
aliasInstFormat "ams_alias_inst_%i"
emh_printEmptySubckt t
amsTempDirForShadows ""
preferMEOverImplicit t
modifyParamScope "no"
allDspfFiles nil
netClashFormat "%b_netclash"
amsLSB_MSB nil
unquoteNumbers t
ignorePrintNettype nil
updateShadow nil
enablePkgImport nil
amsScalarInstances t
vlogSupply0Sigs ""
emh_digNetlistFile "digital.v"
useDefparam nil
useUselibForSpice nil
instClashFormat "%b_instclash"
useSpectreInfo "spectre veriloga spice"
ifdefLanguageExtensions nil
emh_macroLibList ""
runNProcForSch nil
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vdde!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd3!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" ""))
emh_printPhysicalInst nil
paramDefVals ""
splitNetlistFormat nil
includeInstCdfParams nil
allowSparseBuses "yes"
print_control_vars t
includeFiles "disciplines.vams userDisciplines.vams"
initFile ""
allowDeviantBuses "yes"
forceCleanTempDirForShadow nil
emh_PrintPwrGndConnectivity nil
paramGlobalDefVal "0"
allowIllegalIdentifiers "yes"
amsVerilogHonorSmForLeaf nil
ossEscNameMapping t
allowNameCollisions "yes"
shortInstanceList ""
