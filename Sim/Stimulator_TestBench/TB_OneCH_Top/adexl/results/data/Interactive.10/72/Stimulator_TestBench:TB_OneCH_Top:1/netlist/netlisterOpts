ifdefLanguageExtensions nil
allowDeviantBuses "yes"
forceCleanTempDirForShadow nil
emh_PrintPwrGndConnectivity nil
vlogSupply0Sigs ""
ossEscNameMapping t
useDefparam nil
allowNameCollisions "yes"
shortInstanceList ""
allowIllegalIdentifiers "yes"
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vdde!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd3!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" ""))
amsVerilogHonorSmForLeaf nil
splitNetlistFormat nil
dspfFile nil
termDirectionMismatch "ignore"
emh_printPhysicalInst nil
allowSparseBuses "yes"
print_control_vars t
modifyParamScope "no"
includeInstCdfParams nil
useUselibForSpice nil
paramGlobalDefVal "0"
amsScalarInstances t
templateFile ""
emh_digNetlistFile "digital.v"
emh_macroLibList ""
runNProcForSch nil
instClashFormat "%b_instclash"
useSpectreInfo "spectre veriloga spice"
netClashFormat "%b_netclash"
amsLSB_MSB nil
includeFiles "disciplines.vams userDisciplines.vams"
termMismatch "ignore"
preferMEOverImplicit t
hnlVerilogTermSyncUp nil
paramDefVals ""
initFile ""
updateShadow nil
enablePkgImport nil
unquoteNumbers t
ignorePrintNettype nil
dnaAssemblerWaitTime 3600
emh_maskLayoutView t
amsPortConnectionByNameOrOrder "name"
aliasInstFormat "ams_alias_inst_%i"
emh_printEmptySubckt t
amsTempDirForShadows ""
amsExpScalingFactor "no"
amsExcludeParams ""
headerText "none"
verboseShadowLog nil
createSpectreCktForExtracted nil
templateScript ""
checkForMissingShadows nil
unlAnalogOnly ""
emh_phyCell ""
useFileUselib t
iterInstExpFormat "%b_%i"
netlistMaxWarn ""
emh_DigitalInstList nil
amsDefinitionViews "symbol schematic extracted"
netlistMaxWarn2331 3
allDspfFiles nil
useEffectiveCDF nil
upgradeMsgSevWarn ""
amsVerbose nil
amsmaxErrors "50"
amsTraverseConfigForTextViews t
vlogSupply1Sigs ""
unlPortDrill ""
useRunDirNetlistsOnly t
vlogGroundSigs "gnd!"
desVarsToBeNetlistedAsInt ""
upgradeMsgSevError ""
netlistNoWarn ""
