allowSparseBuses "yes"
print_control_vars t
includeFiles "disciplines.vams userDisciplines.vams"
includeInstCdfParams nil
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vdde!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd3!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" ""))
paramDefVals ""
initFile ""
splitNetlistFormat nil
emh_printPhysicalInst nil
vlogSupply0Sigs ""
ossEscNameMapping t
allowNameCollisions "yes"
shortInstanceList ""
paramGlobalDefVal "0"
allowIllegalIdentifiers "yes"
amsVerilogHonorSmForLeaf nil
allowDeviantBuses "yes"
forceCleanTempDirForShadow nil
emh_PrintPwrGndConnectivity nil
dspfFile nil
termDirectionMismatch "ignore"
updateShadow nil
enablePkgImport nil
unquoteNumbers t
ignorePrintNettype nil
netClashFormat "%b_netclash"
amsLSB_MSB nil
preferMEOverImplicit t
modifyParamScope "no"
hnlVerilogTermSyncUp nil
ifdefLanguageExtensions nil
emh_macroLibList ""
runNProcForSch nil
instClashFormat "%b_instclash"
useSpectreInfo "spectre veriloga spice"
useDefparam nil
termMismatch "ignore"
useUselibForSpice nil
amsScalarInstances t
templateFile ""
emh_digNetlistFile "digital.v"
templateScript ""
checkForMissingShadows nil
unlAnalogOnly ""
emh_phyCell ""
headerText "none"
verboseShadowLog nil
createSpectreCktForExtracted nil
aliasInstFormat "ams_alias_inst_%i"
emh_printEmptySubckt t
amsTempDirForShadows ""
amsExpScalingFactor "no"
amsExcludeParams ""
dnaAssemblerWaitTime 3600
emh_maskLayoutView t
amsPortConnectionByNameOrOrder "name"
desVarsToBeNetlistedAsInt ""
upgradeMsgSevError ""
netlistNoWarn ""
useEffectiveCDF nil
upgradeMsgSevWarn ""
amsVerbose nil
amsmaxErrors "50"
amsTraverseConfigForTextViews t
unlPortDrill ""
useRunDirNetlistsOnly t
vlogGroundSigs "gnd!"
amsDefinitionViews "symbol schematic extracted"
netlistMaxWarn2331 3
allDspfFiles nil
useFileUselib t
iterInstExpFormat "%b_%i"
netlistMaxWarn ""
vlogSupply1Sigs ""
emh_DigitalInstList nil
