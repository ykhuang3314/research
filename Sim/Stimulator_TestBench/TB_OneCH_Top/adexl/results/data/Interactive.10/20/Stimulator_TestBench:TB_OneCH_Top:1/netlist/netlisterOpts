emh_macroLibList ""
runNProcForSch nil
instClashFormat "%b_instclash"
useSpectreInfo "spectre veriloga spice"
useUselibForSpice nil
amsScalarInstances t
emh_digNetlistFile "digital.v"
updateShadow nil
enablePkgImport nil
unquoteNumbers t
ignorePrintNettype nil
netClashFormat "%b_netclash"
amsLSB_MSB nil
preferMEOverImplicit t
ossEscNameMapping t
useRunDirNetlistsOnly t
allowNameCollisions "yes"
shortInstanceList ""
allowIllegalIdentifiers "yes"
amsVerilogHonorSmForLeaf nil
allDspfFiles nil
allowDeviantBuses "yes"
forceCleanTempDirForShadow nil
emh_PrintPwrGndConnectivity nil
allowSparseBuses "yes"
print_control_vars t
includeInstCdfParams nil
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vdde!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd3!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" ""))
splitNetlistFormat nil
emh_printPhysicalInst nil
vlogSupply0Sigs ""
iterInstExpFormat "%b_%i"
vlogGroundSigs "gnd!"
paramGlobalDefVal "0"
amsDefinitionViews "symbol schematic extracted"
netlistMaxWarn2331 3
useFileUselib t
netlistMaxWarn ""
templateFile ""
termMismatch "ignore"
vlogSupply1Sigs ""
emh_DigitalInstList nil
includeFiles "disciplines.vams userDisciplines.vams"
desVarsToBeNetlistedAsInt ""
unlPortDrill ""
netlistNoWarn ""
paramDefVals ""
initFile ""
useEffectiveCDF nil
upgradeMsgSevError ""
upgradeMsgSevWarn ""
amsVerbose nil
hnlVerilogTermSyncUp nil
amsmaxErrors "50"
amsTraverseConfigForTextViews t
ifdefLanguageExtensions nil
emh_printEmptySubckt t
amsTempDirForShadows ""
amsExpScalingFactor "no"
emh_maskLayoutView t
amsExcludeParams ""
useDefparam nil
dnaAssemblerWaitTime 3600
termDirectionMismatch "ignore"
aliasInstFormat "ams_alias_inst_%i"
amsPortConnectionByNameOrOrder "name"
dspfFile nil
templateScript ""
checkForMissingShadows nil
emh_phyCell ""
headerText "none"
modifyParamScope "no"
verboseShadowLog nil
createSpectreCktForExtracted nil
unlAnalogOnly ""
