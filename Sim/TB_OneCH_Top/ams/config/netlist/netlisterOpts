unquoteNumbers t
amsLSB_MSB nil
emh_macroLibList ""
enablePkgImport nil
dnaAssemblerWaitTime 3600
templateScript ""
amsScalarInstances t
amsVerilogHonorSmForLeaf nil
amsmaxErrors "50"
emh_phyCell ""
useEffectiveCDF nil
dspfFile nil
checkForMissingShadows nil
createSpectreCktForExtracted nil
allDspfFiles nil
amsExpScalingFactor "no"
updateShadow nil
amsTempDirForShadows ""
initFile ""
useRunDirNetlistsOnly t
netClashFormat "%b_netclash"
splitNetlistFormat nil
vlogGroundSigs "gnd!"
instClashFormat "%b_instclash"
amsVerbose nil
forceCleanTempDirForShadow nil
print_control_vars t
netlistMaxWarn2331 3
includeInstCdfParams nil
vlogSupply1Sigs ""
vlogSupply0Sigs ""
amsDefinitionViews "symbol schematic extracted"
netlistMaxWarn ""
ossEscNameMapping t
paramDefVals ""
upgradeMsgSevWarn ""
templateFile ""
preferMEOverImplicit t
allowSparseBuses "yes"
unlPortDrill ""
netlistNoWarn ""
amsTraverseConfigForTextViews t
hnlVerilogTermSyncUp nil
paramGlobalDefVal "0"
allowDeviantBuses "yes"
termDirectionMismatch "ignore"
aliasInstFormat "ams_alias_inst_%i"
useDefparam nil
allowNameCollisions "yes"
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdde!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd3!" "CDBA" "wire" "" "NO" "F" "wire" ""))
ignorePrintNettype nil
emh_digNetlistFile "digital.v"
iterInstExpFormat "%b_%i"
allowIllegalIdentifiers "yes"
upgradeMsgSevError ""
includeFiles "disciplines.vams userDisciplines.vams"
amsExcludeParams ""
unlAnalogOnly ""
emh_maskLayoutView t
modifyParamScope "no"
shortInstanceList ""
amsPortConnectionByNameOrOrder "name"
emh_DigitalInstList nil
ifdefLanguageExtensions nil
termMismatch "ignore"
useUselibForSpice nil
runNProcForSch nil
useFileUselib t
emh_PrintPwrGndConnectivity nil
emh_printEmptySubckt t
verboseShadowLog nil
emh_printPhysicalInst nil
desVarsToBeNetlistedAsInt ""
headerText "none"
useSpectreInfo "spectre veriloga spice"
