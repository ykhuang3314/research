instClashFormat "%b_instclash"
emh_printEmptySubckt t
aliasInstFormat "ams_alias_inst_%i"
emh_printPhysicalInst nil
vlogSupply1Sigs ""
iterInstExpFormat "%b_%i"
vlogGroundSigs "gnd!"
ossEscNameMapping t
termDirectionMismatch "ignore"
emh_DigitalInstList nil
amsExcludeParams ""
preferMEOverImplicit t
headerText "none"
runNProcForSch nil
emh_PrintPwrGndConnectivity nil
unquoteNumbers t
checkForMissingShadows nil
dspfFile nil
initFile ""
useEffectiveCDF nil
allowSparseBuses "yes"
createSpectreCktForExtracted nil
amsVerilogHonorSmForLeaf nil
dnaAssemblerWaitTime 3600
amsTempDirForShadows ""
includeInstCdfParams nil
allowDeviantBuses "yes"
allowIllegalIdentifiers "yes"
emh_macroLibList ""
enablePkgImport nil
amsDefinitionViews "symbol schematic extracted"
allowNameCollisions "yes"
netClashFormat "%b_netclash"
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" ""))
termMismatch "ignore"
emh_phyCell ""
shortInstanceList ""
netlistMaxWarn2331 3
templateFile ""
amsPortConnectionByNameOrOrder "name"
netlistMaxWarn ""
ifdefLanguageExtensions nil
useFileUselib t
splitNetlistFormat nil
allDspfFiles nil
amsLSB_MSB nil
useUselibForSpice nil
updateShadow nil
modifyParamScope "no"
amsScalarInstances t
amsmaxErrors "50"
forceCleanTempDirForShadow nil
includeFiles "disciplines.vams userDisciplines.vams"
emh_maskLayoutView t
templateScript ""
ignorePrintNettype nil
emh_digNetlistFile "digital.v"
hnlVerilogTermSyncUp nil
useDefparam nil
upgradeMsgSevError ""
amsTraverseConfigForTextViews t
unlAnalogOnly ""
amsExpScalingFactor "no"
upgradeMsgSevWarn ""
verboseShadowLog nil
paramGlobalDefVal "0"
useRunDirNetlistsOnly t
desVarsToBeNetlistedAsInt ""
unlPortDrill ""
paramDefVals ""
print_control_vars t
netlistNoWarn ""
amsVerbose nil
useSpectreInfo "spectre veriloga spice"
vlogSupply0Sigs ""
