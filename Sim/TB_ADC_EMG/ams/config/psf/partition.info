( global ( resolution_type basic ) )

( net TB_ADC_EMG.net2 TB_ADC_EMG.net2 analog/mixed electrical )
( net TB_ADC_EMG.I9.Enable TB_ADC_EMG.net2 digital/mixed logic )

( net TB_ADC_EMG.I9.RESET TB_ADC_EMG.I9.RESET digital/mixed logic )
( net cds_globals.\gnd!  TB_ADC_EMG.I9.RESET analog/mixed electrical )
( net TB_ADC_EMG.I1.Vin15 TB_ADC_EMG.I9.RESET analog/mixed electrical )
( net TB_ADC_EMG.I1.Vin14 TB_ADC_EMG.I9.RESET analog/mixed electrical )
( net TB_ADC_EMG.I1.Vin13 TB_ADC_EMG.I9.RESET analog/mixed electrical )
( net TB_ADC_EMG.I1.Vin12 TB_ADC_EMG.I9.RESET analog/mixed electrical )
( net TB_ADC_EMG.I1.Vin11 TB_ADC_EMG.I9.RESET analog/mixed electrical )
( net TB_ADC_EMG.I1.Vin10 TB_ADC_EMG.I9.RESET analog/mixed electrical )
( net TB_ADC_EMG.I1.Vin9 TB_ADC_EMG.I9.RESET analog/mixed electrical )
( net TB_ADC_EMG.I1.Vin8 TB_ADC_EMG.I9.RESET analog/mixed electrical )
( net TB_ADC_EMG.I1.Vin7 TB_ADC_EMG.I9.RESET analog/mixed electrical )
( net TB_ADC_EMG.I1.Vin6 TB_ADC_EMG.I9.RESET analog/mixed electrical )
( net TB_ADC_EMG.I1.Vin5 TB_ADC_EMG.I9.RESET analog/mixed electrical )
( net TB_ADC_EMG.I1.Vin4 TB_ADC_EMG.I9.RESET analog/mixed electrical )
( net TB_ADC_EMG.I1.Vin3 TB_ADC_EMG.I9.RESET analog/mixed electrical )
( net TB_ADC_EMG.I1.Vin2 TB_ADC_EMG.I9.RESET analog/mixed electrical )
( net TB_ADC_EMG.I1.Vin1 TB_ADC_EMG.I9.RESET analog/mixed electrical )

( net TB_ADC_EMG.CLK_EMG TB_ADC_EMG.CLK_EMG digital logic )
( net TB_ADC_EMG.I2.Clk TB_ADC_EMG.CLK_EMG digital logic )
( net TB_ADC_EMG.I9.CLK_EMG TB_ADC_EMG.CLK_EMG digital logic )

( net TB_ADC_EMG.EN_ADC_EMG TB_ADC_EMG.EN_ADC_EMG digital logic )
( net TB_ADC_EMG.I2.En TB_ADC_EMG.EN_ADC_EMG digital logic )
( net TB_ADC_EMG.I9.EN_ADC_EMG TB_ADC_EMG.EN_ADC_EMG digital logic )

( net TB_ADC_EMG.CH_SEL_EMG TB_ADC_EMG.CH_SEL_EMG digital logic )
( net TB_ADC_EMG.I1.sel TB_ADC_EMG.CH_SEL_EMG digital logic )
( net TB_ADC_EMG.I9.CH_SEL_EMG TB_ADC_EMG.CH_SEL_EMG digital logic )

( net TB_ADC_EMG.START_EMG TB_ADC_EMG.START_EMG digital logic )
( net TB_ADC_EMG.I2.Start TB_ADC_EMG.START_EMG digital logic )
( net TB_ADC_EMG.I9.START_EMG TB_ADC_EMG.START_EMG digital logic )

( net TB_ADC_EMG.MUX_CLK_EMG TB_ADC_EMG.MUX_CLK_EMG digital logic )
( net TB_ADC_EMG.I1.Clk TB_ADC_EMG.MUX_CLK_EMG digital logic )
( net TB_ADC_EMG.I9.MUX_CLK_EMG TB_ADC_EMG.MUX_CLK_EMG digital logic )

( net TB_ADC_EMG.I9.cnt_conv TB_ADC_EMG.I9.cnt_conv digital logic )

( net TB_ADC_EMG.I9.cnt_ch TB_ADC_EMG.I9.cnt_ch digital logic )

( net TB_ADC_EMG.I9.clk_rate TB_ADC_EMG.I9.clk_rate digital logic (type rnm) )

( net TB_ADC_EMG.I9.clk_period TB_ADC_EMG.I9.clk_period digital logic (type rnm) )

( net TB_ADC_EMG.I9.mux_clk_rate TB_ADC_EMG.I9.mux_clk_rate digital logic (type rnm) )

( net TB_ADC_EMG.I9.mux_clk_period TB_ADC_EMG.I9.mux_clk_period digital logic (type rnm) )

( net TB_ADC_EMG.out_mux TB_ADC_EMG.out_mux analog/mixed electrical )
( net TB_ADC_EMG.I2.Vin TB_ADC_EMG.out_mux digital/mixed logic (type rnm) )
( net TB_ADC_EMG.I1.Vout TB_ADC_EMG.out_mux analog/mixed electrical )

( net TB_ADC_EMG.vin0 TB_ADC_EMG.vin0 analog electrical )
( net TB_ADC_EMG.I1.Vin0 TB_ADC_EMG.vin0 analog electrical )

( net TB_ADC_EMG.vdda TB_ADC_EMG.vdda analog/mixed electrical )
( net TB_ADC_EMG.I21.Vdda TB_ADC_EMG.vdda analog/mixed electrical )
( net TB_ADC_EMG.I2.Vdda TB_ADC_EMG.vdda digital/mixed logic )
( net TB_ADC_EMG.I1.Vdda TB_ADC_EMG.vdda analog/mixed electrical )

( net TB_ADC_EMG.vssa TB_ADC_EMG.vssa analog electrical )
( net TB_ADC_EMG.I21.Vssa TB_ADC_EMG.vssa analog electrical )
( net TB_ADC_EMG.I2.Vssa TB_ADC_EMG.vssa analog electrical )
( net TB_ADC_EMG.I1.Vssa TB_ADC_EMG.vssa analog electrical )

( net TB_ADC_EMG.vsub TB_ADC_EMG.vsub analog/mixed electrical )
( net TB_ADC_EMG.I2.Vsub TB_ADC_EMG.vsub digital/mixed logic )
( net TB_ADC_EMG.I1.Vsub TB_ADC_EMG.vsub digital/mixed logic )

( net TB_ADC_EMG.vddd TB_ADC_EMG.vddd analog electrical )
( net TB_ADC_EMG.I2.Vddd TB_ADC_EMG.vddd analog electrical )
( net TB_ADC_EMG.I1.Vddd TB_ADC_EMG.vddd analog electrical )

( net TB_ADC_EMG.vssd TB_ADC_EMG.vssd analog electrical )
( net TB_ADC_EMG.I2.Vssd TB_ADC_EMG.vssd analog electrical )
( net TB_ADC_EMG.I1.Vssd TB_ADC_EMG.vssd analog electrical )

( net TB_ADC_EMG.I1.sel_base10 TB_ADC_EMG.I1.sel_base10 digital logic )

( net TB_ADC_EMG.Dout[11] TB_ADC_EMG.Dout[11] analog/mixed electrical )
( net TB_ADC_EMG.I21.Din[11] TB_ADC_EMG.Dout[11] analog/mixed electrical )
( net TB_ADC_EMG.I2.Dout[11] TB_ADC_EMG.Dout[11] digital/mixed logic )

( net TB_ADC_EMG.Dout[10] TB_ADC_EMG.Dout[10] analog/mixed electrical )
( net TB_ADC_EMG.I21.Din[10] TB_ADC_EMG.Dout[10] analog/mixed electrical )
( net TB_ADC_EMG.I2.Dout[10] TB_ADC_EMG.Dout[10] digital/mixed logic )

( net TB_ADC_EMG.Dout[9] TB_ADC_EMG.Dout[9] analog/mixed electrical )
( net TB_ADC_EMG.I21.Din[9] TB_ADC_EMG.Dout[9] analog/mixed electrical )
( net TB_ADC_EMG.I2.Dout[9] TB_ADC_EMG.Dout[9] digital/mixed logic )

( net TB_ADC_EMG.Dout[8] TB_ADC_EMG.Dout[8] analog/mixed electrical )
( net TB_ADC_EMG.I21.Din[8] TB_ADC_EMG.Dout[8] analog/mixed electrical )
( net TB_ADC_EMG.I2.Dout[8] TB_ADC_EMG.Dout[8] digital/mixed logic )

( net TB_ADC_EMG.Dout[7] TB_ADC_EMG.Dout[7] analog/mixed electrical )
( net TB_ADC_EMG.I21.Din[7] TB_ADC_EMG.Dout[7] analog/mixed electrical )
( net TB_ADC_EMG.I2.Dout[7] TB_ADC_EMG.Dout[7] digital/mixed logic )

( net TB_ADC_EMG.Dout[6] TB_ADC_EMG.Dout[6] analog/mixed electrical )
( net TB_ADC_EMG.I21.Din[6] TB_ADC_EMG.Dout[6] analog/mixed electrical )
( net TB_ADC_EMG.I2.Dout[6] TB_ADC_EMG.Dout[6] digital/mixed logic )

( net TB_ADC_EMG.Dout[5] TB_ADC_EMG.Dout[5] analog/mixed electrical )
( net TB_ADC_EMG.I21.Din[5] TB_ADC_EMG.Dout[5] analog/mixed electrical )
( net TB_ADC_EMG.I2.Dout[5] TB_ADC_EMG.Dout[5] digital/mixed logic )

( net TB_ADC_EMG.Dout[4] TB_ADC_EMG.Dout[4] analog/mixed electrical )
( net TB_ADC_EMG.I21.Din[4] TB_ADC_EMG.Dout[4] analog/mixed electrical )
( net TB_ADC_EMG.I2.Dout[4] TB_ADC_EMG.Dout[4] digital/mixed logic )

( net TB_ADC_EMG.Dout[3] TB_ADC_EMG.Dout[3] analog/mixed electrical )
( net TB_ADC_EMG.I21.Din[3] TB_ADC_EMG.Dout[3] analog/mixed electrical )
( net TB_ADC_EMG.I2.Dout[3] TB_ADC_EMG.Dout[3] digital/mixed logic )

( net TB_ADC_EMG.Dout[2] TB_ADC_EMG.Dout[2] analog/mixed electrical )
( net TB_ADC_EMG.I21.Din[2] TB_ADC_EMG.Dout[2] analog/mixed electrical )
( net TB_ADC_EMG.I2.Dout[2] TB_ADC_EMG.Dout[2] digital/mixed logic )

( net TB_ADC_EMG.Dout[1] TB_ADC_EMG.Dout[1] analog/mixed electrical )
( net TB_ADC_EMG.I21.Din[1] TB_ADC_EMG.Dout[1] analog/mixed electrical )
( net TB_ADC_EMG.I2.Dout[1] TB_ADC_EMG.Dout[1] digital/mixed logic )

( net TB_ADC_EMG.Dout[0] TB_ADC_EMG.Dout[0] analog/mixed electrical )
( net TB_ADC_EMG.I21.Din[0] TB_ADC_EMG.Dout[0] analog/mixed electrical )
( net TB_ADC_EMG.I2.Dout[0] TB_ADC_EMG.Dout[0] digital/mixed logic )

( net TB_ADC_EMG.EoC TB_ADC_EMG.EoC digital logic )
( net TB_ADC_EMG.I2.EoC TB_ADC_EMG.EoC digital logic )

( net TB_ADC_EMG.vrefh TB_ADC_EMG.vrefh analog/mixed electrical )
( net TB_ADC_EMG.I2.VrefH TB_ADC_EMG.vrefh digital/mixed logic (type rnm) )

( net TB_ADC_EMG.vrefl TB_ADC_EMG.vrefl analog/mixed electrical )
( net TB_ADC_EMG.I2.VrefL TB_ADC_EMG.vrefl digital/mixed logic (type rnm) )

( net TB_ADC_EMG.net4 TB_ADC_EMG.net4 analog electrical )
( net TB_ADC_EMG.I2.Ibias TB_ADC_EMG.net4 analog electrical )

( net TB_ADC_EMG.I2.Vdds TB_ADC_EMG.I2.Vdds analog electrical )

( net TB_ADC_EMG.I2.count TB_ADC_EMG.I2.count digital logic )

( net TB_ADC_EMG.I2.end_count TB_ADC_EMG.I2.end_count digital logic )

( net TB_ADC_EMG.I2.Vhold TB_ADC_EMG.I2.Vhold digital logic (type rnm) )

( net TB_ADC_EMG.I2.fvalue TB_ADC_EMG.I2.fvalue digital logic (type rnm) )

( net TB_ADC_EMG.I2.NaN TB_ADC_EMG.I2.NaN digital logic (type rnm) )

( net TB_ADC_EMG.out_dac TB_ADC_EMG.out_dac analog electrical )
( net TB_ADC_EMG.I21.Vout TB_ADC_EMG.out_dac analog electrical )

( net TB_ADC_EMG.DAC_CLK TB_ADC_EMG.DAC_CLK analog electrical )
( net TB_ADC_EMG.I21.Clk TB_ADC_EMG.DAC_CLK analog electrical )

( net TB_ADC_EMG.I21.aout TB_ADC_EMG.I21.aout analog None )

( net TB_ADC_EMG.I21.weight TB_ADC_EMG.I21.weight analog None )

( connect
   connectLib.E2L_2:module
   TB_ADC_EMG.net2
   electrical
   analog
   (
    ( TB_ADC_EMG.I9.Enable logic digital )
   )
   "connect E2L_2 merged"
   ( (vsup 1.800000000000000) (vthi 1.200000000000000) (vtlo 0.600000000000000) (tr 0.000000000200000) )
)
( connect
   connectLib.E2L_2:module
   cds_globals.\gnd! 
   electrical
   analog
   (
    ( TB_ADC_EMG.I9.RESET logic digital )
   )
   "connect E2L_2 merged"
   ( (vsup 1.800000000000000) (vthi 1.200000000000000) (vtlo 0.600000000000000) (tr 0.000000000200000) )
)
( connect
   connectLib.Bidir_2:module
   TB_ADC_EMG.vsub
   electrical
   analog
   (
    ( TB_ADC_EMG.I1.Vsub logic digital )
    ( TB_ADC_EMG.I2.Vsub logic digital )
   )
   "connect Bidir_2 merged"
   ( (vsup 1.800000000000000) (vthi 1.200000000000000) (vtlo 0.600000000000000) (vlo 0) (tr 0.000000000200000) (tf 0.000000000200000) (rlo 200) (rhi 200) (rx 40) (rz 10000000.000000000000000) (r_SUPPLY 4) (r_PULL 1500.000000000000000) (r_LARGE 9000.000000000000000) (r_WEAK 55000.000000000000000) (r_MEDIUM 320000.000000000000000) (r_SMALL 1900000.000000000000000) )
)
( connect
   connectLib.Bidir_2:module
   TB_ADC_EMG.vdda
   electrical
   analog
   (
    ( TB_ADC_EMG.I2.Vdda logic digital )
   )
   "connect Bidir_2 merged"
   ( (vsup 1.800000000000000) (vthi 1.200000000000000) (vtlo 0.600000000000000) (vlo 0) (tr 0.000000000200000) (tf 0.000000000200000) (rlo 200) (rhi 200) (rx 40) (rz 10000000.000000000000000) (r_SUPPLY 4) (r_PULL 1500.000000000000000) (r_LARGE 9000.000000000000000) (r_WEAK 55000.000000000000000) (r_MEDIUM 320000.000000000000000) (r_SMALL 1900000.000000000000000) )
)
( connect
   connectLib.L2E_2:module
   TB_ADC_EMG.Dout[11]
   electrical
   analog
   (
    ( TB_ADC_EMG.I2.Dout[11] logic digital )
   )
   "connect L2E_2 merged"
   ( (vsup 1.800000000000000) (vlo 0) (tr 0.000000000200000) (tf 0.000000000200000) (rlo 200) (rhi 200) (rx 40) (rz 10000000.000000000000000) (r_SUPPLY 4) (r_PULL 1500.000000000000000) (r_LARGE 9000.000000000000000) (r_WEAK 55000.000000000000000) (r_MEDIUM 320000.000000000000000) (r_SMALL 1900000.000000000000000) )
)
( connect
   connectLib.L2E_2:module
   TB_ADC_EMG.Dout[10]
   electrical
   analog
   (
    ( TB_ADC_EMG.I2.Dout[10] logic digital )
   )
   "connect L2E_2 merged"
   ( (vsup 1.800000000000000) (vlo 0) (tr 0.000000000200000) (tf 0.000000000200000) (rlo 200) (rhi 200) (rx 40) (rz 10000000.000000000000000) (r_SUPPLY 4) (r_PULL 1500.000000000000000) (r_LARGE 9000.000000000000000) (r_WEAK 55000.000000000000000) (r_MEDIUM 320000.000000000000000) (r_SMALL 1900000.000000000000000) )
)
( connect
   connectLib.L2E_2:module
   TB_ADC_EMG.Dout[9]
   electrical
   analog
   (
    ( TB_ADC_EMG.I2.Dout[9] logic digital )
   )
   "connect L2E_2 merged"
   ( (vsup 1.800000000000000) (vlo 0) (tr 0.000000000200000) (tf 0.000000000200000) (rlo 200) (rhi 200) (rx 40) (rz 10000000.000000000000000) (r_SUPPLY 4) (r_PULL 1500.000000000000000) (r_LARGE 9000.000000000000000) (r_WEAK 55000.000000000000000) (r_MEDIUM 320000.000000000000000) (r_SMALL 1900000.000000000000000) )
)
( connect
   connectLib.L2E_2:module
   TB_ADC_EMG.Dout[8]
   electrical
   analog
   (
    ( TB_ADC_EMG.I2.Dout[8] logic digital )
   )
   "connect L2E_2 merged"
   ( (vsup 1.800000000000000) (vlo 0) (tr 0.000000000200000) (tf 0.000000000200000) (rlo 200) (rhi 200) (rx 40) (rz 10000000.000000000000000) (r_SUPPLY 4) (r_PULL 1500.000000000000000) (r_LARGE 9000.000000000000000) (r_WEAK 55000.000000000000000) (r_MEDIUM 320000.000000000000000) (r_SMALL 1900000.000000000000000) )
)
( connect
   connectLib.L2E_2:module
   TB_ADC_EMG.Dout[7]
   electrical
   analog
   (
    ( TB_ADC_EMG.I2.Dout[7] logic digital )
   )
   "connect L2E_2 merged"
   ( (vsup 1.800000000000000) (vlo 0) (tr 0.000000000200000) (tf 0.000000000200000) (rlo 200) (rhi 200) (rx 40) (rz 10000000.000000000000000) (r_SUPPLY 4) (r_PULL 1500.000000000000000) (r_LARGE 9000.000000000000000) (r_WEAK 55000.000000000000000) (r_MEDIUM 320000.000000000000000) (r_SMALL 1900000.000000000000000) )
)
( connect
   connectLib.L2E_2:module
   TB_ADC_EMG.Dout[6]
   electrical
   analog
   (
    ( TB_ADC_EMG.I2.Dout[6] logic digital )
   )
   "connect L2E_2 merged"
   ( (vsup 1.800000000000000) (vlo 0) (tr 0.000000000200000) (tf 0.000000000200000) (rlo 200) (rhi 200) (rx 40) (rz 10000000.000000000000000) (r_SUPPLY 4) (r_PULL 1500.000000000000000) (r_LARGE 9000.000000000000000) (r_WEAK 55000.000000000000000) (r_MEDIUM 320000.000000000000000) (r_SMALL 1900000.000000000000000) )
)
( connect
   connectLib.L2E_2:module
   TB_ADC_EMG.Dout[5]
   electrical
   analog
   (
    ( TB_ADC_EMG.I2.Dout[5] logic digital )
   )
   "connect L2E_2 merged"
   ( (vsup 1.800000000000000) (vlo 0) (tr 0.000000000200000) (tf 0.000000000200000) (rlo 200) (rhi 200) (rx 40) (rz 10000000.000000000000000) (r_SUPPLY 4) (r_PULL 1500.000000000000000) (r_LARGE 9000.000000000000000) (r_WEAK 55000.000000000000000) (r_MEDIUM 320000.000000000000000) (r_SMALL 1900000.000000000000000) )
)
( connect
   connectLib.L2E_2:module
   TB_ADC_EMG.Dout[4]
   electrical
   analog
   (
    ( TB_ADC_EMG.I2.Dout[4] logic digital )
   )
   "connect L2E_2 merged"
   ( (vsup 1.800000000000000) (vlo 0) (tr 0.000000000200000) (tf 0.000000000200000) (rlo 200) (rhi 200) (rx 40) (rz 10000000.000000000000000) (r_SUPPLY 4) (r_PULL 1500.000000000000000) (r_LARGE 9000.000000000000000) (r_WEAK 55000.000000000000000) (r_MEDIUM 320000.000000000000000) (r_SMALL 1900000.000000000000000) )
)
( connect
   connectLib.L2E_2:module
   TB_ADC_EMG.Dout[3]
   electrical
   analog
   (
    ( TB_ADC_EMG.I2.Dout[3] logic digital )
   )
   "connect L2E_2 merged"
   ( (vsup 1.800000000000000) (vlo 0) (tr 0.000000000200000) (tf 0.000000000200000) (rlo 200) (rhi 200) (rx 40) (rz 10000000.000000000000000) (r_SUPPLY 4) (r_PULL 1500.000000000000000) (r_LARGE 9000.000000000000000) (r_WEAK 55000.000000000000000) (r_MEDIUM 320000.000000000000000) (r_SMALL 1900000.000000000000000) )
)
( connect
   connectLib.L2E_2:module
   TB_ADC_EMG.Dout[2]
   electrical
   analog
   (
    ( TB_ADC_EMG.I2.Dout[2] logic digital )
   )
   "connect L2E_2 merged"
   ( (vsup 1.800000000000000) (vlo 0) (tr 0.000000000200000) (tf 0.000000000200000) (rlo 200) (rhi 200) (rx 40) (rz 10000000.000000000000000) (r_SUPPLY 4) (r_PULL 1500.000000000000000) (r_LARGE 9000.000000000000000) (r_WEAK 55000.000000000000000) (r_MEDIUM 320000.000000000000000) (r_SMALL 1900000.000000000000000) )
)
( connect
   connectLib.L2E_2:module
   TB_ADC_EMG.Dout[1]
   electrical
   analog
   (
    ( TB_ADC_EMG.I2.Dout[1] logic digital )
   )
   "connect L2E_2 merged"
   ( (vsup 1.800000000000000) (vlo 0) (tr 0.000000000200000) (tf 0.000000000200000) (rlo 200) (rhi 200) (rx 40) (rz 10000000.000000000000000) (r_SUPPLY 4) (r_PULL 1500.000000000000000) (r_LARGE 9000.000000000000000) (r_WEAK 55000.000000000000000) (r_MEDIUM 320000.000000000000000) (r_SMALL 1900000.000000000000000) )
)
( connect
   connectLib.L2E_2:module
   TB_ADC_EMG.Dout[0]
   electrical
   analog
   (
    ( TB_ADC_EMG.I2.Dout[0] logic digital )
   )
   "connect L2E_2 merged"
   ( (vsup 1.800000000000000) (vlo 0) (tr 0.000000000200000) (tf 0.000000000200000) (rlo 200) (rhi 200) (rx 40) (rz 10000000.000000000000000) (r_SUPPLY 4) (r_PULL 1500.000000000000000) (r_LARGE 9000.000000000000000) (r_WEAK 55000.000000000000000) (r_MEDIUM 320000.000000000000000) (r_SMALL 1900000.000000000000000) )
)
( connect
   connectLib.E2R:module
   TB_ADC_EMG.out_mux
   electrical
   analog
   (
    ( TB_ADC_EMG.I2.Vin logic digital (type rnm) )
   )
   "connect E2R merged"
   ( (vdelta (1.800000000000000 / 64)) (vtol ((1.800000000000000 / 64) / 4)) (ttol (0.000000000200000 / 20)) )
)
( connect
   connectLib.E2R:module
   TB_ADC_EMG.vrefh
   electrical
   analog
   (
    ( TB_ADC_EMG.I2.VrefH logic digital (type rnm) )
   )
   "connect E2R merged"
   ( (vdelta (1.800000000000000 / 64)) (vtol ((1.800000000000000 / 64) / 4)) (ttol (0.000000000200000 / 20)) )
)
( connect
   connectLib.E2R:module
   TB_ADC_EMG.vrefl
   electrical
   analog
   (
    ( TB_ADC_EMG.I2.VrefL logic digital (type rnm) )
   )
   "connect E2R merged"
   ( (vdelta (1.800000000000000 / 64)) (vtol ((1.800000000000000 / 64) / 4)) (ttol (0.000000000200000 / 20)) )
)
(instance TB_ADC_EMG.I9 dmixed (type rnm))
(instance TB_ADC_EMG.I1 mixed)
(instance TB_ADC_EMG.I2 mixed/dmixed (type rnm))
(instance TB_ADC_EMG.I21 analog)
(instance TB_ADC_EMG.V0 analog)
(instance TB_ADC_EMG.I11 analog)
(instance TB_ADC_EMG.V7 analog)
(instance TB_ADC_EMG.V6 analog)
(instance TB_ADC_EMG.V5 analog)
(instance TB_ADC_EMG.V4 analog)
(instance TB_ADC_EMG.V1 analog)
(instance TB_ADC_EMG.V2 analog)
(instance TB_ADC_EMG.V3 analog)
(instance TB_ADC_EMG.V8 analog)
(instance TB_ADC_EMG.V9 analog)
(instance TB_ADC_EMG mixed/dmixed (type rnm))
(instance cds_globals analog)
