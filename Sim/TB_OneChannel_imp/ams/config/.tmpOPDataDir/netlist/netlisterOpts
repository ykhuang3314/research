unquoteNumbers t
templateFile ""
emh_maskLayoutView t
useEffectiveCDF nil
createSpectreCktForExtracted nil
ignorePrintNettype nil
emh_digNetlistFile "digital.v"
amsVerilogHonorSmForLeaf nil
upgradeMsgSevError ""
includeInstCdfParams nil
unlAnalogOnly ""
upgradeMsgSevWarn ""
amsmaxErrors "50"
amsDefinitionViews "symbol schematic extracted"
ifdefLanguageExtensions nil
unlPortDrill ""
modifyParamScope "no"
netClashFormat "%b_netclash"
print_control_vars t
netlistNoWarn ""
termDirectionMismatch "ignore"
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vdd3!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdde!" "CDBA" "wire" "" "NO" "F" "wire" ""))
instClashFormat "%b_instclash"
netlistMaxWarn2331 3
includeFiles "disciplines.vams userDisciplines.vams"
dspfFile nil
aliasInstFormat "ams_alias_inst_%i"
templateScript ""
useDefparam nil
netlistMaxWarn ""
paramGlobalDefVal "0"
iterInstExpFormat "%b_%i"
amsVerbose nil
ossEscNameMapping t
useRunDirNetlistsOnly t
termMismatch "ignore"
splitNetlistFormat nil
updateShadow nil
vlogSupply0Sigs ""
preferMEOverImplicit t
amsExpScalingFactor "no"
paramDefVals ""
forceCleanTempDirForShadow nil
checkForMissingShadows nil
dnaAssemblerWaitTime 3600
amsTempDirForShadows ""
vlogSupply1Sigs ""
amsTraverseConfigForTextViews t
headerText "none"
emh_macroLibList ""
desVarsToBeNetlistedAsInt ""
enablePkgImport nil
allDspfFiles nil
verboseShadowLog nil
vlogGroundSigs "gnd!"
emh_phyCell ""
useSpectreInfo "spectre veriloga spice"
allowDeviantBuses "yes"
shortInstanceList ""
emh_printEmptySubckt t
initFile ""
allowSparseBuses "yes"
amsPortConnectionByNameOrOrder "name"
emh_printPhysicalInst nil
useFileUselib t
emh_DigitalInstList nil
amsExcludeParams ""
amsLSB_MSB nil
allowNameCollisions "yes"
useUselibForSpice nil
amsScalarInstances t
allowIllegalIdentifiers "yes"
runNProcForSch nil
emh_PrintPwrGndConnectivity nil
