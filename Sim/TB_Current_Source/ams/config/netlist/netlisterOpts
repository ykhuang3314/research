useEffectiveCDF nil
ignorePrintNettype nil
emh_digNetlistFile "digital.v"
unquoteNumbers t
emh_maskLayoutView t
includeInstCdfParams nil
termDirectionMismatch "ignore"
vlogSupply1Sigs ""
createSpectreCktForExtracted nil
unlAnalogOnly ""
amsVerilogHonorSmForLeaf nil
upgradeMsgSevError ""
amsDefinitionViews "symbol schematic extracted"
headerText "none"
unlPortDrill ""
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vdda!" "CDBA" "wire" "" "NO" "F" "wire" ""))
upgradeMsgSevWarn ""
vlogGroundSigs "gnd!"
netClashFormat "%b_netclash"
print_control_vars t
netlistNoWarn ""
allowDeviantBuses "yes"
netlistMaxWarn2331 3
instClashFormat "%b_instclash"
termMismatch "ignore"
initFile ""
allowSparseBuses "yes"
netlistMaxWarn ""
aliasInstFormat "ams_alias_inst_%i"
ossEscNameMapping t
splitNetlistFormat nil
iterInstExpFormat "%b_%i"
dspfFile nil
preferMEOverImplicit t
allowNameCollisions "yes"
forceCleanTempDirForShadow nil
allowIllegalIdentifiers "yes"
updateShadow nil
allDspfFiles nil
templateFile ""
checkForMissingShadows nil
hnlVerilogTermSyncUp nil
dnaAssemblerWaitTime 3600
amsTraverseConfigForTextViews t
amsTempDirForShadows ""
amsmaxErrors "50"
desVarsToBeNetlistedAsInt ""
ifdefLanguageExtensions nil
emh_macroLibList ""
verboseShadowLog nil
enablePkgImport nil
modifyParamScope "no"
useSpectreInfo "spectre veriloga spice"
emh_phyCell ""
shortInstanceList ""
includeFiles "disciplines.vams userDisciplines.vams"
emh_printEmptySubckt t
amsPortConnectionByNameOrOrder "name"
useRunDirNetlistsOnly t
templateScript ""
emh_printPhysicalInst nil
useDefparam nil
paramGlobalDefVal "0"
amsVerbose nil
emh_DigitalInstList nil
useUselibForSpice nil
amsScalarInstances t
vlogSupply0Sigs ""
runNProcForSch nil
emh_PrintPwrGndConnectivity nil
amsExpScalingFactor "no"
paramDefVals ""
amsExcludeParams ""
amsLSB_MSB nil
useFileUselib t
