amsVerbose nil
ifdefLanguageExtensions nil
checkForMissingShadows nil
modifyParamScope "no"
hnlVerilogTermSyncUp nil
amsExpScalingFactor "no"
dnaAssemblerWaitTime 3600
amsTraverseConfigForTextViews t
amsTempDirForShadows ""
desVarsToBeNetlistedAsInt ""
allDspfFiles nil
emh_macroLibList ""
verboseShadowLog nil
enablePkgImport nil
templateScript ""
useSpectreInfo "spectre veriloga spice"
emh_phyCell ""
paramGlobalDefVal "0"
shortInstanceList ""
emh_printEmptySubckt t
amsPortConnectionByNameOrOrder "name"
emh_printPhysicalInst nil
vlogSupply0Sigs ""
paramDefVals ""
emh_DigitalInstList nil
includeFiles "disciplines.vams userDisciplines.vams"
useUselibForSpice nil
useRunDirNetlistsOnly t
amsScalarInstances t
runNProcForSch nil
emh_PrintPwrGndConnectivity nil
amsExcludeParams ""
useDefparam nil
amsLSB_MSB nil
useFileUselib t
useEffectiveCDF nil
ignorePrintNettype nil
emh_digNetlistFile "digital.v"
unquoteNumbers t
vlogGroundSigs "gnd!"
emh_maskLayoutView t
includeInstCdfParams nil
allowNameCollisions "yes"
createSpectreCktForExtracted nil
unlAnalogOnly ""
allowIllegalIdentifiers "yes"
amsVerilogHonorSmForLeaf nil
upgradeMsgSevError ""
amsDefinitionViews "symbol schematic extracted"
allowDeviantBuses "yes"
unlPortDrill ""
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" ""))
upgradeMsgSevWarn ""
allowSparseBuses "yes"
termDirectionMismatch "ignore"
vlogSupply1Sigs ""
netClashFormat "%b_netclash"
print_control_vars t
netlistNoWarn ""
netlistMaxWarn2331 3
headerText "none"
amsmaxErrors "50"
instClashFormat "%b_instclash"
dspfFile nil
netlistMaxWarn ""
aliasInstFormat "ams_alias_inst_%i"
ossEscNameMapping t
splitNetlistFormat nil
iterInstExpFormat "%b_%i"
templateFile ""
termMismatch "ignore"
preferMEOverImplicit t
initFile ""
forceCleanTempDirForShadow nil
updateShadow nil
