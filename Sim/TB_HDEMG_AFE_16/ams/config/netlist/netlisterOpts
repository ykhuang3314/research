verboseShadowLog nil
amsExpScalingFactor "no"
useDefparam nil
splitNetlistFormat nil
desVarsToBeNetlistedAsInt ""
allDspfFiles nil
amsVerbose nil
updateShadow nil
useRunDirNetlistsOnly t
includeFiles "disciplines.vams userDisciplines.vams"
useSpectreInfo "spectre veriloga spice"
forceCleanTempDirForShadow nil
templateScript ""
paramDefVals ""
netlistMaxWarn2331 3
hnlVerilogTermSyncUp nil
paramGlobalDefVal "0"
amsTraverseConfigForTextViews t
netlistMaxWarn ""
upgradeMsgSevWarn ""
useFileUselib t
vlogSupply0Sigs ""
unlPortDrill ""
amsLSB_MSB nil
print_control_vars t
netlistNoWarn ""
useUselibForSpice nil
amsScalarInstances t
modifyParamScope "no"
emh_maskLayoutView t
shortInstanceList ""
ignorePrintNettype nil
emh_digNetlistFile "digital.v"
upgradeMsgSevError ""
amsPortConnectionByNameOrOrder "name"
ifdefLanguageExtensions nil
unlAnalogOnly ""
allowNameCollisions "yes"
amsDefinitionViews "symbol schematic extracted"
allowIllegalIdentifiers "yes"
termDirectionMismatch "ignore"
emh_DigitalInstList nil
netClashFormat "%b_netclash"
amsExcludeParams ""
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" ""))
vlogGroundSigs "gnd!"
runNProcForSch nil
emh_PrintPwrGndConnectivity nil
unquoteNumbers t
allowSparseBuses "yes"
emh_printEmptySubckt t
vlogSupply1Sigs ""
useEffectiveCDF nil
createSpectreCktForExtracted nil
allowDeviantBuses "yes"
amsVerilogHonorSmForLeaf nil
includeInstCdfParams nil
emh_printPhysicalInst nil
iterInstExpFormat "%b_%i"
emh_macroLibList ""
enablePkgImport nil
ossEscNameMapping t
headerText "none"
amsmaxErrors "50"
termMismatch "ignore"
emh_phyCell ""
preferMEOverImplicit t
instClashFormat "%b_instclash"
initFile ""
checkForMissingShadows nil
dspfFile nil
aliasInstFormat "ams_alias_inst_%i"
dnaAssemblerWaitTime 3600
amsTempDirForShadows ""
templateFile ""
