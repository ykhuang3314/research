aliasInstFormat "ams_alias_inst_%i"
templateScript ""
emh_phyCell ""
paramDefVals ""
paramGlobalDefVal "0"
instClashFormat "%b_instclash"
emh_macroLibList ""
enablePkgImport nil
dspfFile nil
useRunDirNetlistsOnly t
dnaAssemblerWaitTime 3600
termMismatch "ignore"
amsTempDirForShadows ""
vlogSupply0Sigs ""
preferMEOverImplicit t
amsExpScalingFactor "no"
useDefparam nil
iterInstExpFormat "%b_%i"
amsVerbose nil
checkForMissingShadows nil
ossEscNameMapping t
includeFiles "disciplines.vams userDisciplines.vams"
modifyParamScope "no"
amsExcludeParams ""
amsVerilogHonorSmForLeaf nil
includeInstCdfParams nil
runNProcForSch nil
emh_PrintPwrGndConnectivity nil
unquoteNumbers t
ifdefLanguageExtensions nil
useEffectiveCDF nil
createSpectreCktForExtracted nil
emh_DigitalInstList nil
netClashFormat "%b_netclash"
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vdde!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd3!" "CDBA" "wire" "" "NO" "F" "wire" ""))
emh_printPhysicalInst nil
emh_printEmptySubckt t
amsDefinitionViews "symbol schematic extracted"
termDirectionMismatch "ignore"
initFile ""
allowSparseBuses "yes"
print_control_vars t
netlistNoWarn ""
amsPortConnectionByNameOrOrder "name"
allowDeviantBuses "yes"
upgradeMsgSevWarn ""
shortInstanceList ""
unlPortDrill ""
amsLSB_MSB nil
allowNameCollisions "yes"
upgradeMsgSevError ""
useUselibForSpice nil
amsScalarInstances t
allowIllegalIdentifiers "yes"
unlAnalogOnly ""
useFileUselib t
emh_maskLayoutView t
ignorePrintNettype nil
emh_digNetlistFile "digital.v"
hnlVerilogTermSyncUp nil
amsTraverseConfigForTextViews t
updateShadow nil
vlogSupply1Sigs ""
forceCleanTempDirForShadow nil
templateFile ""
splitNetlistFormat nil
allDspfFiles nil
netlistMaxWarn ""
useSpectreInfo "spectre veriloga spice"
headerText "none"
amsmaxErrors "50"
verboseShadowLog nil
netlistMaxWarn2331 3
vlogGroundSigs "gnd!"
desVarsToBeNetlistedAsInt ""
