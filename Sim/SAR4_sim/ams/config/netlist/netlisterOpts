iterInstExpFormat "%b_%i"
emh_macroLibList ""
enablePkgImport nil
ossEscNameMapping t
amsVerbose nil
amsExpScalingFactor "no"
amsmaxErrors "50"
emh_phyCell ""
preferMEOverImplicit t
instClashFormat "%b_instclash"
checkForMissingShadows nil
aliasInstFormat "ams_alias_inst_%i"
dnaAssemblerWaitTime 3600
amsTempDirForShadows ""
templateScript ""
termDirectionMismatch "ignore"
amsDefinitionViews "symbol schematic extracted"
emh_DigitalInstList nil
netClashFormat "%b_netclash"
amsExcludeParams ""
dspfFile nil
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" ""))
vlogGroundSigs "gnd!"
runNProcForSch nil
emh_PrintPwrGndConnectivity nil
unquoteNumbers t
termMismatch "ignore"
emh_printEmptySubckt t
vlogSupply1Sigs ""
useEffectiveCDF nil
createSpectreCktForExtracted nil
amsVerilogHonorSmForLeaf nil
initFile ""
includeInstCdfParams nil
useRunDirNetlistsOnly t
emh_printPhysicalInst nil
upgradeMsgSevWarn ""
useFileUselib t
vlogSupply0Sigs ""
modifyParamScope "no"
unlPortDrill ""
ifdefLanguageExtensions nil
amsLSB_MSB nil
allowIllegalIdentifiers "yes"
print_control_vars t
netlistNoWarn ""
useUselibForSpice nil
amsScalarInstances t
allowNameCollisions "yes"
allDspfFiles nil
emh_maskLayoutView t
allowDeviantBuses "yes"
shortInstanceList ""
ignorePrintNettype nil
emh_digNetlistFile "digital.v"
upgradeMsgSevError ""
amsPortConnectionByNameOrOrder "name"
allowSparseBuses "yes"
unlAnalogOnly ""
paramDefVals ""
verboseShadowLog nil
headerText "none"
splitNetlistFormat nil
desVarsToBeNetlistedAsInt ""
updateShadow nil
paramGlobalDefVal "0"
useSpectreInfo "spectre veriloga spice"
forceCleanTempDirForShadow nil
useDefparam nil
templateFile ""
netlistMaxWarn2331 3
includeFiles "disciplines.vams userDisciplines.vams"
amsTraverseConfigForTextViews t
netlistMaxWarn ""
