templateScript ""
emh_phyCell ""
dnaAssemblerWaitTime 3600
emh_macroLibList ""
enablePkgImport nil
amsExpScalingFactor "no"
useEffectiveCDF nil
amsScalarInstances t
amsVerilogHonorSmForLeaf nil
amsmaxErrors "50"
amsTempDirForShadows ""
createSpectreCktForExtracted nil
allDspfFiles nil
useRunDirNetlistsOnly t
updateShadow nil
dspfFile nil
unquoteNumbers t
initFile ""
amsLSB_MSB nil
checkForMissingShadows nil
amsDefinitionViews "symbol schematic extracted"
forceCleanTempDirForShadow nil
includeInstCdfParams nil
amsVerbose nil
splitNetlistFormat nil
vlogGroundSigs "gnd!"
print_control_vars t
netlistMaxWarn ""
instClashFormat "%b_instclash"
vlogSupply0Sigs ""
netClashFormat "%b_netclash"
vlogSupply1Sigs ""
netlistMaxWarn2331 3
paramDefVals ""
allowSparseBuses "yes"
termDirectionMismatch "ignore"
iterInstExpFormat "%b_%i"
netlistNoWarn ""
templateFile ""
allowDeviantBuses "yes"
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdde!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd3!" "CDBA" "wire" "" "NO" "F" "wire" ""))
unlPortDrill ""
paramGlobalDefVal "0"
aliasInstFormat "ams_alias_inst_%i"
upgradeMsgSevWarn ""
hnlVerilogTermSyncUp nil
useDefparam nil
unlAnalogOnly ""
emh_maskLayoutView t
allowNameCollisions "yes"
upgradeMsgSevError ""
amsTraverseConfigForTextViews t
preferMEOverImplicit t
includeFiles "disciplines.vams userDisciplines.vams"
ignorePrintNettype nil
emh_digNetlistFile "digital.v"
ossEscNameMapping t
amsExcludeParams ""
allowIllegalIdentifiers "yes"
useSpectreInfo "spectre veriloga spice"
amsPortConnectionByNameOrOrder "name"
emh_PrintPwrGndConnectivity nil
modifyParamScope "no"
termMismatch "ignore"
desVarsToBeNetlistedAsInt ""
runNProcForSch nil
ifdefLanguageExtensions nil
useFileUselib t
emh_DigitalInstList nil
useUselibForSpice nil
verboseShadowLog nil
emh_printPhysicalInst nil
shortInstanceList ""
headerText "none"
emh_printEmptySubckt t
