amsTraverseConfigForTextViews t
updateShadow nil
forceCleanTempDirForShadow nil
hnlVerilogTermSyncUp nil
amsmaxErrors "50"
splitNetlistFormat nil
allDspfFiles nil
initFile ""
netlistMaxWarn ""
useSpectreInfo "spectre veriloga spice"
templateFile ""
verboseShadowLog nil
netlistMaxWarn2331 3
desVarsToBeNetlistedAsInt ""
amsExpScalingFactor "no"
print_control_vars t
netlistNoWarn ""
vlogGroundSigs "gnd!"
useRunDirNetlistsOnly t
amsPortConnectionByNameOrOrder "name"
upgradeMsgSevWarn ""
shortInstanceList ""
amsVerbose nil
unlPortDrill ""
upgradeMsgSevError ""
templateScript ""
useUselibForSpice nil
unlAnalogOnly ""
amsScalarInstances t
emh_maskLayoutView t
amsLSB_MSB nil
useFileUselib t
vlogSupply1Sigs ""
ignorePrintNettype nil
emh_digNetlistFile "digital.v"
amsExcludeParams ""
useEffectiveCDF nil
unquoteNumbers t
paramGlobalDefVal "0"
runNProcForSch nil
emh_PrintPwrGndConnectivity nil
paramDefVals ""
includeInstCdfParams nil
createSpectreCktForExtracted nil
amsVerilogHonorSmForLeaf nil
headerText "none"
vlogSupply0Sigs ""
emh_DigitalInstList nil
amsDefinitionViews "symbol schematic extracted"
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" ""))
includeFiles "disciplines.vams userDisciplines.vams"
emh_printPhysicalInst nil
useDefparam nil
emh_printEmptySubckt t
netClashFormat "%b_netclash"
termDirectionMismatch "ignore"
ifdefLanguageExtensions nil
allowIllegalIdentifiers "yes"
emh_phyCell ""
instClashFormat "%b_instclash"
allowNameCollisions "yes"
emh_macroLibList ""
enablePkgImport nil
dspfFile nil
modifyParamScope "no"
aliasInstFormat "ams_alias_inst_%i"
ossEscNameMapping t
dnaAssemblerWaitTime 3600
termMismatch "ignore"
amsTempDirForShadows ""
iterInstExpFormat "%b_%i"
allowSparseBuses "yes"
preferMEOverImplicit t
checkForMissingShadows nil
allowDeviantBuses "yes"
