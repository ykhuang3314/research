amsTraverseConfigForTextViews t
checkForMissingShadows nil
hnlVerilogTermSyncUp nil
dnaAssemblerWaitTime 3600
amsTempDirForShadows ""
vlogSupply1Sigs ""
allDspfFiles nil
vlogGroundSigs "gnd!"
emh_macroLibList ""
useSpectreInfo "spectre veriloga spice"
enablePkgImport nil
verboseShadowLog nil
headerText "none"
emh_phyCell ""
desVarsToBeNetlistedAsInt ""
initFile ""
allowSparseBuses "yes"
emh_printEmptySubckt t
amsPortConnectionByNameOrOrder "name"
emh_printPhysicalInst nil
allowDeviantBuses "yes"
shortInstanceList ""
allowIllegalIdentifiers "yes"
emh_DigitalInstList nil
allowNameCollisions "yes"
useUselibForSpice nil
amsScalarInstances t
runNProcForSch nil
emh_PrintPwrGndConnectivity nil
amsExcludeParams ""
amsLSB_MSB nil
useFileUselib t
useEffectiveCDF nil
ignorePrintNettype nil
emh_digNetlistFile "digital.v"
unquoteNumbers t
emh_maskLayoutView t
includeInstCdfParams nil
templateFile ""
createSpectreCktForExtracted nil
unlAnalogOnly ""
amsVerilogHonorSmForLeaf nil
upgradeMsgSevError ""
amsDefinitionViews "symbol schematic extracted"
ifdefLanguageExtensions nil
unlPortDrill ""
globalSignals (("" "D" "gnd!" "CDBA" "wire" "" "YES" "F" "wire" "") ("" "D" "vdde!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd3!" "CDBA" "wire" "" "NO" "F" "wire" "") ("" "D" "vdd!" "CDBA" "wire" "" "NO" "F" "wire" ""))
upgradeMsgSevWarn ""
modifyParamScope "no"
netClashFormat "%b_netclash"
print_control_vars t
netlistNoWarn ""
amsmaxErrors "50"
termDirectionMismatch "ignore"
netlistMaxWarn2331 3
includeFiles "disciplines.vams userDisciplines.vams"
instClashFormat "%b_instclash"
templateScript ""
useDefparam nil
netlistMaxWarn ""
dspfFile nil
aliasInstFormat "ams_alias_inst_%i"
ossEscNameMapping t
amsExpScalingFactor "no"
useRunDirNetlistsOnly t
termMismatch "ignore"
splitNetlistFormat nil
paramGlobalDefVal "0"
iterInstExpFormat "%b_%i"
preferMEOverImplicit t
paramDefVals ""
forceCleanTempDirForShadow nil
amsVerbose nil
updateShadow nil
vlogSupply0Sigs ""
